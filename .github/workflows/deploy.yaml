name: Deploy

on:
  workflow_run:
    workflows: [Run Tests]
    types: [completed]
    branches: [main]

jobs:
  publish-extension:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    environment: production
    env:
      CURSORLESS_REPO_ROOT: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm
      - run: pnpm --color install
      - run: pnpm --color compile
      - run: pnpm --color --filter '!cursorless-org' --filter '!cursorless-org-*' build
        env:
          CURSORLESS_DEPLOY: true
      - name: Publish to Open VSX Registry
        id: publishToOpenVSX
        uses: HaaLeo/publish-vscode-extension@v1
        with:
          pat: ${{ secrets.OPEN_VSX_TOKEN }}
          packagePath: packages/cursorless-vscode/dist
      - name: Publish to Visual Studio Marketplace
        uses: HaaLeo/publish-vscode-extension@v1
        with:
          pat: ${{ secrets.VS_MARKETPLACE_TOKEN }}
          registryUrl: https://marketplace.visualstudio.com
          extensionFile: ${{ steps.publishToOpenVSX.outputs.vsixPath }}

  push-cursorless-nvim:
    name: Push compiled files to talon.nvim plugin
    runs-on: ubuntu-latest
    environment: production
    permissions:
      deployments: write
      contents: write
      statuses: write
      actions: write
      checks: read
    steps:
      - uses: fidgetingbits/get-github-app-pat@v1
        id: githubAppAuth
        with:
          app-id: ${{ vars.BOT_ID }}
          app-installation-id: ${{ vars.BOT_INSTALLATION_ID }}
          app-private-key: ${{ secrets.BOT_PRIVATE_KEY }}
      - uses: actions/checkout@v3
        with:
          repository: hands-free-vim/cursorless.nvim
          fetch-depth: 0
          # persist-credentials: false
          # token: ${{ steps.githubAppAuth.outputs.access-token }}
      - run: pnpm --color install
      - run: pnpm --color compile
      - run: pnpm --color --filter '!cursorless-org' --filter '!cursorless-org-*' build
        env:
          CURSORLESS_DEPLOY: true
      - name: Configure GPG Key
        run: |
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
        env:
          GPG_SIGNING_KEY: ${{ secrets.BOT_GPG_SIGNING_KEY }}

      - name: git config
        run: |
          git config user.name hands-free-vim-bot
          git config user.email 165344898+hands-free-vim-bot@users.noreply.github.com
          git config user.signingkey D13230A2E34373A0
          git config commit.gpgsign true
      - run: bash -x scripts/deploy-cursorless-nvim.sh
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          #github_token: ${{ steps.githubAppAuth.outputs.access-token }}
          repository: hands-free-vim/cursorless.nvim
          # force_with_lease: true

  push-cursorless-talon:
    name: Push cursorless-talon subrepo
    runs-on: ubuntu-latest
    needs: publish-extension
    environment: production
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.CURSORLESS_BOT_TOKEN }}
      - name: Configure GPG Key
        run: |
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
        env:
          GPG_SIGNING_KEY: ${{ secrets.CURSORLESS_BOT_GPG_SIGNING_KEY }}
      - name: git config
        run: |
          git config user.name cursorless-bot
          git config user.email 98099035+cursorless-bot@users.noreply.github.com
          git config user.signingkey A9387720AFC62221
          git config commit.gpgsign true
      - run: bash -x scripts/deploy-cursorless-talon.sh

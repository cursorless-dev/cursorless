name: Run Tests
permissions: read-all
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  merge_group:
    branches: [main]

jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        # XXX: restore this once neovim tests work in CI
        # os: [macos-latest, ubuntu-latest, windows-latest]
        os: [windows-latest]
        app_version: [stable]
        # XXX: restore this once neovim tests work in CI
        # include:
        #   - os: ubuntu-latest
        #     app_version: legacy
    runs-on: ${{ matrix.os }}
    env:
      APP_VERSION: ${{ matrix.app_version }}
      APP_CRASH_DIR: ${{ github.workspace }}/artifacts/dumps
      APP_LOGS_DIR: ${{ github.workspace }}/artifacts/logs
      CURSORLESS_REPO_ROOT: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm
      - run: mkdir -p "${{ env.APP_CRASH_DIR }}" "${{ env.APP_LOGS_DIR }}"
        shell: bash
      # XXX: commenting for now because we added already built cursorless.nvim in this branch to speed things up in CI
      # - run: pnpm --color install
      # - run: pnpm --color compile
      # XXX: restore this once neovim tests work in CI
      # - run: pnpm --color --filter '!cursorless-org' --filter '!cursorless-org-*' build
      # - run: xvfb-run -a pnpm --color test
      #   if: runner.os == 'Linux'
      # - run: pnpm --color test
      #   if: runner.os != 'Linux'
      # XXX: delete this because it doesn't work
      # - name: Checkout themis.vim
      #   uses: actions/checkout@v4
      #   with:
      #     repository: thinca/vim-themis
      #     path: vim-themis
      # testing - D:\a\cursorless\cursorless (to remove)
      - run: pwd
      - run: dir C:\Users\runneradmin\AppData\Local
      #     Directory: C:\Users\runneradmin\AppData\Local
      # Mode                 LastWriteTime         Length Name
      # ----                 -------------         ------ ----
      # d----           5/15/2024 11:25 PM                .IdentityService
      # d----           5/15/2024 11:24 PM                AzureFunctionsTools
      # d----           5/16/2024 11:19 AM                GitHub
      # d----           5/15/2024 11:13 PM                Google
      # d----           5/16/2024 11:13 AM                Microsoft
      # d----           5/15/2024 11:17 PM                Microsoft SDKs
      # d----           5/16/2024 11:14 AM                Mozilla
      # d----           5/16/2024 11:20 AM                node
      # d----           5/15/2024 11:13 PM                Packages
      # d----           5/15/2024 11:14 PM                PeerDistRepub
      # d----           5/16/2024 11:20 AM                pnpm
      # d----           5/15/2024 11:17 PM                ServiceHub
      # d----           5/16/2024 11:21 AM                Temp
      - name: Install cursorless.nvim dependencies
        run: npm install -g neovim@5.1.0
      - run: git clone https://github.com/vim-scripts/BufOnly.vim C:\Users\runneradmin\BufOnly.vim
      - run: git clone https://github.com/hands-free-vim/talon.nvim C:\Users\runneradmin\talon.nvim
      - run: C:\Users\runneradmin\nvim-stable\bin\nvim-qt.exe -l ${{ github.workspace }}\packages\test-harness\src\config\empty.lua
      - run: dir C:\Users\runneradmin\AppData\Local\nvim
      - name: Install Neovim
        uses: rhysd/action-setup-vim@v1
        id: vim
        with:
          version: stable
          neovim: true
      # testing (to remove)
      - run: dir C:\Users\runneradmin\AppData\Local
      - run: dir C:\Users\runneradmin\AppData\Local\nvim
      # XXX: delete this because it doesn't work
      # - name: Run neovim unit tests using themis.vim
      #   env:
      #     THEMIS_VIM: ${{ steps.vim.outputs.executable }}
      #     # PROFILE_LOG: profile.txt
      #   run: |
      #     echo "${THEMIS_VIM}"
      #     ./vim-themis/bin/themis ./test/all.vimspec
      - name: Run neovim unit tests using test-harness
        run: pnpm -F @cursorless/test-harness testNeovim
        if: runner.os != 'Linux'
        env:
          APP_PATH: ${{ steps.vim.outputs.executable }}
      # XXX: enable this once neovim tests work in CI for Windows
      # - run: xvfb-run -a pnpm -F @cursorless/test-harness testNeovim
      #   if: runner.os == 'Linux'
      - name: Create vscode dist that can be installed locally
        run: pnpm -F @cursorless/cursorless-vscode populate-dist --local-install
        if: runner.os == 'Linux' && matrix.app_version == 'stable'
      # XXX: restore this once neovim tests work in CI
      # - name: Test create vsix
      #   id: createVsix
      #   uses: HaaLeo/publish-vscode-extension@v1
      #   with:
      #     pat: none
      #     packagePath: packages/cursorless-vscode/dist
      #     dryRun: true
      # - run: mv ${{ steps.createVsix.outputs.vsixPath }} cursorless-development.vsix
      #   if: runner.os == 'Linux' && matrix.app_version == 'stable'
      # - name: Upload vsix
      #   uses: actions/upload-artifact@v4
      #   if: runner.os == 'Linux' && matrix.app_version == 'stable'
      #   with:
      #     name: vsix
      #     path: cursorless-development.vsix
      - name: Archive logs
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: ${{ env.APP_LOGS_DIR }}
        if: failure()
      - name: Archive dumps
        uses: actions/upload-artifact@v4
        with:
          name: dumps
          path: ${{ env.APP_CRASH_DIR }}
        if: failure()

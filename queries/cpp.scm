;; import c.scm

;; Generated by the following command:
;;  >  curl https://raw.githubusercontent.com/tree-sitter/tree-sitter-cpp/master/src/node-types.json | jq '[.[] | select(.type == "compound_statement") | .children.types[].type] + [.[] | select(.type == "_statement") | .subtypes[].type]'
[
  (alias_declaration)
  (namespace_definition)
  (static_assert_declaration)
  (template_declaration)
  (template_instantiation)
  (using_declaration)
  (for_range_loop)
  (throw_statement)
  (try_statement)
] @statement

[
  (class_specifier)
] @class

(_
  (class_specifier
    name: (_) @className
  ) @_.domain.start
  ";"? @_.domain.end
)

;;!! void ClassName::method() {}
(function_definition
  declarator: (_
    declarator: (_
      namespace: (_) @className
    )
  )
) @_.domain

(lambda_expression) @anonymousFunction
(attribute) @attribute

;; >  curl https://raw.githubusercontent.com/tree-sitter/tree-sitter-cpp/master/src/node-types.json | jq '[.[] | select(.type == "_type_specifier") | .subtypes[].type]'
[
  (auto)
  (class_specifier)
  (decltype)
  (dependent_type)
  (scoped_type_identifier)
  (template_type)
] @type

(optional_parameter_declaration
  default_value: (_) @value
) @_.domain

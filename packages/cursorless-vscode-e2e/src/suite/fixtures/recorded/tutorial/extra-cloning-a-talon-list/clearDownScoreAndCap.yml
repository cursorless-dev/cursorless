languageId: python
command:
  spokenForm: clear down score and cap
  version: 2
  targets:
    - type: list
      elements:
        - type: primitive
          mark: {type: decoratedSymbol, symbolColor: default, character: _}
        - type: primitive
          mark: {type: decoratedSymbol, symbolColor: default, character: c}
  usePrePhraseSnapshot: false
  action: {name: clearAndSetSelection}
initialState:
  documentContents: |-
    from talon import Context, Module

    mod = Module()
    ctx = Context()

    mod.list("cursorless_walkthrough_list", desc="My tutorial list")
    ctx.list['user.cursorless_walkthrough_list'] = {
        "spoken form": "whatever",
    }

    mod.list("cursorless_walkthrough_list", desc="My tutorial list")
    ctx.list['user.cursorless_walkthrough_list'] = {
        "spoken form": "whatever",
    }
  selections:
    - anchor: {line: 13, character: 1}
      active: {line: 13, character: 1}
  marks:
    default._:
      start: {line: 10, character: 10}
      end: {line: 10, character: 37}
    default.c:
      start: {line: 11, character: 15}
      end: {line: 11, character: 42}
finalState:
  documentContents: |-
    from talon import Context, Module

    mod = Module()
    ctx = Context()

    mod.list("cursorless_walkthrough_list", desc="My tutorial list")
    ctx.list['user.cursorless_walkthrough_list'] = {
        "spoken form": "whatever",
    }

    mod.list("", desc="My tutorial list")
    ctx.list['user.'] = {
        "spoken form": "whatever",
    }
  selections:
    - anchor: {line: 10, character: 10}
      active: {line: 10, character: 10}
    - anchor: {line: 11, character: 15}
      active: {line: 11, character: 15}
  thatMark:
    - anchor: {line: 10, character: 10}
      active: {line: 10, character: 10}
    - anchor: {line: 11, character: 15}
      active: {line: 11, character: 15}
fullTargets: [{type: list, elements: [{type: primitive, mark: {type: decoratedSymbol, symbolColor: default, character: _}, selectionType: token, position: contents, insideOutsideType: inside, modifier: {type: identity}}, {type: primitive, mark: {type: decoratedSymbol, symbolColor: default, character: c}, selectionType: token, position: contents, insideOutsideType: inside, modifier: {type: identity}}]}]

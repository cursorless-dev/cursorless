languageId: python
command:
  spokenForm: clear core sun
  version: 2
  targets:
    - type: primitive
      mark: {type: decoratedSymbol, symbolColor: default, character: s}
      modifiers:
        - {type: interiorOnly}
        - type: containingScope
          scopeType: {type: surroundingPair, delimiter: any}
  usePrePhraseSnapshot: false
  action: {name: clearAndSetSelection}
initialState:
  documentContents: |-
    from talon import Context, Module

    mod = Module()
    ctx = Context()

    mod.list("cursorless_walkthrough_list", desc="My tutorial list")
    ctx.list['user.cursorless_walkthrough_list'] = {
        "spoken form": "whatever",
    }

    mod.list("emoji", desc="Emojis")
    ctx.list['user.emoji'] = {
        "spoken form": "whatever",
    }
  selections:
    - anchor: {line: 10, character: 30}
      active: {line: 10, character: 30}
  marks:
    default.s:
      start: {line: 12, character: 5}
      end: {line: 12, character: 11}
finalState:
  documentContents: |-
    from talon import Context, Module

    mod = Module()
    ctx = Context()

    mod.list("cursorless_walkthrough_list", desc="My tutorial list")
    ctx.list['user.cursorless_walkthrough_list'] = {
        "spoken form": "whatever",
    }

    mod.list("emoji", desc="Emojis")
    ctx.list['user.emoji'] = {
        "": "whatever",
    }
  selections:
    - anchor: {line: 12, character: 5}
      active: {line: 12, character: 5}
  thatMark:
    - anchor: {line: 12, character: 5}
      active: {line: 12, character: 5}
fullTargets: [{type: primitive, mark: {type: decoratedSymbol, symbolColor: default, character: s}, selectionType: token, position: contents, insideOutsideType: inside, modifier: {type: surroundingPair, delimiter: any, delimiterInclusion: interiorOnly}}]

languageId: typescript
command:
  spokenForm: take every block funk whale
  version: 2
  targets:
    - type: primitive
      modifiers:
        - type: everyScope
          scopeType: {type: paragraph}
        - type: containingScope
          scopeType: {type: namedFunction}
      mark: {type: decoratedSymbol, symbolColor: default, character: w}
  usePrePhraseSnapshot: true
  action: {name: setSelection}
initialState:
  documentContents: |-
    function whatever() {
        const testing = "hello";

        const again = "hello";
    }

    function another() {
        const testing = "hello";
    }
  selections:
    - anchor: {line: 6, character: 16}
      active: {line: 6, character: 16}
  marks:
    default.w:
      start: {line: 0, character: 9}
      end: {line: 0, character: 17}
finalState:
  documentContents: |-
    function whatever() {
        const testing = "hello";

        const again = "hello";
    }

    function another() {
        const testing = "hello";
    }
  selections:
    - anchor: {line: 0, character: 0}
      active: {line: 1, character: 28}
    - anchor: {line: 3, character: 4}
      active: {line: 4, character: 1}
-- initial --
0  |function whatever() {
hat          [------]
             w
1  |    const testing = "hello";
2  |
3  |    const again = "hello";
4  |}
5  |
6  |function another() {
sel                 !
7  |    const testing = "hello";
8  |}
-- final --
0  |function whatever() {
sel [--------------------
1  |    const testing = "hello";
sel --------------------------->
2  |
3  |    const again = "hello";
sel     [---------------------
4  |}
sel >
5  |
6  |function another() {
7  |    const testing = "hello";
8  |}

languageId: typescript
command:
  spokenForm: bring item air after cap
  version: 2
  targets:
    - type: primitive
      mark: {type: decoratedSymbol, symbolColor: default, character: a}
      modifiers:
        - type: containingScope
          scopeType: {type: collectionItem}
    - type: primitive
      mark: {type: decoratedSymbol, symbolColor: default, character: c}
      modifiers:
        - {type: position, position: after}
  usePrePhraseSnapshot: true
  action: {name: replaceWithTarget}
initialState:
  documentContents: |-
    [
        a,
        b,
        c
    ]
  selections:
    - anchor: {line: 0, character: 0}
      active: {line: 0, character: 0}
  marks:
    default.a:
      start: {line: 1, character: 4}
      end: {line: 1, character: 5}
    default.c:
      start: {line: 3, character: 4}
      end: {line: 3, character: 5}
finalState:
  documentContents: |-
    [
        a,
        b,
        c,
        a
    ]
  selections:
    - anchor: {line: 0, character: 0}
      active: {line: 0, character: 0}
  thatMark:
    - type: UntypedTarget
      contentRange:
        start: {line: 4, character: 4}
        end: {line: 4, character: 5}
      isReversed: false
      hasExplicitRange: true
  sourceMark:
    - type: UntypedTarget
      contentRange:
        start: {line: 1, character: 4}
        end: {line: 1, character: 5}
      isReversed: false
      hasExplicitRange: true
-- initial --
0  |[
sel !
1  |    a,
hat     #
        a
2  |    b,
3  |    c
hat     #
        c
4  |]
-- final --
0   |[
sel  !
1   |    a,
src      #
2   |    b,
3   |    c,
4   |    a
that     #
5   |]

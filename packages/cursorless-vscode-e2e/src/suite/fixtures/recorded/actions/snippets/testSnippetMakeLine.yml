languageId: plaintext
command:
  version: 4
  spokenForm: test snippet make line
  action:
    name: generateSnippet
    args: [testSnippet]
  targets:
    - type: primitive
      modifiers:
        - type: containingScope
          scopeType: {type: line}
  usePrePhraseSnapshot: true
spokenFormError: generateSnippet.snippetName
initialState:
  documentContents: \textbf{$foo}
  selections:
    - anchor: {line: 0, character: 9}
      active: {line: 0, character: 12}
  marks: {}
finalState:
  documentContents: |-
    {
      "testSnippet": {
        "definitions": [
          {
            "scope": {
              "langIds": [
                "plaintext"
              ]
            },
            "body": [
              "\\textbf{\\$$variable1}"
            ]
          }
        ],
        "description": "",
        "variables": {
          "variable1": {}
        }
      }
    }
  selections:
    - anchor: {line: 10, character: 24}
      active: {line: 10, character: 33}
    - anchor: {line: 16, character: 7}
      active: {line: 16, character: 16}
  thatMark:
    - type: UntypedTarget
      contentRange:
        start: {line: 0, character: 0}
        end: {line: 0, character: 13}
      isReversed: false
      hasExplicitRange: true
-- initial --
0  |\textbf{$foo}
sel          [->
-- final --
0   |{
that [-----------]
1   |  "testSnippet": {
2   |    "definitions": [
3   |      {
4   |        "scope": {
5   |          "langIds": [
6   |            "plaintext"
7   |          ]
8   |        },
9   |        "body": [
10  |          "\\textbf{\\$$variable1}"
sel                          [------->
11  |        ]
12  |      }
13  |    ],
14  |    "description": "",
15  |    "variables": {
16  |      "variable1": {}
sel         [------->
17  |    }
18  |  }
19  |}

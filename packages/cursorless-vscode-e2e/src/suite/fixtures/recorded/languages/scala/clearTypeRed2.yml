languageId: scala
command:
  version: 1
  spokenForm: change type red
  action: clearAndSetSelection
  targets:
    - type: primitive
      modifier: {type: containingScope, scopeType: type, includeSiblings: false}
      mark: {type: decoratedSymbol, symbolColor: default, character: r}
initialState:
  documentContents: |
    class TypesAhoy() {
      val foo: List[String] = List("foo")
    }
  selections:
    - anchor: {line: 0, character: 0}
      active: {line: 0, character: 0}
  marks:
    default.r:
      start: {line: 1, character: 16}
      end: {line: 1, character: 22}
finalState:
  documentContents: |
    class TypesAhoy() {
      val foo:  = List("foo")
    }
  selections:
    - anchor: {line: 1, character: 11}
      active: {line: 1, character: 11}
-- initial --
0  |class TypesAhoy() {
sel !
1  |  val foo: List[String] = List("foo")
hat                 [----]
                      r
2  |}
3  |
-- final --
0  |class TypesAhoy() {
1  |  val foo:  = List("foo")
sel            !
2  |}
3  |

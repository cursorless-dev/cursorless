type Point = (Double, Double)

fib 0 = 0
fib 1 = 1
fib n = fib (n-1) + fib (n-2)

map f [] = []
map f (x:xs) = f x : map f xs

---

[#1 Content] = 2:0-2:3
0| type Point = (Double, Double)

1|

2| fib 0 = 0
  >---<
3| fib 1 = 1

4| fib n = fib (n-1) + fib (n-2)

5|

6| map f [] = []

7| map f (x:xs) = f x : map f xs

8|


[#1 Removal] = 2:0-2:4
0| type Point = (Double, Double)

1|

2| fib 0 = 0
  >----<
3| fib 1 = 1

4| fib n = fib (n-1) + fib (n-2)

5|

6| map f [] = []

7| map f (x:xs) = f x : map f xs

8|


[#1 Trailing delimiter] = 2:3-2:4
0| type Point = (Double, Double)

1|

2| fib 0 = 0
     >-<
3| fib 1 = 1

4| fib n = fib (n-1) + fib (n-2)

5|

6| map f [] = []

7| map f (x:xs) = f x : map f xs

8|


[#1 Domain] = 2:0-4:29
0| type Point = (Double, Double)

1|

2| fib 0 = 0
  >---------
3| fib 1 = 1
   ---------
4| fib n = fib (n-1) + fib (n-2)
   -----------------------------<
5|

6| map f [] = []

7| map f (x:xs) = f x : map f xs

8|


[#1 Insertion delimiter] = " "


[#2 Content] = 6:0-6:3
0| type Point = (Double, Double)

1|

2| fib 0 = 0

3| fib 1 = 1

4| fib n = fib (n-1) + fib (n-2)

5|

6| map f [] = []
  >---<
7| map f (x:xs) = f x : map f xs

8|


[#2 Removal] = 6:0-6:4
0| type Point = (Double, Double)

1|

2| fib 0 = 0

3| fib 1 = 1

4| fib n = fib (n-1) + fib (n-2)

5|

6| map f [] = []
  >----<
7| map f (x:xs) = f x : map f xs

8|


[#2 Trailing delimiter] = 6:3-6:4
0| type Point = (Double, Double)

1|

2| fib 0 = 0

3| fib 1 = 1

4| fib n = fib (n-1) + fib (n-2)

5|

6| map f [] = []
     >-<
7| map f (x:xs) = f x : map f xs

8|


[#2 Domain] = 6:0-7:29
0| type Point = (Double, Double)

1|

2| fib 0 = 0

3| fib 1 = 1

4| fib n = fib (n-1) + fib (n-2)

5|

6| map f [] = []
  >-------------
7| map f (x:xs) = f x : map f xs
   -----------------------------<
8|


[#2 Insertion delimiter] = " "

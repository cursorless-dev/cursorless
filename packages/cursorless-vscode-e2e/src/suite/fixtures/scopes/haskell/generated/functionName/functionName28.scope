id :: a -> a
id x = x

const :: a -> b -> a
const x y = x

fib :: Integer -> Integer
fib 0 = 0
fib 1 = 1
fib n = fib (n-1) + fib (n-2)

---

[#1 Content] = 1:3-1:4
0| id :: a -> a

1| id x = x
     >-<
2|

3| const :: a -> b -> a

4| const x y = x

5|

6| fib :: Integer -> Integer

7| fib 0 = 0

8| fib 1 = 1

9| fib n = fib (n-1) + fib (n-2)

10|


[#1 Removal] = 1:3-1:5
0| id :: a -> a

1| id x = x
     >--<
2|

3| const :: a -> b -> a

4| const x y = x

5|

6| fib :: Integer -> Integer

7| fib 0 = 0

8| fib 1 = 1

9| fib n = fib (n-1) + fib (n-2)

10|


[#1 Leading delimiter] = 1:2-1:3
0| id :: a -> a

1| id x = x
    >-<
2|

3| const :: a -> b -> a

4| const x y = x

5|

6| fib :: Integer -> Integer

7| fib 0 = 0

8| fib 1 = 1

9| fib n = fib (n-1) + fib (n-2)

10|


[#1 Trailing delimiter] = 1:4-1:5
0| id :: a -> a

1| id x = x
      >-<
2|

3| const :: a -> b -> a

4| const x y = x

5|

6| fib :: Integer -> Integer

7| fib 0 = 0

8| fib 1 = 1

9| fib n = fib (n-1) + fib (n-2)

10|


[#1 Domain] = 1:3-1:8
0| id :: a -> a

1| id x = x
     >-----<
2|

3| const :: a -> b -> a

4| const x y = x

5|

6| fib :: Integer -> Integer

7| fib 0 = 0

8| fib 1 = 1

9| fib n = fib (n-1) + fib (n-2)

10|


[#1 Insertion delimiter] = " "


[#2 Content] = 3:0-3:5
0| id :: a -> a

1| id x = x

2|

3| const :: a -> b -> a
  >-----<
4| const x y = x

5|

6| fib :: Integer -> Integer

7| fib 0 = 0

8| fib 1 = 1

9| fib n = fib (n-1) + fib (n-2)

10|


[#2 Removal] = 3:0-3:6
0| id :: a -> a

1| id x = x

2|

3| const :: a -> b -> a
  >------<
4| const x y = x

5|

6| fib :: Integer -> Integer

7| fib 0 = 0

8| fib 1 = 1

9| fib n = fib (n-1) + fib (n-2)

10|


[#2 Trailing delimiter] = 3:5-3:6
0| id :: a -> a

1| id x = x

2|

3| const :: a -> b -> a
       >-<
4| const x y = x

5|

6| fib :: Integer -> Integer

7| fib 0 = 0

8| fib 1 = 1

9| fib n = fib (n-1) + fib (n-2)

10|


[#2 Domain] = 3:0-4:13
0| id :: a -> a

1| id x = x

2|

3| const :: a -> b -> a
  >--------------------
4| const x y = x
   -------------<
5|

6| fib :: Integer -> Integer

7| fib 0 = 0

8| fib 1 = 1

9| fib n = fib (n-1) + fib (n-2)

10|


[#2 Insertion delimiter] = " "


[#3 Content] = 9:4-9:5
0| id :: a -> a

1| id x = x

2|

3| const :: a -> b -> a

4| const x y = x

5|

6| fib :: Integer -> Integer

7| fib 0 = 0

8| fib 1 = 1

9| fib n = fib (n-1) + fib (n-2)
      >-<
10|


[#3 Removal] = 9:4-9:6
0| id :: a -> a

1| id x = x

2|

3| const :: a -> b -> a

4| const x y = x

5|

6| fib :: Integer -> Integer

7| fib 0 = 0

8| fib 1 = 1

9| fib n = fib (n-1) + fib (n-2)
      >--<
10|


[#3 Leading delimiter] = 9:3-9:4
0| id :: a -> a

1| id x = x

2|

3| const :: a -> b -> a

4| const x y = x

5|

6| fib :: Integer -> Integer

7| fib 0 = 0

8| fib 1 = 1

9| fib n = fib (n-1) + fib (n-2)
     >-<
10|


[#3 Trailing delimiter] = 9:5-9:6
0| id :: a -> a

1| id x = x

2|

3| const :: a -> b -> a

4| const x y = x

5|

6| fib :: Integer -> Integer

7| fib 0 = 0

8| fib 1 = 1

9| fib n = fib (n-1) + fib (n-2)
       >-<
10|


[#3 Domain] = 9:4-9:29
0| id :: a -> a

1| id x = x

2|

3| const :: a -> b -> a

4| const x y = x

5|

6| fib :: Integer -> Integer

7| fib 0 = 0

8| fib 1 = 1

9| fib n = fib (n-1) + fib (n-2)
      >-------------------------<
10|


[#3 Insertion delimiter] = " "

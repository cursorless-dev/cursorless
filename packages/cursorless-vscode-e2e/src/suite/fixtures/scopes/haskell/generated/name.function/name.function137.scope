type Point = (Double, Double)

fib :: Integer -> Integer
fib 0 = 0
fib 1 = 1
fib n = fib (n-1) + fib (n-2)

map f [] = []
map f (x:xs) = f x : map f xs

---

[#1 Content] = 5:4-5:5
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)
      >-<
6|

7| map f [] = []

8| map f (x:xs) = f x : map f xs

9|


[#1 Removal] = 5:4-5:6
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)
      >--<
6|

7| map f [] = []

8| map f (x:xs) = f x : map f xs

9|


[#1 Leading delimiter] = 5:3-5:4
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)
     >-<
6|

7| map f [] = []

8| map f (x:xs) = f x : map f xs

9|


[#1 Trailing delimiter] = 5:5-5:6
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)
       >-<
6|

7| map f [] = []

8| map f (x:xs) = f x : map f xs

9|


[#1 Domain] = 5:4-5:29
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)
      >-------------------------<
6|

7| map f [] = []

8| map f (x:xs) = f x : map f xs

9|


[#1 Insertion delimiter] = " "


[#2 Content] = 7:4-7:5
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)

6|

7| map f [] = []
      >-<
8| map f (x:xs) = f x : map f xs

9|


[#2 Removal] = 7:4-7:6
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)

6|

7| map f [] = []
      >--<
8| map f (x:xs) = f x : map f xs

9|


[#2 Leading delimiter] = 7:3-7:4
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)

6|

7| map f [] = []
     >-<
8| map f (x:xs) = f x : map f xs

9|


[#2 Trailing delimiter] = 7:5-7:6
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)

6|

7| map f [] = []
       >-<
8| map f (x:xs) = f x : map f xs

9|


[#2 Domain] = 7:4-7:13
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)

6|

7| map f [] = []
      >---------<
8| map f (x:xs) = f x : map f xs

9|


[#2 Insertion delimiter] = " "


[#3 Content] = 8:4-8:5
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)

6|

7| map f [] = []

8| map f (x:xs) = f x : map f xs
      >-<
9|


[#3 Removal] = 8:4-8:6
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)

6|

7| map f [] = []

8| map f (x:xs) = f x : map f xs
      >--<
9|


[#3 Leading delimiter] = 8:3-8:4
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)

6|

7| map f [] = []

8| map f (x:xs) = f x : map f xs
     >-<
9|


[#3 Trailing delimiter] = 8:5-8:6
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)

6|

7| map f [] = []

8| map f (x:xs) = f x : map f xs
       >-<
9|


[#3 Domain] = 8:4-8:29
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)

6|

7| map f [] = []

8| map f (x:xs) = f x : map f xs
      >-------------------------<
9|


[#3 Insertion delimiter] = " "

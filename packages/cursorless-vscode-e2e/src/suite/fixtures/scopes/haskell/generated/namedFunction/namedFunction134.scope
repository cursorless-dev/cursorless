type Point = (Double, Double)

fib :: Integer -> Integer
fib 0 = 0
fib 1 = 1
fib n = fib (n-1) + fib (n-2)

id :: a -> a
id x = x

---

[#1 Content] =
[#1 Domain] = 5:4-5:29
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)
      >-------------------------<
6|

7| id :: a -> a

8| id x = x

9|


[#1 Removal] = 5:3-5:29
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)
     >--------------------------<
6|

7| id :: a -> a

8| id x = x

9|


[#1 Leading delimiter] = 5:3-5:4
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)
     >-<
6|

7| id :: a -> a

8| id x = x

9|


[#1 Insertion delimiter] = "\n\n"


[#2 Content] =
[#2 Domain] = 8:3-8:8
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)

6|

7| id :: a -> a

8| id x = x
     >-----<
9|


[#2 Removal] = 8:2-8:8
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)

6|

7| id :: a -> a

8| id x = x
    >------<
9|


[#2 Leading delimiter] = 8:2-8:3
0| type Point = (Double, Double)

1|

2| fib :: Integer -> Integer

3| fib 0 = 0

4| fib 1 = 1

5| fib n = fib (n-1) + fib (n-2)

6|

7| id :: a -> a

8| id x = x
    >-<
9|


[#2 Insertion delimiter] = "\n\n"

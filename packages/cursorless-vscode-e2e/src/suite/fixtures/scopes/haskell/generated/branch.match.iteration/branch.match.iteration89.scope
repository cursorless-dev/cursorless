fib :: Integer -> Integer
fib 0 = 0
fib 1 = 1
fib n = fib (n-1) + fib (n-2)

map :: (a -> b) -> [a] -> [b]
map f [] = []
map f (x:xs) = f x : map f xs

not True = False
not False = True

---

[#1 Range] =
[#1 Domain] = 3:4-3:29
0| fib :: Integer -> Integer

1| fib 0 = 0

2| fib 1 = 1

3| fib n = fib (n-1) + fib (n-2)
      >-------------------------<
4|

5| map :: (a -> b) -> [a] -> [b]

6| map f [] = []

7| map f (x:xs) = f x : map f xs

8|

9| not True = False

10| not False = True

11|



[#2 Range] =
[#2 Domain] = 6:4-6:13
0| fib :: Integer -> Integer

1| fib 0 = 0

2| fib 1 = 1

3| fib n = fib (n-1) + fib (n-2)

4|

5| map :: (a -> b) -> [a] -> [b]

6| map f [] = []
      >---------<
7| map f (x:xs) = f x : map f xs

8|

9| not True = False

10| not False = True

11|



[#3 Range] =
[#3 Domain] = 7:4-7:29
0| fib :: Integer -> Integer

1| fib 0 = 0

2| fib 1 = 1

3| fib n = fib (n-1) + fib (n-2)

4|

5| map :: (a -> b) -> [a] -> [b]

6| map f [] = []

7| map f (x:xs) = f x : map f xs
      >-------------------------<
8|

9| not True = False

10| not False = True

11|

fromEither :: (a -> c) -> (b -> c) -> Either a b -> c
fromEither f g x = case x of
    Left  l -> f l
    Right r -> g r

---

[#1 Range] =
[#1 Domain] = 1:0-3:18
0| fromEither :: (a -> c) -> (b -> c) -> Either a b -> c

1| fromEither f g x = case x of
  >----------------------------
2|     Left  l -> f l
   ------------------
3|     Right r -> g r
   ------------------<
4|



[#2 Range] =
[#2 Domain] = 2:4-2:18
0| fromEither :: (a -> c) -> (b -> c) -> Either a b -> c

1| fromEither f g x = case x of

2|     Left  l -> f l
      >--------------<
3|     Right r -> g r

4|



[#3 Range] =
[#3 Domain] = 3:4-3:18
0| fromEither :: (a -> c) -> (b -> c) -> Either a b -> c

1| fromEither f g x = case x of

2|     Left  l -> f l

3|     Right r -> g r
      >--------------<
4|

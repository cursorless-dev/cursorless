{
  "imports": {
    "cpp": ["cpp", "c"],
    "javascript": ["javascript", "javascript.core", "javascript.jsx"],
    "javascriptreact": [
      "javascriptreact",
      "javascript",
      "javascript.core",
      "javascript.jsx"
    ],
    "jsonc": ["jsonc", "json"],
    "jsonl": ["jsonl", "json"],
    "scss": ["scss", "css"],
    "typescript": ["typescript", "typescript.core", "javascript.core"],
    "typescriptreact": [
      "typescriptreact",
      "typescript.core",
      "javascript.core",
      "javascript.jsx"
    ]
  },
  "fixtures": [
    {
      "name": "scopes/c/argument/argument.actual.iteration",
      "languageId": "c",
      "facet": "argument.actual.iteration",
      "code": "foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/c/argument/argument.actual.method.iteration",
      "languageId": "c",
      "facet": "argument.actual.method.iteration",
      "code": "foo.bar(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16"
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/c/argument/argument.actual.method.multiLine",
      "languageId": "c",
      "facet": "argument.actual.method.multiLine",
      "code": "foo.bar(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/c/argument/argument.actual.method.singleLine",
      "languageId": "c",
      "facet": "argument.actual.method.singleLine",
      "code": "foo.bar(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:11",
              "removal": "0:8-0:13",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:8-0:11"
        },
        {
          "targets": [
            {
              "content": "0:13-0:16",
              "removal": "0:11-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:13-0:16"
        }
      ]
    },
    {
      "name": "scopes/c/argument/argument.actual.multiLine",
      "languageId": "c",
      "facet": "argument.actual.multiLine",
      "code": "foo(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/c/argument/argument.actual.singleLine",
      "languageId": "c",
      "facet": "argument.actual.singleLine",
      "code": "foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:4-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:7"
        },
        {
          "targets": [
            {
              "content": "0:9-0:12",
              "removal": "0:7-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:12"
        }
      ]
    },
    {
      "name": "scopes/c/argument/argument.formal.iteration",
      "languageId": "c",
      "facet": "argument.formal.iteration",
      "code": "void foo(int aaa, int bbb) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:25"
            }
          ],
          "domain": "0:0-0:29"
        }
      ]
    },
    {
      "name": "scopes/c/argument/argument.formal.multiLine",
      "languageId": "c",
      "facet": "argument.formal.multiLine",
      "code": "void foo(\n    int aaa,\n    int bbb\n) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:11",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:11"
        },
        {
          "targets": [
            {
              "content": "2:4-2:11",
              "removal": "1:11-2:11",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:11"
        }
      ]
    },
    {
      "name": "scopes/c/argument/argument.formal.singleLine",
      "languageId": "c",
      "facet": "argument.formal.singleLine",
      "code": "void foo(int aaa, int bbb) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:16",
              "removal": "0:9-0:18",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:16"
        },
        {
          "targets": [
            {
              "content": "0:18-0:25",
              "removal": "0:16-0:25",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:18-0:25"
        }
      ]
    },
    {
      "name": "scopes/c/argumentList/argumentList.actual.empty",
      "languageId": "c",
      "facet": "argumentList.actual.empty",
      "code": "foo();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:4",
              "removal": "0:4-0:4",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:5"
        }
      ]
    },
    {
      "name": "scopes/c/argumentList/argumentList.actual.method.empty",
      "languageId": "c",
      "facet": "argumentList.actual.method.empty",
      "code": "foo.bar();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:8",
              "removal": "0:8-0:8",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/c/argumentList/argumentList.actual.method.multiLine",
      "languageId": "c",
      "facet": "argumentList.actual.method.multiLine",
      "code": "foo.bar(\n    int aaa,\n    int bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:11",
              "removal": "0:8-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/c/argumentList/argumentList.actual.method.singleLine",
      "languageId": "c",
      "facet": "argumentList.actual.method.singleLine",
      "code": "foo.bar(int aaa, int bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:24",
              "removal": "0:8-0:24",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:25"
        }
      ]
    },
    {
      "name": "scopes/c/argumentList/argumentList.actual.multiLine",
      "languageId": "c",
      "facet": "argumentList.actual.multiLine",
      "code": "foo(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:4-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/c/argumentList/argumentList.actual.singleLine",
      "languageId": "c",
      "facet": "argumentList.actual.singleLine",
      "code": "foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12",
              "removal": "0:4-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/c/argumentList/argumentList.formal.empty",
      "languageId": "c",
      "facet": "argumentList.formal.empty",
      "code": "void foo() {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:9",
              "removal": "0:9-0:9",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/c/argumentList/argumentList.formal.multiLine",
      "languageId": "c",
      "facet": "argumentList.formal.multiLine",
      "code": "void foo(\n    int aaa,\n    int bbb\n) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:11",
              "removal": "0:9-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:4"
        }
      ]
    },
    {
      "name": "scopes/c/argumentList/argumentList.formal.singleLine",
      "languageId": "c",
      "facet": "argumentList.formal.singleLine",
      "code": "void foo(int aaa, int bbb) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:25",
              "removal": "0:9-0:25",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:29"
        }
      ]
    },
    {
      "name": "scopes/c/branch/branch.if.elif.else",
      "languageId": "c",
      "facet": "branch.if.elif.else",
      "code": "if (true) {}\nelse if (false) {}\nelse {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-1:5",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:12"
        },
        {
          "targets": [
            {
              "content": "1:0-1:18",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:0-1:18"
        },
        {
          "targets": [
            {
              "content": "2:0-2:7",
              "removal": "1:18-2:7",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-2:7"
        }
      ]
    },
    {
      "name": "scopes/c/branch/branch.if.else",
      "languageId": "c",
      "facet": "branch.if.else",
      "code": "if (true) {}\nelse {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-1:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:12"
        },
        {
          "targets": [
            {
              "content": "1:0-1:7",
              "removal": "0:12-1:7",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:0-1:7"
        }
      ]
    },
    {
      "name": "scopes/c/branch/branch.if.iteration",
      "languageId": "c",
      "facet": "branch.if.iteration",
      "code": "if (true) {}\nelse if (false) {}\nelse {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:7"
            }
          ],
          "domain": "0:0-2:7"
        }
      ]
    },
    {
      "name": "scopes/c/branch/branch.if",
      "languageId": "c",
      "facet": "branch.if",
      "code": "if (true) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-0:12",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/c/branch/branch.switchCase.iteration",
      "languageId": "c",
      "facet": "branch.switchCase.iteration",
      "code": "switch (value) {\n    case 0:\n        break;\n    default:\n        break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-5:0"
            }
          ],
          "domain": "0:0-5:1"
        }
      ]
    },
    {
      "name": "scopes/c/branch/branch.switchCase",
      "languageId": "c",
      "facet": "branch.switchCase",
      "code": "switch (value) {\n    case 0:\n        break;\n    default:\n        break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:14",
              "removal": "1:0-3:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-2:14"
        },
        {
          "targets": [
            {
              "content": "3:4-4:14",
              "removal": "3:0-5:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "3:4-4:14"
        }
      ]
    },
    {
      "name": "scopes/c/branch/branch.ternary.iteration",
      "languageId": "c",
      "facet": "branch.ternary.iteration",
      "code": "true ? 0 : 1;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12"
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/c/branch/branch.ternary",
      "languageId": "c",
      "facet": "branch.ternary",
      "code": "true ? 0 : 1;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:7-0:9",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:7-0:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:10-0:12",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/c/class/class.iteration.document",
      "languageId": "c",
      "facet": "class.iteration.document",
      "code": "\nstruct Foo {};\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/c/class/class",
      "languageId": "c",
      "facet": "class",
      "code": "struct Foo {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/c/class/class2",
      "languageId": "c",
      "facet": "class",
      "code": "union Foo {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/c/class/class3",
      "languageId": "c",
      "facet": "class",
      "code": "enum Foo {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-0:12",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/c/class/class4",
      "languageId": "c",
      "facet": "class",
      "code": "typedef struct { } Foo;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:23",
              "removal": "0:0-0:23",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:23"
        }
      ]
    },
    {
      "name": "scopes/c/class/class5",
      "languageId": "c",
      "facet": "class",
      "code": "typedef union { } Foo;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:22",
              "removal": "0:0-0:22",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:22"
        }
      ]
    },
    {
      "name": "scopes/c/class/class6",
      "languageId": "c",
      "facet": "class",
      "code": "typedef enum { } Foo;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:21",
              "removal": "0:0-0:21",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/c/className.iteration.document",
      "languageId": "c",
      "facet": "className.iteration.document",
      "code": "\nstruct Foo {};\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/c/className",
      "languageId": "c",
      "facet": "className",
      "code": "struct aaa { int bbb; };\nunion bbb { int ccc; };\nenum ccc { ddd, eee };\n\ntypedef struct { int fff; } ggg;\ntypedef union { int hhh; } iii;\ntypedef enum { jjj, kkk } lll;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:10",
              "removal": "0:7-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:24"
        },
        {
          "targets": [
            {
              "content": "1:6-1:9",
              "removal": "1:6-1:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:23"
        },
        {
          "targets": [
            {
              "content": "2:5-2:8",
              "removal": "2:5-2:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-2:22"
        },
        {
          "targets": [
            {
              "content": "4:28-4:31",
              "removal": "4:27-4:31",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:0-4:32"
        },
        {
          "targets": [
            {
              "content": "5:27-5:30",
              "removal": "5:26-5:30",
              "insertionDelimiter": " "
            }
          ],
          "domain": "5:0-5:31"
        },
        {
          "targets": [
            {
              "content": "6:26-6:29",
              "removal": "6:25-6:29",
              "insertionDelimiter": " "
            }
          ],
          "domain": "6:0-6:30"
        }
      ]
    },
    {
      "name": "scopes/c/collectionItem.unenclosed.iteration",
      "languageId": "c",
      "facet": "collectionItem.unenclosed.iteration",
      "code": "int foo, bar;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/c/collectionItem.unenclosed",
      "languageId": "c",
      "facet": "collectionItem.unenclosed",
      "code": "int foo, bar;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:7",
              "removal": "0:0-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:7"
        },
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:3-0:7",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:4-0:7"
        },
        {
          "targets": [
            {
              "content": "0:9-0:12",
              "removal": "0:8-0:12",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:9-0:12"
        },
        {
          "targets": [
            {
              "content": "0:9-0:13",
              "removal": "0:7-0:13",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:13"
        }
      ]
    },
    {
      "name": "scopes/c/comment.block",
      "languageId": "c",
      "facet": "comment.block",
      "code": "/*\n  the\n  comment\n*/",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:2",
              "removal": "0:0-3:2",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-3:2"
        }
      ]
    },
    {
      "name": "scopes/c/comment.line",
      "languageId": "c",
      "facet": "comment.line",
      "code": "int a; // the comment",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:21",
              "removal": "0:6-0:21",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:7-0:21"
        }
      ]
    },
    {
      "name": "scopes/c/condition/condition.doWhile",
      "languageId": "c",
      "facet": "condition.doWhile",
      "code": "do {} while (true);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:17",
              "removal": "0:13-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:19"
        }
      ]
    },
    {
      "name": "scopes/c/condition/condition.for",
      "languageId": "c",
      "facet": "condition.for",
      "code": "for (int i = 0; i < size; ++i) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:24",
              "removal": "0:15-0:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:33"
        }
      ]
    },
    {
      "name": "scopes/c/condition/condition.if",
      "languageId": "c",
      "facet": "condition.if",
      "code": "if (true) {}\nelse if (false) {}\nelse {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:8",
              "removal": "0:4-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:7"
        },
        {
          "targets": [
            {
              "content": "1:9-1:14",
              "removal": "1:9-1:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:18"
        }
      ]
    },
    {
      "name": "scopes/c/condition/condition.switchCase.iteration",
      "languageId": "c",
      "facet": "condition.switchCase.iteration",
      "code": "switch (value) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:17"
            }
          ],
          "domain": "0:0-0:18"
        }
      ]
    },
    {
      "name": "scopes/c/condition/condition.switchCase",
      "languageId": "c",
      "facet": "condition.switchCase",
      "code": "switch (value) {\n    case 0:\n        break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:9-1:10",
              "removal": "1:8-1:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-2:14"
        }
      ]
    },
    {
      "name": "scopes/c/condition/condition.ternary",
      "languageId": "c",
      "facet": "condition.ternary",
      "code": "true ? 0 : 1",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:4",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/c/condition/condition.while",
      "languageId": "c",
      "facet": "condition.while",
      "code": "while (true) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:11",
              "removal": "0:7-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:15"
        }
      ]
    },
    {
      "name": "scopes/c/disqualifyDelimiter",
      "languageId": "c",
      "facet": "disqualifyDelimiter",
      "code": "1 < 2;\n1 > 2;\n1 <= 2;\n1 >= 2;\na << 2;\na >> 2;\na <<= 2;\na >>= 2;\na->b",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "1:2-1:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "2:2-2:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "3:2-3:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "4:2-4:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "5:2-5:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "6:2-6:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "7:2-7:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "8:1-8:3"
            }
          ]
        }
      ]
    },
    {
      "name": "scopes/c/functionCall",
      "languageId": "c",
      "facet": "functionCall",
      "code": "foo();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:5",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:5"
        }
      ]
    },
    {
      "name": "scopes/c/functionCallee",
      "languageId": "c",
      "facet": "functionCallee",
      "code": "foo();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:5"
        }
      ]
    },
    {
      "name": "scopes/c/functionName/functionName.iteration.document",
      "languageId": "c",
      "facet": "functionName.iteration.document",
      "code": "\nvoid foo() {}\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/c/functionName/functionName",
      "languageId": "c",
      "facet": "functionName",
      "code": "void C::funcName() {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16",
              "removal": "0:8-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/c/functionName/functionName2",
      "languageId": "c",
      "facet": "functionName",
      "code": "void C::funcName();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16",
              "removal": "0:8-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:19"
        }
      ]
    },
    {
      "name": "scopes/c/functionName/functionName3",
      "languageId": "c",
      "facet": "functionName",
      "code": "void aaa() {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/c/functionName/functionName4",
      "languageId": "c",
      "facet": "functionName",
      "code": "void aaa();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/c/ifStatement",
      "languageId": "c",
      "facet": "ifStatement",
      "code": "void func() {\n    if (true) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:17",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-1:17"
        }
      ]
    },
    {
      "name": "scopes/c/interior/interior.class",
      "languageId": "c",
      "facet": "interior.class",
      "code": "struct aaa { int bbb; };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:21",
              "removal": "0:12-0:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:24"
        },
        {
          "targets": [
            {
              "content": "0:13-0:21",
              "removal": "0:12-0:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:11-0:23"
        }
      ]
    },
    {
      "name": "scopes/c/interior/interior.class2",
      "languageId": "c",
      "facet": "interior.class",
      "code": "typedef struct { int fff; } ggg;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:17-0:25",
              "removal": "0:16-0:26",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:32"
        },
        {
          "targets": [
            {
              "content": "0:17-0:25",
              "removal": "0:16-0:26",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:15-0:27"
        }
      ]
    },
    {
      "name": "scopes/c/interior/interior.class3",
      "languageId": "c",
      "facet": "interior.class",
      "code": "union bbb { int ccc; };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:12-0:20",
              "removal": "0:11-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:23"
        },
        {
          "targets": [
            {
              "content": "0:12-0:20",
              "removal": "0:11-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:10-0:22"
        }
      ]
    },
    {
      "name": "scopes/c/interior/interior.class4",
      "languageId": "c",
      "facet": "interior.class",
      "code": "typedef union { int hhh; } iii;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:24",
              "removal": "0:15-0:25",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:31"
        },
        {
          "targets": [
            {
              "content": "0:16-0:24",
              "removal": "0:15-0:25",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:14-0:26"
        }
      ]
    },
    {
      "name": "scopes/c/interior/interior.doWhile",
      "languageId": "c",
      "facet": "interior.doWhile",
      "code": "do { } while (true);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:5",
              "removal": "0:4-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:20"
        },
        {
          "targets": [
            {
              "content": "0:4-0:5",
              "removal": "0:4-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:3-0:6"
        },
        {
          "targets": [
            {
              "content": "0:14-0:18",
              "removal": "0:14-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:13-0:19"
        }
      ]
    },
    {
      "name": "scopes/c/interior/interior.enum",
      "languageId": "c",
      "facet": "interior.enum",
      "code": "enum Foo { };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:11",
              "removal": "0:10-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:10-0:11",
              "removal": "0:10-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:12"
        }
      ]
    },
    {
      "name": "scopes/c/interior/interior.enum2",
      "languageId": "c",
      "facet": "interior.enum",
      "code": "typedef enum { } Foo;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:14-0:15",
              "removal": "0:14-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:21"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15",
              "removal": "0:14-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:13-0:16"
        }
      ]
    },
    {
      "name": "scopes/c/interior/interior.for",
      "languageId": "c",
      "facet": "interior.for",
      "code": "for (int i = 0; i < size; ++i) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:32-0:33",
              "removal": "0:32-0:33",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:34"
        },
        {
          "targets": [
            {
              "content": "0:5-0:29",
              "removal": "0:5-0:29",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:4-0:30"
        },
        {
          "targets": [
            {
              "content": "0:32-0:33",
              "removal": "0:32-0:33",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:31-0:34"
        }
      ]
    },
    {
      "name": "scopes/c/interior/interior.function",
      "languageId": "c",
      "facet": "interior.function",
      "code": "void foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:12-0:13",
              "removal": "0:12-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:9-0:9",
              "removal": "0:9-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:8-0:10"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13",
              "removal": "0:12-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:11-0:14"
        }
      ]
    },
    {
      "name": "scopes/c/interior/interior.function2",
      "languageId": "c",
      "facet": "interior.function",
      "code": "void NS::foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:17",
              "removal": "0:16-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        },
        {
          "targets": [
            {
              "content": "0:13-0:13",
              "removal": "0:13-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:12-0:14"
        },
        {
          "targets": [
            {
              "content": "0:16-0:17",
              "removal": "0:16-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:15-0:18"
        }
      ]
    },
    {
      "name": "scopes/c/interior/interior.if",
      "languageId": "c",
      "facet": "interior.if",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:11-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:4-0:8",
              "removal": "0:4-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:3-0:9"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:11-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:10-0:13"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18",
              "removal": "1:17-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:19"
        },
        {
          "targets": [
            {
              "content": "1:9-1:14",
              "removal": "1:9-1:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:8-1:15"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18",
              "removal": "1:17-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:16-1:19"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7",
              "removal": "2:6-2:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-2:8"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7",
              "removal": "2:6-2:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:5-2:8"
        }
      ]
    },
    {
      "name": "scopes/c/interior/interior.switch",
      "languageId": "c",
      "facet": "interior.switch",
      "code": "switch (value) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:17",
              "removal": "0:16-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        },
        {
          "targets": [
            {
              "content": "0:8-0:13",
              "removal": "0:8-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:14"
        },
        {
          "targets": [
            {
              "content": "0:16-0:17",
              "removal": "0:16-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:15-0:18"
        }
      ]
    },
    {
      "name": "scopes/c/interior/interior.switchCase",
      "languageId": "c",
      "facet": "interior.switchCase",
      "code": "switch (value) {\n    case 0:\n        foo;\n        break;\n    case 1: {\n        break;\n    }\n    default:\n        break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-8:14",
              "removal": "0:16-9:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-9:1"
        },
        {
          "targets": [
            {
              "content": "0:8-0:13",
              "removal": "0:8-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:14"
        },
        {
          "targets": [
            {
              "content": "1:4-8:14",
              "removal": "0:16-9:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:15-9:1"
        },
        {
          "targets": [
            {
              "content": "2:8-3:14",
              "removal": "2:8-3:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-3:14"
        },
        {
          "targets": [
            {
              "content": "5:8-5:14",
              "removal": "4:13-6:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:4-6:5"
        },
        {
          "targets": [
            {
              "content": "5:8-5:14",
              "removal": "4:13-6:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:12-6:5"
        },
        {
          "targets": [
            {
              "content": "8:8-8:14",
              "removal": "8:8-8:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "7:4-8:14"
        }
      ]
    },
    {
      "name": "scopes/c/interior/interior.ternary",
      "languageId": "c",
      "facet": "interior.ternary",
      "code": "true ? 0 : 1",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:4",
              "removal": "0:0-0:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:4"
        },
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:7-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:11-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/c/interior/interior.while",
      "languageId": "c",
      "facet": "interior.while",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:14-0:15",
              "removal": "0:14-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:7-0:11",
              "removal": "0:7-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:6-0:12"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15",
              "removal": "0:14-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:13-0:16"
        }
      ]
    },
    {
      "name": "scopes/c/list",
      "languageId": "c",
      "facet": "list",
      "code": "int foo[3] = {a, 2, 3};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:22",
              "removal": "0:12-0:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:13-0:22"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.argument.formal.iteration",
      "languageId": "c",
      "facet": "name.argument.formal.iteration",
      "code": "void aaa(int bbb, int ccc);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:27"
            }
          ],
          "domain": "0:0-0:27"
        },
        {
          "targets": [
            {
              "content": "0:9-0:25"
            }
          ],
          "domain": "0:9-0:25"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.argument.formal.iteration2",
      "languageId": "c",
      "facet": "name.argument.formal.iteration",
      "code": "void aaa(int bbb, int ccc) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:29"
            }
          ],
          "domain": "0:0-0:29"
        },
        {
          "targets": [
            {
              "content": "0:9-0:25"
            }
          ],
          "domain": "0:9-0:25"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.argument.formal",
      "languageId": "c",
      "facet": "name.argument.formal",
      "code": "void aaa(int bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        },
        {
          "targets": [
            {
              "content": "0:13-0:16",
              "removal": "0:12-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:16"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.argument.formal2",
      "languageId": "c",
      "facet": "name.argument.formal",
      "code": "void aaa(int bbb) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:20"
        },
        {
          "targets": [
            {
              "content": "0:13-0:16",
              "removal": "0:12-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:16"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.assignment",
      "languageId": "c",
      "facet": "name.assignment",
      "code": "aaa = 0;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:8"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.assignment2",
      "languageId": "c",
      "facet": "name.assignment",
      "code": "aaa += 0;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.class",
      "languageId": "c",
      "facet": "name.class",
      "code": "struct aaa {};\nunion bbb {};\nenum ccc {};\n\ntypedef struct {} ggg;\ntypedef union {} iii;\ntypedef enum {} lll;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:10",
              "removal": "0:7-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "1:6-1:9",
              "removal": "1:6-1:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:13"
        },
        {
          "targets": [
            {
              "content": "2:5-2:8",
              "removal": "2:5-2:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-2:12"
        },
        {
          "targets": [
            {
              "content": "4:18-4:21",
              "removal": "4:17-4:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:0-4:22"
        },
        {
          "targets": [
            {
              "content": "5:17-5:20",
              "removal": "5:16-5:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "5:0-5:21"
        },
        {
          "targets": [
            {
              "content": "6:16-6:19",
              "removal": "6:15-6:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "6:0-6:20"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.enum",
      "languageId": "c",
      "facet": "name.enum",
      "code": "enum Foo {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.enum2",
      "languageId": "c",
      "facet": "name.enum",
      "code": "typedef enum {} Foo;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:19",
              "removal": "0:15-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:20"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.field.class",
      "languageId": "c",
      "facet": "name.field.class",
      "code": "struct { int bbb; };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:16",
              "removal": "0:12-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:17"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.field.class2",
      "languageId": "c",
      "facet": "name.field.class",
      "code": "union { int bbb; };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:12-0:15",
              "removal": "0:11-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:8-0:16"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.field.class3",
      "languageId": "c",
      "facet": "name.field.class",
      "code": "struct { double aaa[3]; };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:19",
              "removal": "0:16-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:23"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.field.enum",
      "languageId": "c",
      "facet": "name.field.enum",
      "code": "enum Foo {\n    bar = 0,\n    baz = 1,\n    bongo\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-4:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:11"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "2:4-2:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:11"
        },
        {
          "targets": [
            {
              "content": "3:4-3:9",
              "removal": "3:0-4:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "3:4-3:9"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.function",
      "languageId": "c",
      "facet": "name.function",
      "code": "void C::funcName() {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16",
              "removal": "0:8-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.function2",
      "languageId": "c",
      "facet": "name.function",
      "code": "void C::funcName();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16",
              "removal": "0:8-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:19"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.function3",
      "languageId": "c",
      "facet": "name.function",
      "code": "void aaa() {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.function4",
      "languageId": "c",
      "facet": "name.function",
      "code": "void aaa();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.iteration.block2",
      "languageId": "c",
      "facet": "name.iteration.block",
      "code": "void foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13"
            }
          ],
          "domain": "0:12-0:13"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.iteration.block3",
      "languageId": "c",
      "facet": "name.iteration.block",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8"
            }
          ],
          "domain": "0:0-2:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18"
            }
          ],
          "domain": "1:17-1:18"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7"
            }
          ],
          "domain": "2:6-2:7"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.iteration.block4",
      "languageId": "c",
      "facet": "name.iteration.block",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16"
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15"
            }
          ],
          "domain": "0:14-0:15"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.iteration.class",
      "languageId": "c",
      "facet": "name.iteration.class",
      "code": "struct Foo { };\n\ntypedef struct { } Bar;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:23"
            }
          ],
          "domain": "0:0-2:23"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13"
            }
          ],
          "domain": "0:12-0:13"
        },
        {
          "targets": [
            {
              "content": "2:16-2:17"
            }
          ],
          "domain": "2:16-2:17"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.iteration.class2",
      "languageId": "c",
      "facet": "name.iteration.class",
      "code": "union Foo { };\n\ntypedef union { } Bar;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:22"
            }
          ],
          "domain": "0:0-2:22"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "2:15-2:16"
            }
          ],
          "domain": "2:15-2:16"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.iteration.document",
      "languageId": "c",
      "facet": "name.iteration.document",
      "code": "\nint foo;\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.iteration.enum",
      "languageId": "c",
      "facet": "name.iteration.enum",
      "code": "enum Foo { };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13"
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:10-0:11"
            }
          ],
          "domain": "0:10-0:11"
        }
      ]
    },
    {
      "name": "scopes/c/name/name.variable",
      "languageId": "c",
      "facet": "name.variable",
      "code": "int aaa = 0;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:0-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/c/namedFunction.iteration.document",
      "languageId": "c",
      "facet": "namedFunction.iteration.document",
      "code": "\nvoid foo() { }\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/c/namedFunction",
      "languageId": "c",
      "facet": "namedFunction",
      "code": "int f(int a, int b) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:23",
              "removal": "0:0-0:23",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:23"
        }
      ]
    },
    {
      "name": "scopes/c/namedFunction2",
      "languageId": "c",
      "facet": "namedFunction",
      "code": "int f(int a, int b);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:20",
              "removal": "0:0-0:20",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:20"
        }
      ]
    },
    {
      "name": "scopes/c/statement/statement.class",
      "languageId": "c",
      "facet": "statement.class",
      "code": "struct aaa {};\nunion bbb {};\nenum ccc {};\n\ntypedef struct {} ddd;\ntypedef union {} eee;\ntypedef enum {} fff;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-1:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "1:0-1:13",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:0-1:13"
        },
        {
          "targets": [
            {
              "content": "2:0-2:12",
              "removal": "2:0-3:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-2:12"
        },
        {
          "targets": [
            {
              "content": "4:0-4:22",
              "removal": "4:0-5:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "4:0-4:22"
        },
        {
          "targets": [
            {
              "content": "5:0-5:21",
              "removal": "5:0-6:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "5:0-5:21"
        },
        {
          "targets": [
            {
              "content": "6:0-6:20",
              "removal": "5:21-6:20",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "6:0-6:20"
        }
      ]
    },
    {
      "name": "scopes/c/statement/statement.field.class",
      "languageId": "c",
      "facet": "statement.field.class",
      "code": "struct foo {\n    int bar;\n};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:2",
              "removal": "0:0-2:2",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:2"
        },
        {
          "targets": [
            {
              "content": "1:4-1:12",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-1:12"
        }
      ]
    },
    {
      "name": "scopes/c/statement/statement.field.class2",
      "languageId": "c",
      "facet": "statement.field.class",
      "code": "union foo {\n    int bar;\n};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:2",
              "removal": "0:0-2:2",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:2"
        },
        {
          "targets": [
            {
              "content": "1:4-1:12",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-1:12"
        }
      ]
    },
    {
      "name": "scopes/c/statement/statement.iteration.block2",
      "languageId": "c",
      "facet": "statement.iteration.block",
      "code": "void foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13"
            }
          ],
          "domain": "0:12-0:13"
        }
      ]
    },
    {
      "name": "scopes/c/statement/statement.iteration.block3",
      "languageId": "c",
      "facet": "statement.iteration.block",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8"
            }
          ],
          "domain": "0:0-2:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18"
            }
          ],
          "domain": "1:17-1:18"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7"
            }
          ],
          "domain": "2:6-2:7"
        }
      ]
    },
    {
      "name": "scopes/c/statement/statement.iteration.block4",
      "languageId": "c",
      "facet": "statement.iteration.block",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16"
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15"
            }
          ],
          "domain": "0:14-0:15"
        }
      ]
    },
    {
      "name": "scopes/c/statement/statement.iteration.class",
      "languageId": "c",
      "facet": "statement.iteration.class",
      "code": "struct Foo { };\n\ntypedef struct { } Bar;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:23"
            }
          ],
          "domain": "0:0-2:23"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13"
            }
          ],
          "domain": "0:12-0:13"
        },
        {
          "targets": [
            {
              "content": "2:16-2:17"
            }
          ],
          "domain": "2:16-2:17"
        }
      ]
    },
    {
      "name": "scopes/c/statement/statement.iteration.class2",
      "languageId": "c",
      "facet": "statement.iteration.class",
      "code": "union Foo { };\n\ntypedef union { } Bar;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:22"
            }
          ],
          "domain": "0:0-2:22"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "2:15-2:16"
            }
          ],
          "domain": "2:15-2:16"
        }
      ]
    },
    {
      "name": "scopes/c/statement/statement.iteration.document",
      "languageId": "c",
      "facet": "statement.iteration.document",
      "code": "\nint foo;\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/c/statement/statement",
      "languageId": "c",
      "facet": "statement",
      "code": "int foo = 2;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-0:12",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/c/statement.enum",
      "languageId": "c",
      "facet": "statement.enum",
      "code": "enum Foo {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-0:12",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/c/string.singleLine",
      "languageId": "c",
      "facet": "string.singleLine",
      "code": "char* a = \"hello world\";",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:23",
              "removal": "0:9-0:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:10-0:23"
        }
      ]
    },
    {
      "name": "scopes/c/switchStatementSubject",
      "languageId": "c",
      "facet": "switchStatementSubject",
      "code": "switch (value) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:13",
              "removal": "0:8-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/c/textFragment.comment.block",
      "languageId": "c",
      "facet": "textFragment.comment.block",
      "code": "/*\n  the\n  comment\n*/",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:2",
              "removal": "0:0-3:2",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:2"
        }
      ]
    },
    {
      "name": "scopes/c/textFragment.comment.line",
      "languageId": "c",
      "facet": "textFragment.comment.line",
      "code": "int a; // the comment",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:21",
              "removal": "0:6-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:21"
        }
      ]
    },
    {
      "name": "scopes/c/textFragment.string.singleLine",
      "languageId": "c",
      "facet": "textFragment.string.singleLine",
      "code": "char* a = \"hello world\";",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-0:22",
              "removal": "0:11-0:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:11-0:22"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.argument.formal.iteration",
      "languageId": "c",
      "facet": "type.argument.formal.iteration",
      "code": "void foo(int aaa, int bbb) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:29"
            }
          ],
          "domain": "0:0-0:29"
        },
        {
          "targets": [
            {
              "content": "0:9-0:25"
            }
          ],
          "domain": "0:9-0:25"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.argument.formal",
      "languageId": "c",
      "facet": "type.argument.formal",
      "code": "void foo(int aaa) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:4",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:20"
        },
        {
          "targets": [
            {
              "content": "0:9-0:12",
              "removal": "0:9-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:16"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.cast",
      "languageId": "c",
      "facet": "type.cast",
      "code": "(int)5.5;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:4",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:8"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.class",
      "languageId": "c",
      "facet": "type.class",
      "code": "struct Foo {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.class2",
      "languageId": "c",
      "facet": "type.class",
      "code": "typedef struct {} Foo;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:22",
              "removal": "0:0-0:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:22"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.class3",
      "languageId": "c",
      "facet": "type.class",
      "code": "union Foo {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.class4",
      "languageId": "c",
      "facet": "type.class",
      "code": "typedef union {} Foo;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:21",
              "removal": "0:0-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.enum",
      "languageId": "c",
      "facet": "type.enum",
      "code": "enum Foo {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.enum2",
      "languageId": "c",
      "facet": "type.enum",
      "code": "typedef enum {} Foo;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:20",
              "removal": "0:0-0:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:20"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.field.class",
      "languageId": "c",
      "facet": "type.field.class",
      "code": "struct foo {\n    int bar;\n};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:2",
              "removal": "0:0-2:2",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:2"
        },
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:12"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.field.class2",
      "languageId": "c",
      "facet": "type.field.class",
      "code": "union foo {\n    int bar;\n};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:2",
              "removal": "0:0-2:2",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:2"
        },
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:12"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.iteration.block2",
      "languageId": "c",
      "facet": "type.iteration.block",
      "code": "void foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13"
            }
          ],
          "domain": "0:12-0:13"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.iteration.block3",
      "languageId": "c",
      "facet": "type.iteration.block",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8"
            }
          ],
          "domain": "0:0-2:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18"
            }
          ],
          "domain": "1:17-1:18"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7"
            }
          ],
          "domain": "2:6-2:7"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.iteration.block4",
      "languageId": "c",
      "facet": "type.iteration.block",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16"
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15"
            }
          ],
          "domain": "0:14-0:15"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.iteration.class",
      "languageId": "c",
      "facet": "type.iteration.class",
      "code": "struct Foo { };\n\ntypedef struct { } Bar;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:23"
            }
          ],
          "domain": "0:0-2:23"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13"
            }
          ],
          "domain": "0:12-0:13"
        },
        {
          "targets": [
            {
              "content": "2:16-2:17"
            }
          ],
          "domain": "2:16-2:17"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.iteration.class2",
      "languageId": "c",
      "facet": "type.iteration.class",
      "code": "union Foo { };\n\ntypedef union { } Bar;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:22"
            }
          ],
          "domain": "0:0-2:22"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "2:15-2:16"
            }
          ],
          "domain": "2:15-2:16"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.iteration.document",
      "languageId": "c",
      "facet": "type.iteration.document",
      "code": "\nint foo;\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.return",
      "languageId": "c",
      "facet": "type.return",
      "code": "int foo() {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/c/type/type.variable",
      "languageId": "c",
      "facet": "type.variable",
      "code": "int foo = 2;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/c/value/value.assignment",
      "languageId": "c",
      "facet": "value.assignment",
      "code": "aaa = 0;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:7",
              "removal": "0:3-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:8"
        }
      ]
    },
    {
      "name": "scopes/c/value/value.assignment2",
      "languageId": "c",
      "facet": "value.assignment",
      "code": "aaa += 0;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:3-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/c/value/value.field.enum",
      "languageId": "c",
      "facet": "value.field.enum",
      "code": "enum Foo {\n    bar = 0,\n    baz = 1,\n    bongo\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:10-1:11",
              "removal": "1:7-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:11"
        },
        {
          "targets": [
            {
              "content": "2:10-2:11",
              "removal": "2:7-2:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:11"
        }
      ]
    },
    {
      "name": "scopes/c/value/value.iteration.block2",
      "languageId": "c",
      "facet": "value.iteration.block",
      "code": "void foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13"
            }
          ],
          "domain": "0:12-0:13"
        }
      ]
    },
    {
      "name": "scopes/c/value/value.iteration.block3",
      "languageId": "c",
      "facet": "value.iteration.block",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8"
            }
          ],
          "domain": "0:0-2:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18"
            }
          ],
          "domain": "1:17-1:18"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7"
            }
          ],
          "domain": "2:6-2:7"
        }
      ]
    },
    {
      "name": "scopes/c/value/value.iteration.block4",
      "languageId": "c",
      "facet": "value.iteration.block",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16"
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15"
            }
          ],
          "domain": "0:14-0:15"
        }
      ]
    },
    {
      "name": "scopes/c/value/value.iteration.class",
      "languageId": "c",
      "facet": "value.iteration.class",
      "code": "struct Foo { };\n\ntypedef struct { } Bar;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:23"
            }
          ],
          "domain": "0:0-2:23"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13"
            }
          ],
          "domain": "0:12-0:13"
        },
        {
          "targets": [
            {
              "content": "2:16-2:17"
            }
          ],
          "domain": "2:16-2:17"
        }
      ]
    },
    {
      "name": "scopes/c/value/value.iteration.class2",
      "languageId": "c",
      "facet": "value.iteration.class",
      "code": "union Foo { };\n\ntypedef union { } Bar;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:22"
            }
          ],
          "domain": "0:0-2:22"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "2:15-2:16"
            }
          ],
          "domain": "2:15-2:16"
        }
      ]
    },
    {
      "name": "scopes/c/value/value.iteration.document",
      "languageId": "c",
      "facet": "value.iteration.document",
      "code": "\nint foo;\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/c/value/value.iteration.enum",
      "languageId": "c",
      "facet": "value.iteration.enum",
      "code": "enum Foo { };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13"
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:10-0:11"
            }
          ],
          "domain": "0:10-0:11"
        }
      ]
    },
    {
      "name": "scopes/c/value/value.return",
      "languageId": "c",
      "facet": "value.return",
      "code": "int foo() {\n    return 2;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:11-1:12",
              "removal": "1:10-1:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:13"
        }
      ]
    },
    {
      "name": "scopes/c/value/value.variable",
      "languageId": "c",
      "facet": "value.variable",
      "code": "int aaa = 0;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:11",
              "removal": "0:7-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/clojure/comment.line",
      "languageId": "clojure",
      "facet": "comment.line",
      "code": ";; foo",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:6",
              "removal": "0:0-0:6",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:6"
        }
      ]
    },
    {
      "name": "scopes/cpp/anonymousFunction",
      "languageId": "cpp",
      "facet": "anonymousFunction",
      "code": "[]() {\n    return 2;\n};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/cpp/argument/argument.actual.constructor.iteration",
      "languageId": "cpp",
      "facet": "argument.actual.constructor.iteration",
      "code": "new Foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16"
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/cpp/argument/argument.actual.constructor.multiLine",
      "languageId": "cpp",
      "facet": "argument.actual.constructor.multiLine",
      "code": "new Foo(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/cpp/argument/argument.actual.constructor.singleLine",
      "languageId": "cpp",
      "facet": "argument.actual.constructor.singleLine",
      "code": "new Foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:11",
              "removal": "0:8-0:13",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:8-0:11"
        },
        {
          "targets": [
            {
              "content": "0:13-0:16",
              "removal": "0:11-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:13-0:16"
        }
      ]
    },
    {
      "name": "scopes/cpp/argument/argument.formal.constructor.iteration",
      "languageId": "cpp",
      "facet": "argument.formal.constructor.iteration",
      "code": "class Foo {\n    Foo(int aaa, int bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:8-1:24"
            }
          ],
          "domain": "1:4-1:28"
        }
      ]
    },
    {
      "name": "scopes/cpp/argument/argument.formal.constructor.multiLine",
      "languageId": "cpp",
      "facet": "argument.formal.constructor.multiLine",
      "code": "class Foo {\n    Foo(\n        int aaa,\n        int bbb\n    ) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:8-2:15",
              "removal": "2:8-3:8",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:8-2:15"
        },
        {
          "targets": [
            {
              "content": "3:8-3:15",
              "removal": "2:15-3:15",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:8-3:15"
        }
      ]
    },
    {
      "name": "scopes/cpp/argument/argument.formal.constructor.singleLine",
      "languageId": "cpp",
      "facet": "argument.formal.constructor.singleLine",
      "code": "class Foo {\n    Foo(int aaa, int bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:8-1:15",
              "removal": "1:8-1:17",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:8-1:15"
        },
        {
          "targets": [
            {
              "content": "1:17-1:24",
              "removal": "1:15-1:24",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:17-1:24"
        }
      ]
    },
    {
      "name": "scopes/cpp/argument/argument.formal.lambda.iteration",
      "languageId": "cpp",
      "facet": "argument.formal.lambda.iteration",
      "code": "[](int aaa, int bbb) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:3-0:19"
            }
          ],
          "domain": "0:0-0:23"
        }
      ]
    },
    {
      "name": "scopes/cpp/argument/argument.formal.lambda.multiLine",
      "languageId": "cpp",
      "facet": "argument.formal.lambda.multiLine",
      "code": "[](\n    int aaa,\n    int bbb\n) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:11",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:11"
        },
        {
          "targets": [
            {
              "content": "2:4-2:11",
              "removal": "1:11-2:11",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:11"
        }
      ]
    },
    {
      "name": "scopes/cpp/argument/argument.formal.lambda.singleLine",
      "languageId": "cpp",
      "facet": "argument.formal.lambda.singleLine",
      "code": "[](int aaa, int bbb) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:3-0:10",
              "removal": "0:3-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:3-0:10"
        },
        {
          "targets": [
            {
              "content": "0:12-0:19",
              "removal": "0:10-0:19",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:12-0:19"
        }
      ]
    },
    {
      "name": "scopes/cpp/argument/argument.formal.method.iteration",
      "languageId": "cpp",
      "facet": "argument.formal.method.iteration",
      "code": "class Foo {\n    void bar(int aaa, int bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:13-1:29"
            }
          ],
          "domain": "1:4-1:33"
        }
      ]
    },
    {
      "name": "scopes/cpp/argument/argument.formal.method.multiLine",
      "languageId": "cpp",
      "facet": "argument.formal.method.multiLine",
      "code": "class Foo {\n    void bar(\n        int aaa,\n        int bbb\n    ) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:8-2:15",
              "removal": "2:8-3:8",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:8-2:15"
        },
        {
          "targets": [
            {
              "content": "3:8-3:15",
              "removal": "2:15-3:15",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:8-3:15"
        }
      ]
    },
    {
      "name": "scopes/cpp/argument/argument.formal.method.singleLine",
      "languageId": "cpp",
      "facet": "argument.formal.method.singleLine",
      "code": "class Foo {\n    void bar(int aaa, int bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:13-1:20",
              "removal": "1:13-1:22",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:13-1:20"
        },
        {
          "targets": [
            {
              "content": "1:22-1:29",
              "removal": "1:20-1:29",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:22-1:29"
        }
      ]
    },
    {
      "name": "scopes/cpp/argumentList/argumentList.actual.constructor.empty",
      "languageId": "cpp",
      "facet": "argumentList.actual.constructor.empty",
      "code": "new Foo();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:8",
              "removal": "0:8-0:8",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/cpp/argumentList/argumentList.actual.constructor.multiLine",
      "languageId": "cpp",
      "facet": "argumentList.actual.constructor.multiLine",
      "code": "new Foo(\n    int aaa,\n    int bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:11",
              "removal": "0:8-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/cpp/argumentList/argumentList.actual.constructor.singleLine",
      "languageId": "cpp",
      "facet": "argumentList.actual.constructor.singleLine",
      "code": "new Foo(int aaa, int bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:24",
              "removal": "0:8-0:24",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:25"
        }
      ]
    },
    {
      "name": "scopes/cpp/argumentList/argumentList.formal.constructor.empty",
      "languageId": "cpp",
      "facet": "argumentList.formal.constructor.empty",
      "code": "class MyClass {\n    MyClass() {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:12-1:12",
              "removal": "1:12-1:12",
              "insertionDelimiter": ""
            }
          ],
          "domain": "1:4-1:16"
        }
      ]
    },
    {
      "name": "scopes/cpp/argumentList/argumentList.formal.constructor.multiLine",
      "languageId": "cpp",
      "facet": "argumentList.formal.constructor.multiLine",
      "code": "class MyClass {\n    MyClass(\n        int aaa,\n        int bbb\n    ) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:8-3:15",
              "removal": "1:12-4:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-4:8"
        }
      ]
    },
    {
      "name": "scopes/cpp/argumentList/argumentList.formal.constructor.singleLine",
      "languageId": "cpp",
      "facet": "argumentList.formal.constructor.singleLine",
      "code": "class MyClass {\n    MyClass(int aaa, int bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:12-1:28",
              "removal": "1:12-1:28",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:4-1:32"
        }
      ]
    },
    {
      "name": "scopes/cpp/argumentList/argumentList.formal.lambda.empty",
      "languageId": "cpp",
      "facet": "argumentList.formal.lambda.empty",
      "code": "[]() {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:3-0:3",
              "removal": "0:3-0:3",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:7"
        }
      ]
    },
    {
      "name": "scopes/cpp/argumentList/argumentList.formal.lambda.multiLine",
      "languageId": "cpp",
      "facet": "argumentList.formal.lambda.multiLine",
      "code": "[](\n    int aaa,\n    int bbb\n) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:11",
              "removal": "0:3-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:4"
        }
      ]
    },
    {
      "name": "scopes/cpp/argumentList/argumentList.formal.lambda.singleLine",
      "languageId": "cpp",
      "facet": "argumentList.formal.lambda.singleLine",
      "code": "[](int aaa, int bbb) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:3-0:19",
              "removal": "0:3-0:19",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:23"
        }
      ]
    },
    {
      "name": "scopes/cpp/argumentList/argumentList.formal.method.empty",
      "languageId": "cpp",
      "facet": "argumentList.formal.method.empty",
      "code": "class MyClass {\n    void foo() {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:13-1:13",
              "removal": "1:13-1:13",
              "insertionDelimiter": ""
            }
          ],
          "domain": "1:4-1:17"
        }
      ]
    },
    {
      "name": "scopes/cpp/argumentList/argumentList.formal.method.multiLine",
      "languageId": "cpp",
      "facet": "argumentList.formal.method.multiLine",
      "code": "class MyClass {\n    void foo(\n        int aaa,\n        int bbb\n    ) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:8-3:15",
              "removal": "1:13-4:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-4:8"
        }
      ]
    },
    {
      "name": "scopes/cpp/argumentList/argumentList.formal.method.singleLine",
      "languageId": "cpp",
      "facet": "argumentList.formal.method.singleLine",
      "code": "class MyClass {\n    void foo(int aaa, int bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:13-1:29",
              "removal": "1:13-1:29",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:4-1:33"
        }
      ]
    },
    {
      "name": "scopes/cpp/attribute",
      "languageId": "cpp",
      "facet": "attribute",
      "code": "[[attribute]]",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/cpp/branch.try.iteration",
      "languageId": "cpp",
      "facet": "branch.try.iteration",
      "code": "try {}\ncatch (const std::exception& e) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:34"
            }
          ],
          "domain": "0:0-1:34"
        }
      ]
    },
    {
      "name": "scopes/cpp/branch.try",
      "languageId": "cpp",
      "facet": "branch.try",
      "code": "try {}\ncatch (const std::exception& e) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:6",
              "removal": "0:0-1:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:6"
        },
        {
          "targets": [
            {
              "content": "1:0-1:34",
              "removal": "0:6-1:34",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:0-1:34"
        }
      ]
    },
    {
      "name": "scopes/cpp/class",
      "languageId": "cpp",
      "facet": "class",
      "code": "class Foo {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/cpp/className",
      "languageId": "cpp",
      "facet": "className",
      "code": "class Foo {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:6-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/cpp/className2",
      "languageId": "cpp",
      "facet": "className",
      "code": "void Aaa::bbb() {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:4-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        }
      ]
    },
    {
      "name": "scopes/cpp/disqualifyDelimiter",
      "languageId": "cpp",
      "facet": "disqualifyDelimiter",
      "code": "auto max(int a, int b) -> int;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:23-0:25"
            }
          ]
        }
      ]
    },
    {
      "name": "scopes/cpp/functionCall.constructor",
      "languageId": "cpp",
      "facet": "functionCall.constructor",
      "code": "new Foo();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:9",
              "removal": "0:0-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/cpp/functionCallee.constructor",
      "languageId": "cpp",
      "facet": "functionCallee.constructor",
      "code": "new Foo();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:7",
              "removal": "0:0-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/cpp/functionName.constructor",
      "languageId": "cpp",
      "facet": "functionName.constructor",
      "code": "class MyClass {\n    MyClass() {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:11",
              "removal": "1:4-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:16"
        }
      ]
    },
    {
      "name": "scopes/cpp/functionName.constructor2",
      "languageId": "cpp",
      "facet": "functionName.constructor",
      "code": "class MyClass {\n    ~MyClass() {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:12",
              "removal": "1:4-1:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:17"
        }
      ]
    },
    {
      "name": "scopes/cpp/functionName.method.iteration.class",
      "languageId": "cpp",
      "facet": "functionName.method.iteration.class",
      "code": "class MyClass { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/cpp/functionName.method",
      "languageId": "cpp",
      "facet": "functionName.method",
      "code": "class MyClass {\n    void foo() {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:9-1:12",
              "removal": "1:9-1:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:17"
        }
      ]
    },
    {
      "name": "scopes/cpp/ifStatement",
      "languageId": "cpp",
      "facet": "ifStatement",
      "code": "void funk() {\n    if constexpr (true) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:26",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-1:26"
        }
      ]
    },
    {
      "name": "scopes/cpp/interior/interior.class",
      "languageId": "cpp",
      "facet": "interior.class",
      "code": "class MyClass { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:15-0:16",
              "removal": "0:15-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16",
              "removal": "0:15-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:14-0:17"
        }
      ]
    },
    {
      "name": "scopes/cpp/interior/interior.constructor",
      "languageId": "cpp",
      "facet": "interior.constructor",
      "code": "class MyClass {\n    MyClass() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:17",
              "removal": "0:15-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:17",
              "removal": "0:15-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:14-2:1"
        },
        {
          "targets": [
            {
              "content": "1:15-1:16",
              "removal": "1:15-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:17"
        },
        {
          "targets": [
            {
              "content": "1:12-1:12",
              "removal": "1:12-1:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:11-1:13"
        },
        {
          "targets": [
            {
              "content": "1:15-1:16",
              "removal": "1:15-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:14-1:17"
        }
      ]
    },
    {
      "name": "scopes/cpp/interior/interior.enum",
      "languageId": "cpp",
      "facet": "interior.enum",
      "code": "enum class Foo { };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:17",
              "removal": "0:16-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:19"
        },
        {
          "targets": [
            {
              "content": "0:16-0:17",
              "removal": "0:16-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:15-0:18"
        }
      ]
    },
    {
      "name": "scopes/cpp/interior/interior.foreach",
      "languageId": "cpp",
      "facet": "interior.foreach",
      "code": "for (int value : values) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:26-0:27",
              "removal": "0:26-0:27",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:28"
        },
        {
          "targets": [
            {
              "content": "0:5-0:23",
              "removal": "0:5-0:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:4-0:24"
        },
        {
          "targets": [
            {
              "content": "0:26-0:27",
              "removal": "0:26-0:27",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:25-0:28"
        }
      ]
    },
    {
      "name": "scopes/cpp/interior/interior.lambda.block",
      "languageId": "cpp",
      "facet": "interior.lambda.block",
      "code": "[]() {\n    return 2;\n};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:1",
              "removal": "0:1-0:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:2"
        },
        {
          "targets": [
            {
              "content": "1:4-1:13",
              "removal": "0:6-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:3-0:3",
              "removal": "0:3-0:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:2-0:4"
        },
        {
          "targets": [
            {
              "content": "1:4-1:13",
              "removal": "0:6-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-2:1"
        }
      ]
    },
    {
      "name": "scopes/cpp/interior/interior.method",
      "languageId": "cpp",
      "facet": "interior.method",
      "code": "class MyClass {\n    void foo() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:18",
              "removal": "0:15-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:18",
              "removal": "0:15-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:14-2:1"
        },
        {
          "targets": [
            {
              "content": "1:16-1:17",
              "removal": "1:16-1:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:18"
        },
        {
          "targets": [
            {
              "content": "1:13-1:13",
              "removal": "1:13-1:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:12-1:14"
        },
        {
          "targets": [
            {
              "content": "1:16-1:17",
              "removal": "1:16-1:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:15-1:18"
        }
      ]
    },
    {
      "name": "scopes/cpp/interior/interior.namespace",
      "languageId": "cpp",
      "facet": "interior.namespace",
      "code": "namespace Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:15-0:16",
              "removal": "0:15-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16",
              "removal": "0:15-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:14-0:17"
        }
      ]
    },
    {
      "name": "scopes/cpp/interior/interior.try",
      "languageId": "cpp",
      "facet": "interior.try",
      "code": "try { }\ncatch (const std::exception& e) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:6",
              "removal": "0:5-0:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        },
        {
          "targets": [
            {
              "content": "0:5-0:6",
              "removal": "0:5-0:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:4-0:7"
        },
        {
          "targets": [
            {
              "content": "1:33-1:34",
              "removal": "1:33-1:34",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:35"
        },
        {
          "targets": [
            {
              "content": "1:7-1:30",
              "removal": "1:7-1:30",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:6-1:31"
        },
        {
          "targets": [
            {
              "content": "1:33-1:34",
              "removal": "1:33-1:34",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:32-1:35"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.argument.formal.constructor.iteration",
      "languageId": "cpp",
      "facet": "name.argument.formal.constructor.iteration",
      "code": "class MyClass {\n    MyClass(int aaa, int bbb = 2) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:12-1:32"
            }
          ],
          "domain": "1:12-1:32"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.argument.formal.constructor",
      "languageId": "cpp",
      "facet": "name.argument.formal.constructor",
      "code": "class MyClass {\n    MyClass(int aaa, int bbb = 2) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:13",
              "removal": "0:6-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:11",
              "removal": "1:4-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:36"
        },
        {
          "targets": [
            {
              "content": "1:16-1:19",
              "removal": "1:15-1:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:12-1:19"
        },
        {
          "targets": [
            {
              "content": "1:25-1:28",
              "removal": "1:25-1:29",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:21-1:32"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.argument.formal.iteration",
      "languageId": "cpp",
      "facet": "name.argument.formal.iteration",
      "code": "void aaa(int bbb = 0, int ccc = 0) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:37"
            }
          ],
          "domain": "0:0-0:37"
        },
        {
          "targets": [
            {
              "content": "0:9-0:33"
            }
          ],
          "domain": "0:9-0:33"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.argument.formal.method.iteration",
      "languageId": "cpp",
      "facet": "name.argument.formal.method.iteration",
      "code": "class MyClass {\n    void foo(int aaa, int bbb = 2) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:13-1:33"
            }
          ],
          "domain": "1:13-1:33"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.argument.formal.method",
      "languageId": "cpp",
      "facet": "name.argument.formal.method",
      "code": "class MyClass {\n    void foo(int aaa, int bbb = 2) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:13",
              "removal": "0:6-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:9-1:12",
              "removal": "1:9-1:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:37"
        },
        {
          "targets": [
            {
              "content": "1:17-1:20",
              "removal": "1:16-1:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:13-1:20"
        },
        {
          "targets": [
            {
              "content": "1:26-1:29",
              "removal": "1:26-1:30",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:22-1:33"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.argument.formal",
      "languageId": "cpp",
      "facet": "name.argument.formal",
      "code": "void aaa(int bbb = 0) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:24"
        },
        {
          "targets": [
            {
              "content": "0:13-0:16",
              "removal": "0:13-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:20"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.class",
      "languageId": "cpp",
      "facet": "name.class",
      "code": "class Foo {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:6-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.class2",
      "languageId": "cpp",
      "facet": "name.class",
      "code": "enum class Foo {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-0:14",
              "removal": "0:11-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.constructor",
      "languageId": "cpp",
      "facet": "name.constructor",
      "code": "class MyClass {\n    MyClass() {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:13",
              "removal": "0:6-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:11",
              "removal": "1:4-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:16"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.constructor2",
      "languageId": "cpp",
      "facet": "name.constructor",
      "code": "class MyClass {\n    ~MyClass() {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:13",
              "removal": "0:6-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:12",
              "removal": "1:4-1:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:17"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.enum",
      "languageId": "cpp",
      "facet": "name.enum",
      "code": "enum class Foo {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-0:14",
              "removal": "0:11-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.field.class",
      "languageId": "cpp",
      "facet": "name.field.class",
      "code": "class Foo {\n    int bar;\n    int baz = 1;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:6-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:1"
        },
        {
          "targets": [
            {
              "content": "1:8-1:11",
              "removal": "1:7-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:12"
        },
        {
          "targets": [
            {
              "content": "2:8-2:11",
              "removal": "2:8-2:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:16"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.field.enum",
      "languageId": "cpp",
      "facet": "name.field.enum",
      "code": "enum class Foo {\n    bar = 0,\n    baz = 1,\n    bongo\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-0:14",
              "removal": "0:11-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-4:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:11"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "2:4-2:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:11"
        },
        {
          "targets": [
            {
              "content": "3:4-3:9",
              "removal": "3:0-4:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "3:4-3:9"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.foreach",
      "languageId": "cpp",
      "facet": "name.foreach",
      "code": "for (int value : values) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:14",
              "removal": "0:9-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:27"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.iteration.class",
      "languageId": "cpp",
      "facet": "name.iteration.class",
      "code": "class Foo { };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.iteration.enum",
      "languageId": "cpp",
      "facet": "name.iteration.enum",
      "code": "enum class Foo { };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:19"
            }
          ],
          "domain": "0:0-0:19"
        },
        {
          "targets": [
            {
              "content": "0:16-0:17"
            }
          ],
          "domain": "0:16-0:17"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.method",
      "languageId": "cpp",
      "facet": "name.method",
      "code": "class MyClass {\n    void foo() {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:13",
              "removal": "0:6-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:9-1:12",
              "removal": "1:9-1:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:17"
        }
      ]
    },
    {
      "name": "scopes/cpp/name/name.namespace",
      "languageId": "cpp",
      "facet": "name.namespace",
      "code": "namespace Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:13",
              "removal": "0:10-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/cpp/namedFunction.constructor",
      "languageId": "cpp",
      "facet": "namedFunction.constructor",
      "code": "class MyClass {\n    MyClass() {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:16",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "1:4-1:16"
        }
      ]
    },
    {
      "name": "scopes/cpp/namedFunction.constructor2",
      "languageId": "cpp",
      "facet": "namedFunction.constructor",
      "code": "class MyClass {\n    ~MyClass() {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:17",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "1:4-1:17"
        }
      ]
    },
    {
      "name": "scopes/cpp/namedFunction.method.iteration.class",
      "languageId": "cpp",
      "facet": "namedFunction.method.iteration.class",
      "code": "class MyClass { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/cpp/namedFunction.method",
      "languageId": "cpp",
      "facet": "namedFunction.method",
      "code": "class MyClass {\n    void foo() {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:17",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "1:4-1:17"
        }
      ]
    },
    {
      "name": "scopes/cpp/statement.class",
      "languageId": "cpp",
      "facet": "statement.class",
      "code": "class Foo {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/cpp/statement.enum",
      "languageId": "cpp",
      "facet": "statement.enum",
      "code": "enum class Foo {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:18",
              "removal": "0:0-0:18",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:18"
        }
      ]
    },
    {
      "name": "scopes/cpp/statement.iteration.class",
      "languageId": "cpp",
      "facet": "statement.iteration.class",
      "code": "class Foo { };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/cpp/switchStatementSubject",
      "languageId": "cpp",
      "facet": "switchStatementSubject",
      "code": "switch (int i = rand() % 100; i) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:31",
              "removal": "0:8-0:31",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:35"
        }
      ]
    },
    {
      "name": "scopes/cpp/type/type.argument.formal.constructor.iteration",
      "languageId": "cpp",
      "facet": "type.argument.formal.constructor.iteration",
      "code": "class MyClass {\n    MyClass(int aaa, int bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:12-1:28"
            }
          ],
          "domain": "1:12-1:28"
        }
      ]
    },
    {
      "name": "scopes/cpp/type/type.argument.formal.constructor",
      "languageId": "cpp",
      "facet": "type.argument.formal.constructor",
      "code": "class MyClass {\n    MyClass(int aaa, int bbb = 2) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:12-1:15",
              "removal": "1:12-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:12-1:19"
        },
        {
          "targets": [
            {
              "content": "1:21-1:24",
              "removal": "1:21-1:25",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:21-1:32"
        }
      ]
    },
    {
      "name": "scopes/cpp/type/type.argument.formal.method.iteration",
      "languageId": "cpp",
      "facet": "type.argument.formal.method.iteration",
      "code": "class MyClass {\n    void foo(int aaa, int bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:13-1:29"
            }
          ],
          "domain": "1:13-1:29"
        }
      ]
    },
    {
      "name": "scopes/cpp/type/type.argument.formal.method",
      "languageId": "cpp",
      "facet": "type.argument.formal.method",
      "code": "class MyClass {\n    void foo(int aaa, int bbb = 2) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8",
              "removal": "1:4-1:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:37"
        },
        {
          "targets": [
            {
              "content": "1:13-1:16",
              "removal": "1:13-1:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:13-1:20"
        },
        {
          "targets": [
            {
              "content": "1:22-1:25",
              "removal": "1:22-1:26",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:22-1:33"
        }
      ]
    },
    {
      "name": "scopes/cpp/type/type.class",
      "languageId": "cpp",
      "facet": "type.class",
      "code": "class Foo {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/cpp/type/type.enum",
      "languageId": "cpp",
      "facet": "type.enum",
      "code": "enum class Foo {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:18",
              "removal": "0:0-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        }
      ]
    },
    {
      "name": "scopes/cpp/type/type.field.class",
      "languageId": "cpp",
      "facet": "type.field.class",
      "code": "class Foo {\n    int bar;\n    int baz = 1;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:1",
              "removal": "0:0-3:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:12"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "2:4-2:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:16"
        }
      ]
    },
    {
      "name": "scopes/cpp/type/type.foreach",
      "languageId": "cpp",
      "facet": "type.foreach",
      "code": "for (int v: values) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:22"
        }
      ]
    },
    {
      "name": "scopes/cpp/type/type.iteration.class",
      "languageId": "cpp",
      "facet": "type.iteration.class",
      "code": "class Foo { };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/cpp/type/type.typeArgument.iteration",
      "languageId": "cpp",
      "facet": "type.typeArgument.iteration",
      "code": "Map<string, int> foo;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:21"
            }
          ],
          "domain": "0:0-0:21"
        },
        {
          "targets": [
            {
              "content": "0:4-0:15"
            }
          ],
          "domain": "0:4-0:15"
        }
      ]
    },
    {
      "name": "scopes/cpp/type/type.typeArgument",
      "languageId": "cpp",
      "facet": "type.typeArgument",
      "code": "Map<string, int> foo;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16",
              "removal": "0:0-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:21"
        },
        {
          "targets": [
            {
              "content": "0:4-0:10",
              "removal": "0:4-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:10"
        },
        {
          "targets": [
            {
              "content": "0:12-0:15",
              "removal": "0:10-0:15",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:12-0:15"
        }
      ]
    },
    {
      "name": "scopes/cpp/value/value.argument.formal.constructor.iteration",
      "languageId": "cpp",
      "facet": "value.argument.formal.constructor.iteration",
      "code": "class MyClass {\n    MyClass(int aaa, int bbb = 2) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:12-1:32"
            }
          ],
          "domain": "1:12-1:32"
        }
      ]
    },
    {
      "name": "scopes/cpp/value/value.argument.formal.constructor",
      "languageId": "cpp",
      "facet": "value.argument.formal.constructor",
      "code": "class MyClass {\n    MyClass(int aaa, int bbb = 2) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:31-1:32",
              "removal": "1:28-1:32",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:21-1:32"
        }
      ]
    },
    {
      "name": "scopes/cpp/value/value.argument.formal.iteration",
      "languageId": "cpp",
      "facet": "value.argument.formal.iteration",
      "code": "void aaa(int bbb = 0, int ccc = 0) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:37"
            }
          ],
          "domain": "0:0-0:37"
        },
        {
          "targets": [
            {
              "content": "0:9-0:33"
            }
          ],
          "domain": "0:9-0:33"
        }
      ]
    },
    {
      "name": "scopes/cpp/value/value.argument.formal.method.iteration",
      "languageId": "cpp",
      "facet": "value.argument.formal.method.iteration",
      "code": "class MyClass {\n    void foo(int aaa, int bbb = 2) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:13-1:33"
            }
          ],
          "domain": "1:13-1:33"
        }
      ]
    },
    {
      "name": "scopes/cpp/value/value.argument.formal.method",
      "languageId": "cpp",
      "facet": "value.argument.formal.method",
      "code": "class MyClass {\n    void foo(int aaa, int bbb = 2) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:32-1:33",
              "removal": "1:29-1:33",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:22-1:33"
        }
      ]
    },
    {
      "name": "scopes/cpp/value/value.argument.formal",
      "languageId": "cpp",
      "facet": "value.argument.formal",
      "code": "void aaa(int bbb = 0) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:19-0:20",
              "removal": "0:16-0:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:20"
        }
      ]
    },
    {
      "name": "scopes/cpp/value/value.field.class",
      "languageId": "cpp",
      "facet": "value.field.class",
      "code": "class Foo {\n    int bar = 1;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:14-1:15",
              "removal": "1:11-1:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:16"
        }
      ]
    },
    {
      "name": "scopes/cpp/value/value.field.enum",
      "languageId": "cpp",
      "facet": "value.field.enum",
      "code": "enum class Foo {\n    bar = 0,\n    baz = 1,\n    bongo\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:10-1:11",
              "removal": "1:7-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:11"
        },
        {
          "targets": [
            {
              "content": "2:10-2:11",
              "removal": "2:7-2:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:11"
        }
      ]
    },
    {
      "name": "scopes/cpp/value/value.foreach",
      "languageId": "cpp",
      "facet": "value.foreach",
      "code": "for (int value : values) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:17-0:23",
              "removal": "0:16-0:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:27"
        }
      ]
    },
    {
      "name": "scopes/cpp/value/value.iteration.class",
      "languageId": "cpp",
      "facet": "value.iteration.class",
      "code": "class Foo { };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/cpp/value/value.iteration.enum",
      "languageId": "cpp",
      "facet": "value.iteration.enum",
      "code": "enum class Foo { };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:19"
            }
          ],
          "domain": "0:0-0:19"
        },
        {
          "targets": [
            {
              "content": "0:16-0:17"
            }
          ],
          "domain": "0:16-0:17"
        }
      ]
    },
    {
      "name": "scopes/csharp/anonymousFunction",
      "languageId": "csharp",
      "facet": "anonymousFunction",
      "code": "foo.bar(param => expression)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:27",
              "removal": "0:8-0:27",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:8-0:27"
        }
      ]
    },
    {
      "name": "scopes/csharp/anonymousFunction2",
      "languageId": "csharp",
      "facet": "anonymousFunction",
      "code": "Func<int, int> product = (arg1, arg2) => arg1 * arg2;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:25-0:52",
              "removal": "0:24-0:52",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:25-0:52"
        }
      ]
    },
    {
      "name": "scopes/csharp/anonymousFunction3",
      "languageId": "csharp",
      "facet": "anonymousFunction",
      "code": "(p1, p2) => {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.actual.constructor.iteration",
      "languageId": "csharp",
      "facet": "argument.actual.constructor.iteration",
      "code": "new Foo(a, b);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:12"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.actual.constructor.multiLine",
      "languageId": "csharp",
      "facet": "argument.actual.constructor.multiLine",
      "code": "new Foo(\n    a,\n    b\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:5",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:5"
        },
        {
          "targets": [
            {
              "content": "2:4-2:5",
              "removal": "1:5-2:5",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:5"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.actual.constructor.singleLine",
      "languageId": "csharp",
      "facet": "argument.actual.constructor.singleLine",
      "code": "new Foo(a, b);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:9",
              "removal": "0:8-0:11",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:8-0:9"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:9-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.actual.iteration",
      "languageId": "csharp",
      "facet": "argument.actual.iteration",
      "code": "Foo(5, \"bar\");",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.actual.method.iteration",
      "languageId": "csharp",
      "facet": "argument.actual.method.iteration",
      "code": "foo.bar(a, b);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:12"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.actual.method.multiLine",
      "languageId": "csharp",
      "facet": "argument.actual.method.multiLine",
      "code": "foo.bar(\n    a,\n    b\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:5",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:5"
        },
        {
          "targets": [
            {
              "content": "2:4-2:5",
              "removal": "1:5-2:5",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:5"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.actual.method.singleLine",
      "languageId": "csharp",
      "facet": "argument.actual.method.singleLine",
      "code": "foo.bar(a, b);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:9",
              "removal": "0:8-0:11",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:8-0:9"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:9-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.actual.multiLine",
      "languageId": "csharp",
      "facet": "argument.actual.multiLine",
      "code": "Foo(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.actual.singleLine",
      "languageId": "csharp",
      "facet": "argument.actual.singleLine",
      "code": "Foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:4-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:7"
        },
        {
          "targets": [
            {
              "content": "0:9-0:12",
              "removal": "0:7-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.catch",
      "languageId": "csharp",
      "facet": "argument.catch",
      "code": "try {}\ncatch(MyException ex) {}\ncatch(Exception ex) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:6-1:20",
              "removal": "1:6-1:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:6-1:20"
        },
        {
          "targets": [
            {
              "content": "2:6-2:18",
              "removal": "2:6-2:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:6-2:18"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.formal.constructor.iteration",
      "languageId": "csharp",
      "facet": "argument.formal.constructor.iteration",
      "code": "class MyClass {\n    MyClass(int a, int b) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:12-1:24"
            }
          ],
          "domain": "1:4-1:28"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.formal.constructor.multiLine",
      "languageId": "csharp",
      "facet": "argument.formal.constructor.multiLine",
      "code": "class MyClass {\n    MyClass(\n        int a,\n        int b\n    ) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:8-2:13",
              "removal": "2:8-3:8",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:8-2:13"
        },
        {
          "targets": [
            {
              "content": "3:8-3:13",
              "removal": "2:13-3:13",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:8-3:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.formal.constructor.singleLine",
      "languageId": "csharp",
      "facet": "argument.formal.constructor.singleLine",
      "code": "class MyClass {\n    MyClass(int a, int b) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:12-1:17",
              "removal": "1:12-1:19",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:12-1:17"
        },
        {
          "targets": [
            {
              "content": "1:19-1:24",
              "removal": "1:17-1:24",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:19-1:24"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.formal.iteration",
      "languageId": "csharp",
      "facet": "argument.formal.iteration",
      "code": "void Foo(String name, int value) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:31"
            }
          ],
          "domain": "0:0-0:35"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.formal.lambda.iteration",
      "languageId": "csharp",
      "facet": "argument.formal.lambda.iteration",
      "code": "(a, b) => {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:5"
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.formal.lambda.multiLine",
      "languageId": "csharp",
      "facet": "argument.formal.lambda.multiLine",
      "code": "(\n    a,\n    b\n) => {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:5",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:5"
        },
        {
          "targets": [
            {
              "content": "2:4-2:5",
              "removal": "1:5-2:5",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:5"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.formal.lambda.singleLine",
      "languageId": "csharp",
      "facet": "argument.formal.lambda.singleLine",
      "code": "(a, b) => {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:2",
              "removal": "0:1-0:4",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:1-0:2"
        },
        {
          "targets": [
            {
              "content": "0:4-0:5",
              "removal": "0:2-0:5",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:5"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.formal.method.iteration",
      "languageId": "csharp",
      "facet": "argument.formal.method.iteration",
      "code": "class MyClass {\n    void foo(int a, int b) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:13-1:25"
            }
          ],
          "domain": "1:4-1:29"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.formal.method.multiLine",
      "languageId": "csharp",
      "facet": "argument.formal.method.multiLine",
      "code": "class MyClass {\n    void foo(\n        int a,\n        int b\n    ) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:8-2:13",
              "removal": "2:8-3:8",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:8-2:13"
        },
        {
          "targets": [
            {
              "content": "3:8-3:13",
              "removal": "2:13-3:13",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:8-3:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.formal.method.singleLine",
      "languageId": "csharp",
      "facet": "argument.formal.method.singleLine",
      "code": "class MyClass {\n    void foo(int a, int b) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:13-1:18",
              "removal": "1:13-1:20",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:13-1:18"
        },
        {
          "targets": [
            {
              "content": "1:20-1:25",
              "removal": "1:18-1:25",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:20-1:25"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.formal.multiLine",
      "languageId": "csharp",
      "facet": "argument.formal.multiLine",
      "code": "void Foo(\n    String name,\n    int value\n) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:15",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:15"
        },
        {
          "targets": [
            {
              "content": "2:4-2:13",
              "removal": "1:15-2:13",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/argument/argument.formal.singleLine",
      "languageId": "csharp",
      "facet": "argument.formal.singleLine",
      "code": "void Foo(String name, int value) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:20",
              "removal": "0:9-0:22",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:20"
        },
        {
          "targets": [
            {
              "content": "0:22-0:31",
              "removal": "0:20-0:31",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:22-0:31"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.actual.constructor.empty",
      "languageId": "csharp",
      "facet": "argumentList.actual.constructor.empty",
      "code": "new Foo();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:8",
              "removal": "0:8-0:8",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.actual.constructor.multiLine",
      "languageId": "csharp",
      "facet": "argumentList.actual.constructor.multiLine",
      "code": "new Foo(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:8-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.actual.constructor.singleLine",
      "languageId": "csharp",
      "facet": "argumentList.actual.constructor.singleLine",
      "code": "new Foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16",
              "removal": "0:8-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.actual.empty",
      "languageId": "csharp",
      "facet": "argumentList.actual.empty",
      "code": "foo();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:4",
              "removal": "0:4-0:4",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:5"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.actual.method.empty",
      "languageId": "csharp",
      "facet": "argumentList.actual.method.empty",
      "code": "foo.bar();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:8",
              "removal": "0:8-0:8",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.actual.method.multiLine",
      "languageId": "csharp",
      "facet": "argumentList.actual.method.multiLine",
      "code": "foo.bar(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:8-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.actual.method.singleLine",
      "languageId": "csharp",
      "facet": "argumentList.actual.method.singleLine",
      "code": "foo.bar(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16",
              "removal": "0:8-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.actual.multiLine",
      "languageId": "csharp",
      "facet": "argumentList.actual.multiLine",
      "code": "foo(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:4-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.actual.singleLine",
      "languageId": "csharp",
      "facet": "argumentList.actual.singleLine",
      "code": "foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12",
              "removal": "0:4-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.formal.constructor.empty",
      "languageId": "csharp",
      "facet": "argumentList.formal.constructor.empty",
      "code": "class MyClass {\n    MyClass() {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:12-1:12",
              "removal": "1:12-1:12",
              "insertionDelimiter": ""
            }
          ],
          "domain": "1:4-1:16"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.formal.constructor.multiLine",
      "languageId": "csharp",
      "facet": "argumentList.formal.constructor.multiLine",
      "code": "class MyClass {\n    MyClass(\n        int aaa,\n        int bbb\n    ) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:8-3:15",
              "removal": "1:12-4:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-4:8"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.formal.constructor.singleLine",
      "languageId": "csharp",
      "facet": "argumentList.formal.constructor.singleLine",
      "code": "class MyClass {\n    MyClass(int aaa, int bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:12-1:28",
              "removal": "1:12-1:28",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:4-1:32"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.formal.empty",
      "languageId": "csharp",
      "facet": "argumentList.formal.empty",
      "code": "void foo() {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:9",
              "removal": "0:9-0:9",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.formal.lambda.empty",
      "languageId": "csharp",
      "facet": "argumentList.formal.lambda.empty",
      "code": "() => {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:1",
              "removal": "0:1-0:1",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:8"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.formal.lambda.multiLine",
      "languageId": "csharp",
      "facet": "argumentList.formal.lambda.multiLine",
      "code": "(\n    aaa,\n    bbb\n) => {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:1-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:7"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.formal.lambda.singleLine",
      "languageId": "csharp",
      "facet": "argumentList.formal.lambda.singleLine",
      "code": "(aaa, bbb) => {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:9",
              "removal": "0:1-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:16"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.formal.method.empty",
      "languageId": "csharp",
      "facet": "argumentList.formal.method.empty",
      "code": "class MyClass {\n    void foo() {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:13-1:13",
              "removal": "1:13-1:13",
              "insertionDelimiter": ""
            }
          ],
          "domain": "1:4-1:17"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.formal.method.multiLine",
      "languageId": "csharp",
      "facet": "argumentList.formal.method.multiLine",
      "code": "class MyClass {\n    void foo(\n        int aaa,\n        int bbb\n    ) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:8-3:15",
              "removal": "1:13-4:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-4:8"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.formal.method.singleLine",
      "languageId": "csharp",
      "facet": "argumentList.formal.method.singleLine",
      "code": "class MyClass {\n    void foo(int aaa, int bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:13-1:29",
              "removal": "1:13-1:29",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:4-1:33"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.formal.multiLine",
      "languageId": "csharp",
      "facet": "argumentList.formal.multiLine",
      "code": "void foo(\n    aaa,\n    bbb\n) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:9-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:4"
        }
      ]
    },
    {
      "name": "scopes/csharp/argumentList/argumentList.formal.singleLine",
      "languageId": "csharp",
      "facet": "argumentList.formal.singleLine",
      "code": "void foo(aaa, bbb) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:17",
              "removal": "0:9-0:17",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/csharp/attribute",
      "languageId": "csharp",
      "facet": "attribute",
      "code": "[Obsolete(\"Deprecated\")]\nvoid foo() {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:23",
              "removal": "0:1-0:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-0:23"
        }
      ]
    },
    {
      "name": "scopes/csharp/branch/branch.if.elif.else",
      "languageId": "csharp",
      "facet": "branch.if.elif.else",
      "code": "if (true) {}\nelse if (false) {}\nelse {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-1:5",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:12"
        },
        {
          "targets": [
            {
              "content": "1:0-1:18",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:0-1:18"
        },
        {
          "targets": [
            {
              "content": "2:0-2:7",
              "removal": "1:18-2:7",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-2:7"
        }
      ]
    },
    {
      "name": "scopes/csharp/branch/branch.if.else",
      "languageId": "csharp",
      "facet": "branch.if.else",
      "code": "if (true) {}\nelse {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-1:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:12"
        },
        {
          "targets": [
            {
              "content": "1:0-1:7",
              "removal": "0:12-1:7",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:0-1:7"
        }
      ]
    },
    {
      "name": "scopes/csharp/branch/branch.if.iteration",
      "languageId": "csharp",
      "facet": "branch.if.iteration",
      "code": "if () {}\nelse if  () {}\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8"
            }
          ],
          "domain": "0:0-2:8"
        }
      ]
    },
    {
      "name": "scopes/csharp/branch/branch.if",
      "languageId": "csharp",
      "facet": "branch.if",
      "code": "if (true) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-0:12",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/branch/branch.switchCase.iteration",
      "languageId": "csharp",
      "facet": "branch.switchCase.iteration",
      "code": "switch (value) {\n    case 1:\n        break;\n    default:\n        break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-5:0"
            }
          ],
          "domain": "0:16-5:0"
        }
      ]
    },
    {
      "name": "scopes/csharp/branch/branch.switchCase",
      "languageId": "csharp",
      "facet": "branch.switchCase",
      "code": "switch (value) {\n    case 1:\n        break;\n    default:\n        break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:14",
              "removal": "1:0-3:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-2:14"
        },
        {
          "targets": [
            {
              "content": "3:4-4:14",
              "removal": "3:0-5:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "3:4-4:14"
        }
      ]
    },
    {
      "name": "scopes/csharp/branch/branch.ternary.iteration",
      "languageId": "csharp",
      "facet": "branch.ternary.iteration",
      "code": "true ? 0 : 1;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12"
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/branch/branch.ternary",
      "languageId": "csharp",
      "facet": "branch.ternary",
      "code": "true ? 0 : 1;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:7-0:9",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:7-0:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:10-0:12",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/branch/branch.try.iteration",
      "languageId": "csharp",
      "facet": "branch.try.iteration",
      "code": "try { }\ncatch(Exception ex) { }\nfinally { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:11"
            }
          ],
          "domain": "0:0-2:11"
        }
      ]
    },
    {
      "name": "scopes/csharp/branch/branch.try",
      "languageId": "csharp",
      "facet": "branch.try",
      "code": "try { }\ncatch(Exception ex) { }\nfinally { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:7",
              "removal": "0:0-1:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:7"
        },
        {
          "targets": [
            {
              "content": "1:0-1:23",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:0-1:23"
        },
        {
          "targets": [
            {
              "content": "2:0-2:11",
              "removal": "1:23-2:11",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-2:11"
        }
      ]
    },
    {
      "name": "scopes/csharp/class.iteration.block",
      "languageId": "csharp",
      "facet": "class.iteration.block",
      "code": "public class Outer_class {\n  public class Inner_class {   }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:26-2:0"
            }
          ],
          "domain": "0:26-2:0"
        },
        {
          "targets": [
            {
              "content": "1:28-1:31"
            }
          ],
          "domain": "1:28-1:31"
        }
      ]
    },
    {
      "name": "scopes/csharp/class.iteration.document",
      "languageId": "csharp",
      "facet": "class.iteration.document",
      "code": "\npublic class BankAccount { }\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        },
        {
          "targets": [
            {
              "content": "1:26-1:27"
            }
          ],
          "domain": "1:26-1:27"
        }
      ]
    },
    {
      "name": "scopes/csharp/class",
      "languageId": "csharp",
      "facet": "class",
      "code": "public class BankAccount {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:27",
              "removal": "0:0-0:27",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:27"
        }
      ]
    },
    {
      "name": "scopes/csharp/className.iteration.block",
      "languageId": "csharp",
      "facet": "className.iteration.block",
      "code": "public class Outer_class {\n  public class Inner_class {   }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:26-2:0"
            }
          ],
          "domain": "0:26-2:0"
        },
        {
          "targets": [
            {
              "content": "1:28-1:31"
            }
          ],
          "domain": "1:28-1:31"
        }
      ]
    },
    {
      "name": "scopes/csharp/className.iteration.document",
      "languageId": "csharp",
      "facet": "className.iteration.document",
      "code": "\npublic class BankAccount { }\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        },
        {
          "targets": [
            {
              "content": "1:26-1:27"
            }
          ],
          "domain": "1:26-1:27"
        }
      ]
    },
    {
      "name": "scopes/csharp/className",
      "languageId": "csharp",
      "facet": "className",
      "code": "public class BankAccount {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:24",
              "removal": "0:13-0:25",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:27"
        }
      ]
    },
    {
      "name": "scopes/csharp/comment.block",
      "languageId": "csharp",
      "facet": "comment.block",
      "code": "/*\n    Hello\n    world\n*/",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:2",
              "removal": "0:0-3:2",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-3:2"
        }
      ]
    },
    {
      "name": "scopes/csharp/comment.line",
      "languageId": "csharp",
      "facet": "comment.line",
      "code": "// Hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/csharp/condition/condition.doWhile",
      "languageId": "csharp",
      "facet": "condition.doWhile",
      "code": "do {\n\n}\nwhile (1 > 5);",
      "scopes": [
        {
          "targets": [
            {
              "content": "3:7-3:12",
              "removal": "3:7-3:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:14"
        }
      ]
    },
    {
      "name": "scopes/csharp/condition/condition.for",
      "languageId": "csharp",
      "facet": "condition.for",
      "code": "for (int i = 0; i < 5; i++) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:21",
              "removal": "0:15-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:31"
        }
      ]
    },
    {
      "name": "scopes/csharp/condition/condition.if",
      "languageId": "csharp",
      "facet": "condition.if",
      "code": "if (true) {}\nelse if (false) {}\nelse {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:8",
              "removal": "0:4-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:7"
        },
        {
          "targets": [
            {
              "content": "1:9-1:14",
              "removal": "1:9-1:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:18"
        }
      ]
    },
    {
      "name": "scopes/csharp/condition/condition.switchCase.iteration",
      "languageId": "csharp",
      "facet": "condition.switchCase.iteration",
      "code": "switch(expression)\n{\n  case x: break;\n  default: break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:1-4:0"
            }
          ],
          "domain": "1:1-4:0"
        }
      ]
    },
    {
      "name": "scopes/csharp/condition/condition.switchCase",
      "languageId": "csharp",
      "facet": "condition.switchCase",
      "code": "switch(value) {\n    case x:\n        break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:9-1:10",
              "removal": "1:8-1:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-2:14"
        }
      ]
    },
    {
      "name": "scopes/csharp/condition/condition.ternary",
      "languageId": "csharp",
      "facet": "condition.ternary",
      "code": "1 < 5 ? foo : bar;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:5",
              "removal": "0:0-0:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/csharp/condition/condition.while",
      "languageId": "csharp",
      "facet": "condition.while",
      "code": "while (a != true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:16",
              "removal": "0:7-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/csharp/disqualifyDelimiter",
      "languageId": "csharp",
      "facet": "disqualifyDelimiter",
      "code": "1 < 2;\n1 > 2;\n1 <= 2;\n1 >= 2;\na << 2;\na >> 2;\na <<= 2;\na >>= 2;\nfoo->bar;\n() => 2;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "1:2-1:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "2:2-2:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "3:2-3:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "4:2-4:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "5:2-5:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "6:2-6:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "7:2-7:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "8:3-8:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "9:3-9:5"
            }
          ]
        }
      ]
    },
    {
      "name": "scopes/csharp/functionCall.constructor",
      "languageId": "csharp",
      "facet": "functionCall.constructor",
      "code": "Taxi t = new Taxi();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:19",
              "removal": "0:8-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:19"
        }
      ]
    },
    {
      "name": "scopes/csharp/functionCall.constructor2",
      "languageId": "csharp",
      "facet": "functionCall.constructor",
      "code": "Taxi t = new c.Taxi(a, b);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:25",
              "removal": "0:8-0:25",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:25"
        }
      ]
    },
    {
      "name": "scopes/csharp/functionCall.constructor3",
      "languageId": "csharp",
      "facet": "functionCall.constructor",
      "code": "Taxi t = new c[0].Taxi(a, b);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:28",
              "removal": "0:8-0:28",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:28"
        }
      ]
    },
    {
      "name": "scopes/csharp/functionCall",
      "languageId": "csharp",
      "facet": "functionCall",
      "code": "int value = getValue();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:12-0:22",
              "removal": "0:11-0:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:12-0:22"
        }
      ]
    },
    {
      "name": "scopes/csharp/functionCallee/functionCallee.constructor",
      "languageId": "csharp",
      "facet": "functionCallee.constructor",
      "code": "TestMotorcycle moto = new TestMotorcycle();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:22-0:40",
              "removal": "0:22-0:40",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:22-0:42"
        }
      ]
    },
    {
      "name": "scopes/csharp/functionCallee/functionCallee.constructor2",
      "languageId": "csharp",
      "facet": "functionCallee.constructor",
      "code": "TestMotorcycle moto = new TestMotorcycle[0]();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:22-0:43",
              "removal": "0:22-0:43",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:22-0:45"
        }
      ]
    },
    {
      "name": "scopes/csharp/functionCallee/functionCallee",
      "languageId": "csharp",
      "facet": "functionCallee",
      "code": "moto.StartEngine();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16",
              "removal": "0:0-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        }
      ]
    },
    {
      "name": "scopes/csharp/functionCallee/functionCallee2",
      "languageId": "csharp",
      "facet": "functionCallee",
      "code": "moto.StartEngine[0](5, true);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:19",
              "removal": "0:0-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:28"
        }
      ]
    },
    {
      "name": "scopes/csharp/functionCallee/functionCallee3",
      "languageId": "csharp",
      "facet": "functionCallee",
      "code": "startEngine[0](5, true)();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:23"
        },
        {
          "targets": [
            {
              "content": "0:0-0:23",
              "removal": "0:0-0:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:25"
        }
      ]
    },
    {
      "name": "scopes/csharp/functionCallee/functionCallee4",
      "languageId": "csharp",
      "facet": "functionCallee",
      "code": "startEngine[0](5, true).test();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:23"
        },
        {
          "targets": [
            {
              "content": "0:0-0:28",
              "removal": "0:0-0:28",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:30"
        }
      ]
    },
    {
      "name": "scopes/csharp/functionName/functionName.constructor",
      "languageId": "csharp",
      "facet": "functionName.constructor",
      "code": "class Program {\n    public Program() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:11-1:18",
              "removal": "1:11-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:24"
        }
      ]
    },
    {
      "name": "scopes/csharp/functionName/functionName.iteration.document",
      "languageId": "csharp",
      "facet": "functionName.iteration.document",
      "code": "\nvoid Foo() { }\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/csharp/functionName/functionName.method.iteration.class",
      "languageId": "csharp",
      "facet": "functionName.method.iteration.class",
      "code": "class MyClass { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/csharp/functionName/functionName.method",
      "languageId": "csharp",
      "facet": "functionName.method",
      "code": "class Program {\n    public void foo() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:16-1:19",
              "removal": "1:16-1:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:25"
        }
      ]
    },
    {
      "name": "scopes/csharp/functionName/functionName",
      "languageId": "csharp",
      "facet": "functionName",
      "code": "void Foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/csharp/ifStatement",
      "languageId": "csharp",
      "facet": "ifStatement",
      "code": "if (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/interior/interior.class",
      "languageId": "csharp",
      "facet": "interior.class",
      "code": "class Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:11-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:11-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:10-0:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/interior/interior.constructor",
      "languageId": "csharp",
      "facet": "interior.constructor",
      "code": "class Program {\n    public Program() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:24",
              "removal": "0:15-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:24",
              "removal": "0:15-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:14-2:1"
        },
        {
          "targets": [
            {
              "content": "1:22-1:23",
              "removal": "1:22-1:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:24"
        },
        {
          "targets": [
            {
              "content": "1:19-1:19",
              "removal": "1:19-1:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:18-1:20"
        },
        {
          "targets": [
            {
              "content": "1:22-1:23",
              "removal": "1:22-1:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:21-1:24"
        }
      ]
    },
    {
      "name": "scopes/csharp/interior/interior.doWhile",
      "languageId": "csharp",
      "facet": "interior.doWhile",
      "code": "do { } while (true);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:5",
              "removal": "0:4-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:20"
        },
        {
          "targets": [
            {
              "content": "0:4-0:5",
              "removal": "0:4-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:3-0:6"
        },
        {
          "targets": [
            {
              "content": "0:14-0:18",
              "removal": "0:14-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:13-0:19"
        }
      ]
    },
    {
      "name": "scopes/csharp/interior/interior.enum",
      "languageId": "csharp",
      "facet": "interior.enum",
      "code": "enum Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:11",
              "removal": "0:10-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        },
        {
          "targets": [
            {
              "content": "0:10-0:11",
              "removal": "0:10-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/interior/interior.for",
      "languageId": "csharp",
      "facet": "interior.for",
      "code": "for (int i = 0; i < size; ++i) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:32-0:33",
              "removal": "0:32-0:33",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:34"
        },
        {
          "targets": [
            {
              "content": "0:5-0:29",
              "removal": "0:5-0:29",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:4-0:30"
        },
        {
          "targets": [
            {
              "content": "0:32-0:33",
              "removal": "0:32-0:33",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:31-0:34"
        }
      ]
    },
    {
      "name": "scopes/csharp/interior/interior.foreach",
      "languageId": "csharp",
      "facet": "interior.foreach",
      "code": "foreach (int v in values) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:27-0:28",
              "removal": "0:27-0:28",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:29"
        },
        {
          "targets": [
            {
              "content": "0:9-0:24",
              "removal": "0:9-0:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:8-0:25"
        },
        {
          "targets": [
            {
              "content": "0:27-0:28",
              "removal": "0:27-0:28",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:26-0:29"
        }
      ]
    },
    {
      "name": "scopes/csharp/interior/interior.function",
      "languageId": "csharp",
      "facet": "interior.function",
      "code": "void Foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:12-0:13",
              "removal": "0:12-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:9-0:9",
              "removal": "0:9-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:8-0:10"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13",
              "removal": "0:12-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:11-0:14"
        }
      ]
    },
    {
      "name": "scopes/csharp/interior/interior.if",
      "languageId": "csharp",
      "facet": "interior.if",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:11-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:4-0:8",
              "removal": "0:4-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:3-0:9"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:11-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:10-0:13"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18",
              "removal": "1:17-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:19"
        },
        {
          "targets": [
            {
              "content": "1:9-1:14",
              "removal": "1:9-1:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:8-1:15"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18",
              "removal": "1:17-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:16-1:19"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7",
              "removal": "2:6-2:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-2:8"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7",
              "removal": "2:6-2:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:5-2:8"
        }
      ]
    },
    {
      "name": "scopes/csharp/interior/interior.interface",
      "languageId": "csharp",
      "facet": "interior.interface",
      "code": "interface IFoo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:17",
              "removal": "0:16-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        },
        {
          "targets": [
            {
              "content": "0:16-0:17",
              "removal": "0:16-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:15-0:18"
        }
      ]
    },
    {
      "name": "scopes/csharp/interior/interior.lambda.block",
      "languageId": "csharp",
      "facet": "interior.lambda.block",
      "code": "() => { foo; };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:1",
              "removal": "0:1-0:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:2"
        },
        {
          "targets": [
            {
              "content": "0:8-0:12",
              "removal": "0:7-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:8-0:12",
              "removal": "0:7-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:6-0:14"
        }
      ]
    },
    {
      "name": "scopes/csharp/interior/interior.lambda.expression",
      "languageId": "csharp",
      "facet": "interior.lambda.expression",
      "code": "() => 0;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:1",
              "removal": "0:1-0:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:2"
        },
        {
          "targets": [
            {
              "content": "0:6-0:7",
              "removal": "0:6-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        }
      ]
    },
    {
      "name": "scopes/csharp/interior/interior.method",
      "languageId": "csharp",
      "facet": "interior.method",
      "code": "class Program {\n    public void foo() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:25",
              "removal": "0:15-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:25",
              "removal": "0:15-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:14-2:1"
        },
        {
          "targets": [
            {
              "content": "1:23-1:24",
              "removal": "1:23-1:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:25"
        },
        {
          "targets": [
            {
              "content": "1:20-1:20",
              "removal": "1:20-1:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:19-1:21"
        },
        {
          "targets": [
            {
              "content": "1:23-1:24",
              "removal": "1:23-1:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:22-1:25"
        }
      ]
    },
    {
      "name": "scopes/csharp/interior/interior.switch",
      "languageId": "csharp",
      "facet": "interior.switch",
      "code": "switch (value) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:17",
              "removal": "0:16-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        },
        {
          "targets": [
            {
              "content": "0:8-0:13",
              "removal": "0:8-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:14"
        },
        {
          "targets": [
            {
              "content": "0:16-0:17",
              "removal": "0:16-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:15-0:18"
        }
      ]
    },
    {
      "name": "scopes/csharp/interior/interior.switchCase",
      "languageId": "csharp",
      "facet": "interior.switchCase",
      "code": "switch (value) {\n    case 0:\n        foo;\n        break;\n    case 1: {\n        break;\n    }\n    default:\n        break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-8:14",
              "removal": "0:16-9:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-9:1"
        },
        {
          "targets": [
            {
              "content": "0:8-0:13",
              "removal": "0:8-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:14"
        },
        {
          "targets": [
            {
              "content": "1:4-8:14",
              "removal": "0:16-9:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:15-9:1"
        },
        {
          "targets": [
            {
              "content": "2:8-3:14",
              "removal": "2:8-3:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-3:14"
        },
        {
          "targets": [
            {
              "content": "5:8-5:14",
              "removal": "4:13-6:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:4-6:5"
        },
        {
          "targets": [
            {
              "content": "5:8-5:14",
              "removal": "4:13-6:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:12-6:5"
        },
        {
          "targets": [
            {
              "content": "8:8-8:14",
              "removal": "8:8-8:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "7:4-8:14"
        }
      ]
    },
    {
      "name": "scopes/csharp/interior/interior.ternary",
      "languageId": "csharp",
      "facet": "interior.ternary",
      "code": "true ? 1 : 0;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:4",
              "removal": "0:0-0:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:4"
        },
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:7-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:11-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/interior/interior.try",
      "languageId": "csharp",
      "facet": "interior.try",
      "code": "try { }\ncatch(Exception ex) { }\nfinally { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:6",
              "removal": "0:5-0:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        },
        {
          "targets": [
            {
              "content": "0:5-0:6",
              "removal": "0:5-0:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:4-0:7"
        },
        {
          "targets": [
            {
              "content": "1:21-1:22",
              "removal": "1:21-1:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:23"
        },
        {
          "targets": [
            {
              "content": "1:6-1:18",
              "removal": "1:6-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:5-1:19"
        },
        {
          "targets": [
            {
              "content": "1:21-1:22",
              "removal": "1:21-1:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:20-1:23"
        },
        {
          "targets": [
            {
              "content": "2:9-2:10",
              "removal": "2:9-2:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-2:11"
        },
        {
          "targets": [
            {
              "content": "2:9-2:10",
              "removal": "2:9-2:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:8-2:11"
        }
      ]
    },
    {
      "name": "scopes/csharp/interior/interior.while",
      "languageId": "csharp",
      "facet": "interior.while",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:14-0:15",
              "removal": "0:14-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:7-0:11",
              "removal": "0:7-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:6-0:12"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15",
              "removal": "0:14-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:13-0:16"
        }
      ]
    },
    {
      "name": "scopes/csharp/key.mapPair.iteration",
      "languageId": "csharp",
      "facet": "key.mapPair.iteration",
      "code": "new StudentName {\n    FirstName = \"Craig\"\n};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:17-2:0"
            }
          ],
          "domain": "0:17-2:0"
        }
      ]
    },
    {
      "name": "scopes/csharp/key.mapPair",
      "languageId": "csharp",
      "facet": "key.mapPair",
      "code": "new StudentName {\n    FirstName = \"Craig\"\n};",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:13",
              "removal": "1:4-1:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:23"
        }
      ]
    },
    {
      "name": "scopes/csharp/list",
      "languageId": "csharp",
      "facet": "list",
      "code": "List<int> values = new List<int>() { 1, 2, 3 };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:35-0:46",
              "removal": "0:34-0:46",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:35-0:46"
        }
      ]
    },
    {
      "name": "scopes/csharp/map",
      "languageId": "csharp",
      "facet": "map",
      "code": "StudentName student = new StudentName {\n    FirstName = \"Craig\"\n};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:38-2:1",
              "removal": "0:37-2:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:38-2:1"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.argument.catch",
      "languageId": "csharp",
      "facet": "name.argument.catch",
      "code": "try {}\ncatch(MyException ex) {}\ncatch(Exception ex) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:18-1:20",
              "removal": "1:17-1:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:6-1:20"
        },
        {
          "targets": [
            {
              "content": "2:16-2:18",
              "removal": "2:15-2:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:6-2:18"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.argument.formal.constructor.iteration",
      "languageId": "csharp",
      "facet": "name.argument.formal.constructor.iteration",
      "code": "class MyClass {\n    MyClass(int foo, int bar) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:12-1:28"
            }
          ],
          "domain": "1:12-1:28"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.argument.formal.constructor",
      "languageId": "csharp",
      "facet": "name.argument.formal.constructor",
      "code": "class MyClass {\n    MyClass(int foo) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:13",
              "removal": "0:6-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:11",
              "removal": "1:4-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:23"
        },
        {
          "targets": [
            {
              "content": "1:16-1:19",
              "removal": "1:15-1:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:12-1:19"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.argument.formal.iteration",
      "languageId": "csharp",
      "facet": "name.argument.formal.iteration",
      "code": "void myFunk(String name, int value) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:38"
            }
          ],
          "domain": "0:0-0:38"
        },
        {
          "targets": [
            {
              "content": "0:12-0:34"
            }
          ],
          "domain": "0:12-0:34"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.argument.formal.method.iteration",
      "languageId": "csharp",
      "facet": "name.argument.formal.method.iteration",
      "code": "class MyClass {\n    void funk(int foo, int bar) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:14-1:30"
            }
          ],
          "domain": "1:14-1:30"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.argument.formal.method",
      "languageId": "csharp",
      "facet": "name.argument.formal.method",
      "code": "class MyClass {\n    void funk(int foo) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:13",
              "removal": "0:6-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:9-1:13",
              "removal": "1:9-1:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:25"
        },
        {
          "targets": [
            {
              "content": "1:18-1:21",
              "removal": "1:17-1:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:14-1:21"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.argument.formal",
      "languageId": "csharp",
      "facet": "name.argument.formal",
      "code": "void myFunk(String name, int value) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:11",
              "removal": "0:5-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:38"
        },
        {
          "targets": [
            {
              "content": "0:19-0:23",
              "removal": "0:18-0:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:12-0:23"
        },
        {
          "targets": [
            {
              "content": "0:29-0:34",
              "removal": "0:28-0:34",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:25-0:34"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.assignment",
      "languageId": "csharp",
      "facet": "name.assignment",
      "code": "aaa = \"bbb\";",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.assignment2",
      "languageId": "csharp",
      "facet": "name.assignment",
      "code": "aaa += \"bbb\";",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.class",
      "languageId": "csharp",
      "facet": "name.class",
      "code": "class Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:6-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.constructor",
      "languageId": "csharp",
      "facet": "name.constructor",
      "code": "class MyClass {\n    MyClass() {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:13",
              "removal": "0:6-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:11",
              "removal": "1:4-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:16"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.enum",
      "languageId": "csharp",
      "facet": "name.enum",
      "code": "enum Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.field.class",
      "languageId": "csharp",
      "facet": "name.field.class",
      "code": "class Foo {\n    int bar;\n    int baz = 0;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:6-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:1"
        },
        {
          "targets": [
            {
              "content": "1:8-1:11",
              "removal": "1:7-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:11"
        },
        {
          "targets": [
            {
              "content": "2:8-2:11",
              "removal": "2:8-2:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:15"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.field.enum",
      "languageId": "csharp",
      "facet": "name.field.enum",
      "code": "enum Foo {\n    bar = 0,\n    baz = 1,\n    bongo\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-4:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:11"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "2:4-2:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:11"
        },
        {
          "targets": [
            {
              "content": "3:4-3:9",
              "removal": "3:0-4:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "3:4-3:9"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.field.interface",
      "languageId": "csharp",
      "facet": "name.field.interface",
      "code": "interface IFoo {\n    int bar;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:14",
              "removal": "0:10-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:8-1:11",
              "removal": "1:7-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:11"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.foreach",
      "languageId": "csharp",
      "facet": "name.foreach",
      "code": "foreach (int value in values) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:18",
              "removal": "0:13-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:32"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.function",
      "languageId": "csharp",
      "facet": "name.function",
      "code": "void foo() {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.interface",
      "languageId": "csharp",
      "facet": "name.interface",
      "code": "interface IFoo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:14",
              "removal": "0:10-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.iteration.block",
      "languageId": "csharp",
      "facet": "name.iteration.block",
      "code": "class Foo {\n    bar() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:11-2:0"
            }
          ],
          "domain": "0:11-2:0"
        },
        {
          "targets": [
            {
              "content": "1:11-1:12"
            }
          ],
          "domain": "1:11-1:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.iteration.block2",
      "languageId": "csharp",
      "facet": "name.iteration.block",
      "code": "void Foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13"
            }
          ],
          "domain": "0:12-0:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.iteration.block3",
      "languageId": "csharp",
      "facet": "name.iteration.block",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8"
            }
          ],
          "domain": "0:0-2:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18"
            }
          ],
          "domain": "1:17-1:18"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7"
            }
          ],
          "domain": "2:6-2:7"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.iteration.block4",
      "languageId": "csharp",
      "facet": "name.iteration.block",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16"
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15"
            }
          ],
          "domain": "0:14-0:15"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.iteration.class",
      "languageId": "csharp",
      "facet": "name.iteration.class",
      "code": "class Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13"
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.iteration.document",
      "languageId": "csharp",
      "facet": "name.iteration.document",
      "code": "\nint foo;\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.iteration.enum",
      "languageId": "csharp",
      "facet": "name.iteration.enum",
      "code": "enum Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12"
            }
          ],
          "domain": "0:0-0:12"
        },
        {
          "targets": [
            {
              "content": "0:10-0:11"
            }
          ],
          "domain": "0:10-0:11"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.iteration.interface",
      "languageId": "csharp",
      "facet": "name.iteration.interface",
      "code": "interface IFoo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:18"
            }
          ],
          "domain": "0:0-0:18"
        },
        {
          "targets": [
            {
              "content": "0:16-0:17"
            }
          ],
          "domain": "0:16-0:17"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.method",
      "languageId": "csharp",
      "facet": "name.method",
      "code": "class MyClass {\n    void funk() {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:13",
              "removal": "0:6-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:9-1:13",
              "removal": "1:9-1:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:18"
        }
      ]
    },
    {
      "name": "scopes/csharp/name/name.variable",
      "languageId": "csharp",
      "facet": "name.variable",
      "code": "String aaa = \"bbb\";",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:10",
              "removal": "0:7-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        }
      ]
    },
    {
      "name": "scopes/csharp/namedFunction/namedFunction.constructor",
      "languageId": "csharp",
      "facet": "namedFunction.constructor",
      "code": "class Program {\n    public Program() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:24",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "1:4-1:24"
        }
      ]
    },
    {
      "name": "scopes/csharp/namedFunction/namedFunction.iteration.document",
      "languageId": "csharp",
      "facet": "namedFunction.iteration.document",
      "code": "\nvoid Foo() { }\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/csharp/namedFunction/namedFunction.method.iteration.class",
      "languageId": "csharp",
      "facet": "namedFunction.method.iteration.class",
      "code": "class MyClass { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/csharp/namedFunction/namedFunction.method",
      "languageId": "csharp",
      "facet": "namedFunction.method",
      "code": "class Program {\n    public void foo() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:25",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "1:4-1:25"
        }
      ]
    },
    {
      "name": "scopes/csharp/namedFunction/namedFunction",
      "languageId": "csharp",
      "facet": "namedFunction",
      "code": "void Foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/csharp/statement/statement.class",
      "languageId": "csharp",
      "facet": "statement.class",
      "code": "class Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-0:12",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/statement/statement.enum",
      "languageId": "csharp",
      "facet": "statement.enum",
      "code": "enum Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:11",
              "removal": "0:0-0:11",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/csharp/statement/statement.field.class",
      "languageId": "csharp",
      "facet": "statement.field.class",
      "code": "class Foo {\n    int bar;\n    int baz = 0;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:1",
              "removal": "0:0-3:1",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-3:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:12",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-1:12"
        },
        {
          "targets": [
            {
              "content": "2:4-2:16",
              "removal": "2:0-3:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:4-2:16"
        }
      ]
    },
    {
      "name": "scopes/csharp/statement/statement.field.interface",
      "languageId": "csharp",
      "facet": "statement.field.interface",
      "code": "interface IFoo {\n    int bar;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:12",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-1:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/statement/statement.interface",
      "languageId": "csharp",
      "facet": "statement.interface",
      "code": "interface IFoo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17",
              "removal": "0:0-0:17",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/csharp/statement/statement.iteration.block",
      "languageId": "csharp",
      "facet": "statement.iteration.block",
      "code": "class Foo {\n    bar() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:11-2:0"
            }
          ],
          "domain": "0:11-2:0"
        },
        {
          "targets": [
            {
              "content": "1:11-1:12"
            }
          ],
          "domain": "1:11-1:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/statement/statement.iteration.block2",
      "languageId": "csharp",
      "facet": "statement.iteration.block",
      "code": "void Foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13"
            }
          ],
          "domain": "0:12-0:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/statement/statement.iteration.block3",
      "languageId": "csharp",
      "facet": "statement.iteration.block",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8"
            }
          ],
          "domain": "0:0-2:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18"
            }
          ],
          "domain": "1:17-1:18"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7"
            }
          ],
          "domain": "2:6-2:7"
        }
      ]
    },
    {
      "name": "scopes/csharp/statement/statement.iteration.block4",
      "languageId": "csharp",
      "facet": "statement.iteration.block",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16"
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15"
            }
          ],
          "domain": "0:14-0:15"
        }
      ]
    },
    {
      "name": "scopes/csharp/statement/statement.iteration.class",
      "languageId": "csharp",
      "facet": "statement.iteration.class",
      "code": "class Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13"
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/statement/statement.iteration.document",
      "languageId": "csharp",
      "facet": "statement.iteration.document",
      "code": "\nint foo;\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/csharp/statement/statement.iteration.interface",
      "languageId": "csharp",
      "facet": "statement.iteration.interface",
      "code": "interface IFoo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:18"
            }
          ],
          "domain": "0:0-0:18"
        },
        {
          "targets": [
            {
              "content": "0:16-0:17"
            }
          ],
          "domain": "0:16-0:17"
        }
      ]
    },
    {
      "name": "scopes/csharp/statement/statement",
      "languageId": "csharp",
      "facet": "statement",
      "code": "int value = 2;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/csharp/string.multiLine",
      "languageId": "csharp",
      "facet": "string.multiLine",
      "code": "@\"hello\nworld\";",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:6",
              "removal": "0:0-1:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:6"
        }
      ]
    },
    {
      "name": "scopes/csharp/string.singleLine",
      "languageId": "csharp",
      "facet": "string.singleLine",
      "code": "\"hello world\";",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/switchStatementSubject",
      "languageId": "csharp",
      "facet": "switchStatementSubject",
      "code": "switch (aaa) {\n    default:\n        break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:11",
              "removal": "0:8-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/csharp/switchStatementSubject2",
      "languageId": "csharp",
      "facet": "switchStatementSubject",
      "code": "switch (aaa + 1) {\n    default:\n        break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:15",
              "removal": "0:8-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/csharp/textFragment.comment.block",
      "languageId": "csharp",
      "facet": "textFragment.comment.block",
      "code": "/*\n    Hello\n    World\n*/",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:2",
              "removal": "0:0-3:2",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:2"
        }
      ]
    },
    {
      "name": "scopes/csharp/textFragment.comment.line",
      "languageId": "csharp",
      "facet": "textFragment.comment.line",
      "code": "// Hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/csharp/textFragment.string.multiLine",
      "languageId": "csharp",
      "facet": "textFragment.string.multiLine",
      "code": "@\"hello\nworld\";",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-1:5",
              "removal": "0:2-1:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:2-1:5"
        }
      ]
    },
    {
      "name": "scopes/csharp/textFragment.string.singleLine",
      "languageId": "csharp",
      "facet": "textFragment.string.singleLine",
      "code": "\"hello world\";",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:12",
              "removal": "0:1-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.argument.catch",
      "languageId": "csharp",
      "facet": "type.argument.catch",
      "code": "try {}\ncatch(MyException ex) {}\ncatch(Exception ex) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:6-1:17",
              "removal": "1:6-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:6-1:20"
        },
        {
          "targets": [
            {
              "content": "2:6-2:15",
              "removal": "2:6-2:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:6-2:18"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.argument.formal.constructor.iteration",
      "languageId": "csharp",
      "facet": "type.argument.formal.constructor.iteration",
      "code": "class MyClass {\n    MyClass(int a, int b) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:12-1:24"
            }
          ],
          "domain": "1:12-1:24"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.argument.formal.constructor",
      "languageId": "csharp",
      "facet": "type.argument.formal.constructor",
      "code": "class MyClass {\n    MyClass(int a) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:12-1:15",
              "removal": "1:12-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:12-1:17"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.argument.formal.iteration",
      "languageId": "csharp",
      "facet": "type.argument.formal.iteration",
      "code": "void myFunk(String name, int value) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:38"
            }
          ],
          "domain": "0:0-0:38"
        },
        {
          "targets": [
            {
              "content": "0:12-0:34"
            }
          ],
          "domain": "0:12-0:34"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.argument.formal.method.iteration",
      "languageId": "csharp",
      "facet": "type.argument.formal.method.iteration",
      "code": "class MyClass {\n    void funk(int a, int b) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:14-1:26"
            }
          ],
          "domain": "1:14-1:26"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.argument.formal.method",
      "languageId": "csharp",
      "facet": "type.argument.formal.method",
      "code": "class MyClass {\n    void funk(int a) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8",
              "removal": "1:4-1:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:23"
        },
        {
          "targets": [
            {
              "content": "1:14-1:17",
              "removal": "1:14-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:14-1:19"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.argument.formal",
      "languageId": "csharp",
      "facet": "type.argument.formal",
      "code": "void myFunk(String name, int value) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:4",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:38"
        },
        {
          "targets": [
            {
              "content": "0:12-0:18",
              "removal": "0:12-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:12-0:23"
        },
        {
          "targets": [
            {
              "content": "0:25-0:28",
              "removal": "0:25-0:29",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:25-0:34"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.cast",
      "languageId": "csharp",
      "facet": "type.cast",
      "code": "(int)5.5;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:4",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:8"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.class",
      "languageId": "csharp",
      "facet": "type.class",
      "code": "class Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.enum",
      "languageId": "csharp",
      "facet": "type.enum",
      "code": "enum State { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.field.class",
      "languageId": "csharp",
      "facet": "type.field.class",
      "code": "class Foo {\n    int bar;\n    int baz = 0;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:1",
              "removal": "0:0-3:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:11"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "2:4-2:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:15"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.field.interface",
      "languageId": "csharp",
      "facet": "type.field.interface",
      "code": "interface IFoo {\n    int bar;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:11"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.foreach",
      "languageId": "csharp",
      "facet": "type.foreach",
      "code": "foreach (int value in values) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:12",
              "removal": "0:9-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:32"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.interface",
      "languageId": "csharp",
      "facet": "type.interface",
      "code": "interface IFoo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17",
              "removal": "0:0-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.iteration.block",
      "languageId": "csharp",
      "facet": "type.iteration.block",
      "code": "class Foo {\n    bar() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:11-2:0"
            }
          ],
          "domain": "0:11-2:0"
        },
        {
          "targets": [
            {
              "content": "1:11-1:12"
            }
          ],
          "domain": "1:11-1:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.iteration.block2",
      "languageId": "csharp",
      "facet": "type.iteration.block",
      "code": "void Foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13"
            }
          ],
          "domain": "0:12-0:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.iteration.block3",
      "languageId": "csharp",
      "facet": "type.iteration.block",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8"
            }
          ],
          "domain": "0:0-2:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18"
            }
          ],
          "domain": "1:17-1:18"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7"
            }
          ],
          "domain": "2:6-2:7"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.iteration.block4",
      "languageId": "csharp",
      "facet": "type.iteration.block",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16"
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15"
            }
          ],
          "domain": "0:14-0:15"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.iteration.class",
      "languageId": "csharp",
      "facet": "type.iteration.class",
      "code": "class Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13"
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.iteration.document",
      "languageId": "csharp",
      "facet": "type.iteration.document",
      "code": "\nint foo;\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.iteration.interface",
      "languageId": "csharp",
      "facet": "type.iteration.interface",
      "code": "interface IFoo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:18"
            }
          ],
          "domain": "0:0-0:18"
        },
        {
          "targets": [
            {
              "content": "0:16-0:17"
            }
          ],
          "domain": "0:16-0:17"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.return",
      "languageId": "csharp",
      "facet": "type.return",
      "code": "int funk() {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.typeArgument.iteration",
      "languageId": "csharp",
      "facet": "type.typeArgument.iteration",
      "code": "Dictionary<string, int> values;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:31"
            }
          ],
          "domain": "0:0-0:31"
        },
        {
          "targets": [
            {
              "content": "0:11-0:22"
            }
          ],
          "domain": "0:11-0:22"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.typeArgument",
      "languageId": "csharp",
      "facet": "type.typeArgument",
      "code": "List<int> values;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:9",
              "removal": "0:0-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:8",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:5-0:8"
        }
      ]
    },
    {
      "name": "scopes/csharp/type/type.variable",
      "languageId": "csharp",
      "facet": "type.variable",
      "code": "String name = \"hello\";",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:6",
              "removal": "0:0-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.argument.formal.constructor.iteration",
      "languageId": "csharp",
      "facet": "value.argument.formal.constructor.iteration",
      "code": "class MyClass {\n    MyClass(int a = 1, int b = 2) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:12-1:32"
            }
          ],
          "domain": "1:12-1:32"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.argument.formal.constructor",
      "languageId": "csharp",
      "facet": "value.argument.formal.constructor",
      "code": "class MyClass {\n    MyClass(int a = 1) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:20-1:21",
              "removal": "1:17-1:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:12-1:21"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.argument.formal.iteration",
      "languageId": "csharp",
      "facet": "value.argument.formal.iteration",
      "code": "void myFunk(String name, int value = 5) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:42"
            }
          ],
          "domain": "0:0-0:42"
        },
        {
          "targets": [
            {
              "content": "0:12-0:38"
            }
          ],
          "domain": "0:12-0:38"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.argument.formal.method.iteration",
      "languageId": "csharp",
      "facet": "value.argument.formal.method.iteration",
      "code": "class MyClass {\n    void funk(int a = 1, int b = 2) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:14-1:34"
            }
          ],
          "domain": "1:14-1:34"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.argument.formal.method",
      "languageId": "csharp",
      "facet": "value.argument.formal.method",
      "code": "class MyClass {\n    void funk(int a = 1) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:22-1:23",
              "removal": "1:19-1:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:14-1:23"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.argument.formal",
      "languageId": "csharp",
      "facet": "value.argument.formal",
      "code": "void myFunk(String name, int value = 5) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:37-0:38",
              "removal": "0:34-0:38",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:25-0:38"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.assignment",
      "languageId": "csharp",
      "facet": "value.assignment",
      "code": "a = 1;\na += 1;\na -= 1;\na *= 1;\na /= 1;\na %= 1;\na &= 1;\na |= 1;\na ^= 1;\na <<= 1;\na >>= 1;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:5",
              "removal": "0:1-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:5"
        },
        {
          "targets": [
            {
              "content": "1:5-1:6",
              "removal": "1:1-1:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:6"
        },
        {
          "targets": [
            {
              "content": "2:5-2:6",
              "removal": "2:1-2:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-2:6"
        },
        {
          "targets": [
            {
              "content": "3:5-3:6",
              "removal": "3:1-3:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "3:0-3:6"
        },
        {
          "targets": [
            {
              "content": "4:5-4:6",
              "removal": "4:1-4:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:0-4:6"
        },
        {
          "targets": [
            {
              "content": "5:5-5:6",
              "removal": "5:1-5:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "5:0-5:6"
        },
        {
          "targets": [
            {
              "content": "6:5-6:6",
              "removal": "6:1-6:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "6:0-6:6"
        },
        {
          "targets": [
            {
              "content": "7:5-7:6",
              "removal": "7:1-7:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "7:0-7:6"
        },
        {
          "targets": [
            {
              "content": "8:5-8:6",
              "removal": "8:1-8:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "8:0-8:6"
        },
        {
          "targets": [
            {
              "content": "9:6-9:7",
              "removal": "9:1-9:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "9:0-9:7"
        },
        {
          "targets": [
            {
              "content": "10:6-10:7",
              "removal": "10:1-10:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "10:0-10:7"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.field.class",
      "languageId": "csharp",
      "facet": "value.field.class",
      "code": "class Foo {\n    int bar = 0;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:14-1:15",
              "removal": "1:11-1:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:15"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.field.enum",
      "languageId": "csharp",
      "facet": "value.field.enum",
      "code": "enum Foo {\n    bar = 0,\n    baz = 1,\n    bongo\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:10-1:11",
              "removal": "1:7-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:11"
        },
        {
          "targets": [
            {
              "content": "2:10-2:11",
              "removal": "2:7-2:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:11"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.foreach",
      "languageId": "csharp",
      "facet": "value.foreach",
      "code": "foreach (int value in values) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:22-0:28",
              "removal": "0:21-0:28",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:32"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.iteration.block",
      "languageId": "csharp",
      "facet": "value.iteration.block",
      "code": "class Foo {\n    bar() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:11-2:0"
            }
          ],
          "domain": "0:11-2:0"
        },
        {
          "targets": [
            {
              "content": "1:11-1:12"
            }
          ],
          "domain": "1:11-1:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.iteration.block2",
      "languageId": "csharp",
      "facet": "value.iteration.block",
      "code": "void Foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13"
            }
          ],
          "domain": "0:12-0:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.iteration.block3",
      "languageId": "csharp",
      "facet": "value.iteration.block",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8"
            }
          ],
          "domain": "0:0-2:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18"
            }
          ],
          "domain": "1:17-1:18"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7"
            }
          ],
          "domain": "2:6-2:7"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.iteration.block4",
      "languageId": "csharp",
      "facet": "value.iteration.block",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16"
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15"
            }
          ],
          "domain": "0:14-0:15"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.iteration.class",
      "languageId": "csharp",
      "facet": "value.iteration.class",
      "code": "class Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13"
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.iteration.document",
      "languageId": "csharp",
      "facet": "value.iteration.document",
      "code": "\nint foo;\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.iteration.enum",
      "languageId": "csharp",
      "facet": "value.iteration.enum",
      "code": "enum Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12"
            }
          ],
          "domain": "0:0-0:12"
        },
        {
          "targets": [
            {
              "content": "0:10-0:11"
            }
          ],
          "domain": "0:10-0:11"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.mapPair.iteration",
      "languageId": "csharp",
      "facet": "value.mapPair.iteration",
      "code": "new StudentName {\n    FirstName = \"Craig\"\n};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:2"
            }
          ],
          "domain": "0:0-2:2"
        },
        {
          "targets": [
            {
              "content": "0:17-2:0"
            }
          ],
          "domain": "0:17-2:0"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.mapPair",
      "languageId": "csharp",
      "facet": "value.mapPair",
      "code": "new StudentName {\n    FirstName = \"Craig\"\n};",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:16-1:23",
              "removal": "1:13-1:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:23"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.return.lambda",
      "languageId": "csharp",
      "facet": "value.return.lambda",
      "code": "() => 0;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:7",
              "removal": "0:5-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.return",
      "languageId": "csharp",
      "facet": "value.return",
      "code": "int funk() {\n    return 2;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:11-1:12",
              "removal": "1:10-1:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:13"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.variable",
      "languageId": "csharp",
      "facet": "value.variable",
      "code": "String aaa = \"bbb\";",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:18",
              "removal": "0:10-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        }
      ]
    },
    {
      "name": "scopes/csharp/value/value.yield",
      "languageId": "csharp",
      "facet": "value.yield",
      "code": "IEnumerable<int> funk() {\n    yield return 2;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:17-1:18",
              "removal": "1:16-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:19"
        }
      ]
    },
    {
      "name": "scopes/css/argument/argument.actual.iteration",
      "languageId": "css",
      "facet": "argument.actual.iteration",
      "code": "* {\n  width: calc(100% - 50px);\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:14-1:25"
            }
          ],
          "domain": "1:9-1:26"
        }
      ]
    },
    {
      "name": "scopes/css/argument/argument.actual.iteration2",
      "languageId": "css",
      "facet": "argument.actual.iteration",
      "code": "* {\n  background: repeating-linear-gradient(red, orange 50px);\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:40-1:56"
            }
          ],
          "domain": "1:14-1:57"
        }
      ]
    },
    {
      "name": "scopes/css/argument/argument.actual.singleLine",
      "languageId": "css",
      "facet": "argument.actual.singleLine",
      "code": "* {\n  width: calc(100% - 50px);\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:14-1:25",
              "removal": "1:14-1:25",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:14-1:25"
        }
      ]
    },
    {
      "name": "scopes/css/argument/argument.actual.singleLine2",
      "languageId": "css",
      "facet": "argument.actual.singleLine",
      "code": "* {\n  background: repeating-linear-gradient(red, orange 50px);\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:40-1:43",
              "removal": "1:40-1:45",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:40-1:43"
        },
        {
          "targets": [
            {
              "content": "1:45-1:56",
              "removal": "1:43-1:56",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:45-1:56"
        }
      ]
    },
    {
      "name": "scopes/css/argument/argument.actual.singleLine3",
      "languageId": "css",
      "facet": "argument.actual.singleLine",
      "code": "* {\n  clip-path: ellipse(115px 55px at 50% 40%);\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:21-1:31",
              "removal": "1:21-1:35",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:21-1:31"
        },
        {
          "targets": [
            {
              "content": "1:35-1:42",
              "removal": "1:31-1:42",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:35-1:42"
        }
      ]
    },
    {
      "name": "scopes/css/argument/argument.actual.singleLine4",
      "languageId": "css",
      "facet": "argument.actual.singleLine",
      "code": "* {\n  clip-path: polygon(50% 0%, 60% 40%, 100% 50%);\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:21-1:27",
              "removal": "1:21-1:29",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:21-1:27"
        },
        {
          "targets": [
            {
              "content": "1:29-1:36",
              "removal": "1:29-1:38",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:29-1:36"
        },
        {
          "targets": [
            {
              "content": "1:38-1:46",
              "removal": "1:36-1:46",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:38-1:46"
        }
      ]
    },
    {
      "name": "scopes/css/argumentList.actual.empty",
      "languageId": "css",
      "facet": "argumentList.actual.empty",
      "code": "* {\n  width: calc();\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:14-1:14",
              "removal": "1:14-1:14",
              "insertionDelimiter": ""
            }
          ],
          "domain": "1:9-1:15"
        }
      ]
    },
    {
      "name": "scopes/css/argumentList.actual.multiLine",
      "languageId": "css",
      "facet": "argumentList.actual.multiLine",
      "code": "* {\n  clip-path: polygon(\n    50% 0%,\n    60% 40%\n  );\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:4-3:11",
              "removal": "1:21-4:2",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:13-4:3"
        }
      ]
    },
    {
      "name": "scopes/css/argumentList.actual.singleLine",
      "languageId": "css",
      "facet": "argumentList.actual.singleLine",
      "code": "* {\n  width: calc(100% - 50px);\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:14-1:25",
              "removal": "1:14-1:25",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:9-1:26"
        }
      ]
    },
    {
      "name": "scopes/css/collectionItem.unenclosed.iteration",
      "languageId": "css",
      "facet": "collectionItem.unenclosed.iteration",
      "code": "* {\n    color: red;\n    padding: 1rem;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:18"
            }
          ],
          "domain": "0:3-3:0"
        }
      ]
    },
    {
      "name": "scopes/css/collectionItem.unenclosed",
      "languageId": "css",
      "facet": "collectionItem.unenclosed",
      "code": "* {\n    color: red;\n    padding: 1rem;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:15",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-1:15"
        },
        {
          "targets": [
            {
              "content": "1:4-2:18",
              "removal": "1:0-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-2:18"
        },
        {
          "targets": [
            {
              "content": "2:4-2:18",
              "removal": "2:0-3:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:4-2:18"
        }
      ]
    },
    {
      "name": "scopes/css/comment.block",
      "languageId": "css",
      "facet": "comment.block",
      "code": "/*\n    Hello world\n*/",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:2",
              "removal": "0:0-2:2",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:2"
        }
      ]
    },
    {
      "name": "scopes/css/disqualifyDelimiter",
      "languageId": "css",
      "facet": "disqualifyDelimiter",
      "code": "div > div {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:5"
            }
          ]
        }
      ]
    },
    {
      "name": "scopes/css/functionCall",
      "languageId": "css",
      "facet": "functionCall",
      "code": "* {\n    transform: translate(-50%, -50%);\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:15-1:36",
              "removal": "1:14-1:36",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:15-1:36"
        }
      ]
    },
    {
      "name": "scopes/css/functionCallee",
      "languageId": "css",
      "facet": "functionCallee",
      "code": "* {\n    transform: translate(-50%, -50%);\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:15-1:24",
              "removal": "1:15-1:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:15-1:36"
        }
      ]
    },
    {
      "name": "scopes/css/key.mapPair.iteration",
      "languageId": "css",
      "facet": "key.mapPair.iteration",
      "code": "* {\n    color: red;\n    padding: 1rem;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:1"
            }
          ],
          "domain": "0:0-3:1"
        },
        {
          "targets": [
            {
              "content": "0:3-3:0"
            }
          ],
          "domain": "0:3-3:0"
        }
      ]
    },
    {
      "name": "scopes/css/key.mapPair",
      "languageId": "css",
      "facet": "key.mapPair",
      "code": "* {\n    color: red;\n    padding: 1rem;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:9",
              "removal": "1:0-1:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:15"
        },
        {
          "targets": [
            {
              "content": "2:4-2:11",
              "removal": "2:0-2:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:18"
        }
      ]
    },
    {
      "name": "scopes/css/map",
      "languageId": "css",
      "facet": "map",
      "code": "* {\n    color: red;\n    padding: 1rem;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-3:1",
              "removal": "0:1-3:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:2-3:1"
        }
      ]
    },
    {
      "name": "scopes/css/name.iteration.block",
      "languageId": "css",
      "facet": "name.iteration.block",
      "code": "a {\n    color: red;\n    padding: 1rem;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:1"
            }
          ],
          "domain": "0:0-3:1"
        },
        {
          "targets": [
            {
              "content": "0:3-3:0"
            }
          ],
          "domain": "0:3-3:0"
        }
      ]
    },
    {
      "name": "scopes/css/name.iteration.document",
      "languageId": "css",
      "facet": "name.iteration.document",
      "code": "\n* { color: red; }\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        },
        {
          "targets": [
            {
              "content": "1:3-1:16"
            }
          ],
          "domain": "1:3-1:16"
        }
      ]
    },
    {
      "name": "scopes/css/selector/selector",
      "languageId": "css",
      "facet": "selector",
      "code": "* {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:1",
              "removal": "0:0-0:2",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:4"
        }
      ]
    },
    {
      "name": "scopes/css/selector/selector2",
      "languageId": "css",
      "facet": "selector",
      "code": "body {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:4",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        }
      ]
    },
    {
      "name": "scopes/css/selector/selector3",
      "languageId": "css",
      "facet": "selector",
      "code": ".foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:4",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        }
      ]
    },
    {
      "name": "scopes/css/selector/selector4",
      "languageId": "css",
      "facet": "selector",
      "code": "#foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:4",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        }
      ]
    },
    {
      "name": "scopes/css/selector/selector5",
      "languageId": "css",
      "facet": "selector",
      "code": "body > div {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:10",
              "removal": "0:0-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/css/selector/selector6",
      "languageId": "css",
      "facet": "selector",
      "code": "#foo.bar {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:8",
              "removal": "0:0-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/css/selector/selector7",
      "languageId": "css",
      "facet": "selector",
      "code": "div:hover {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:9",
              "removal": "0:0-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/css/statement.iteration.document",
      "languageId": "css",
      "facet": "statement.iteration.document",
      "code": "\n* { color: red; }\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/css/statement",
      "languageId": "css",
      "facet": "statement",
      "code": "* {\n    color: red;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/css/string.singleLine",
      "languageId": "css",
      "facet": "string.singleLine",
      "code": "* {\n    color: \"red\"\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:11-1:16",
              "removal": "1:10-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:11-1:16"
        }
      ]
    },
    {
      "name": "scopes/css/textFragment.comment.block",
      "languageId": "css",
      "facet": "textFragment.comment.block",
      "code": "/*\n    Hello world\n*/",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:2",
              "removal": "0:0-2:2",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:2"
        }
      ]
    },
    {
      "name": "scopes/css/textFragment.string.singleLine",
      "languageId": "css",
      "facet": "textFragment.string.singleLine",
      "code": "* {\n    color: \"red\"\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:12-1:15",
              "removal": "1:12-1:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:12-1:15"
        }
      ]
    },
    {
      "name": "scopes/css/unit/unit",
      "languageId": "css",
      "facet": "unit",
      "code": "* {\n    padding: 25px 50px 75px 100px;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:15-1:17",
              "removal": "1:15-1:17",
              "insertionDelimiter": " "
            },
            {
              "content": "1:20-1:22",
              "removal": "1:20-1:22",
              "insertionDelimiter": " "
            },
            {
              "content": "1:25-1:27",
              "removal": "1:25-1:27",
              "insertionDelimiter": " "
            },
            {
              "content": "1:31-1:33",
              "removal": "1:31-1:33",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:34"
        },
        {
          "targets": [
            {
              "content": "1:15-1:17",
              "removal": "1:15-1:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:13-1:17"
        },
        {
          "targets": [
            {
              "content": "1:20-1:22",
              "removal": "1:20-1:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:18-1:22"
        },
        {
          "targets": [
            {
              "content": "1:25-1:27",
              "removal": "1:25-1:27",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:23-1:27"
        },
        {
          "targets": [
            {
              "content": "1:31-1:33",
              "removal": "1:31-1:33",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:28-1:33"
        }
      ]
    },
    {
      "name": "scopes/css/unit/unit2",
      "languageId": "css",
      "facet": "unit",
      "code": "* {\n    padding: 10px;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:15-1:17",
              "removal": "1:15-1:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:18"
        },
        {
          "targets": [
            {
              "content": "1:15-1:17",
              "removal": "1:15-1:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:13-1:17"
        }
      ]
    },
    {
      "name": "scopes/css/unit/unit3",
      "languageId": "css",
      "facet": "unit",
      "code": "* {\n    padding: 1rem;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:14-1:17",
              "removal": "1:14-1:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:18"
        },
        {
          "targets": [
            {
              "content": "1:14-1:17",
              "removal": "1:14-1:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:13-1:17"
        }
      ]
    },
    {
      "name": "scopes/css/unit/unit4",
      "languageId": "css",
      "facet": "unit",
      "code": "* {\n    padding: 1em;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:14-1:16",
              "removal": "1:14-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:17"
        },
        {
          "targets": [
            {
              "content": "1:14-1:16",
              "removal": "1:14-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:13-1:16"
        }
      ]
    },
    {
      "name": "scopes/css/unit/unit5",
      "languageId": "css",
      "facet": "unit",
      "code": "* {\n    padding: 50%;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:15-1:16",
              "removal": "1:15-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:17"
        },
        {
          "targets": [
            {
              "content": "1:15-1:16",
              "removal": "1:15-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:13-1:16"
        }
      ]
    },
    {
      "name": "scopes/css/value.mapPair.iteration",
      "languageId": "css",
      "facet": "value.mapPair.iteration",
      "code": "* {\n    color: red;\n    padding: 1rem;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:1"
            }
          ],
          "domain": "0:0-3:1"
        },
        {
          "targets": [
            {
              "content": "0:3-3:0"
            }
          ],
          "domain": "0:3-3:0"
        }
      ]
    },
    {
      "name": "scopes/css/value.mapPair",
      "languageId": "css",
      "facet": "value.mapPair",
      "code": "* {\n    color: red;\n    padding: 1rem;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:11-1:14",
              "removal": "1:10-1:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:15"
        },
        {
          "targets": [
            {
              "content": "2:13-2:17",
              "removal": "2:12-2:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:18"
        }
      ]
    },
    {
      "name": "scopes/css/value.mapPair2",
      "languageId": "css",
      "facet": "value.mapPair",
      "code": "* {\n    margin: 1px 2px 3px 4px;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:12-1:27",
              "removal": "1:11-1:27",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:28"
        }
      ]
    },
    {
      "name": "scopes/dart/class",
      "languageId": "dart",
      "facet": "class",
      "code": "class MyClass {\n\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/dart/className",
      "languageId": "dart",
      "facet": "className",
      "code": "class Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:6-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/dart/ifStatement",
      "languageId": "dart",
      "facet": "ifStatement",
      "code": "foo() {\n  if (true) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:2-1:15",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:2-1:15"
        }
      ]
    },
    {
      "name": "scopes/dart/list",
      "languageId": "dart",
      "facet": "list",
      "code": "final list = [1,2,3];",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:20",
              "removal": "0:12-0:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:13-0:20"
        }
      ]
    },
    {
      "name": "scopes/dart/map",
      "languageId": "dart",
      "facet": "map",
      "code": "  final map = {\n    'hi': 1,\n  };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:14-2:3",
              "removal": "0:13-2:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:14-2:3"
        }
      ]
    },
    {
      "name": "scopes/go/comment.line",
      "languageId": "go",
      "facet": "comment.line",
      "code": "// foo",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:6",
              "removal": "0:0-0:6",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:6"
        }
      ]
    },
    {
      "name": "scopes/go/disqualifyDelimiter",
      "languageId": "go",
      "facet": "disqualifyDelimiter",
      "code": "1 < 2\n1 > 2\n1 <= 2\n1 >= 2\na << 2\na >> 2\na <<= 2\na >>= 2\nch <- 42\nmsg := <- ch",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "1:2-1:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "2:2-2:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "3:2-3:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "4:2-4:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "5:2-5:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "6:2-6:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "7:2-7:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "8:3-8:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "9:7-9:9"
            }
          ]
        }
      ]
    },
    {
      "name": "scopes/go/textFragment.comment.line",
      "languageId": "go",
      "facet": "textFragment.comment.line",
      "code": "// foo",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:6",
              "removal": "0:0-0:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:6"
        }
      ]
    },
    {
      "name": "scopes/go/textFragment.string.multiLine",
      "languageId": "go",
      "facet": "textFragment.string.multiLine",
      "code": "`\nfoo\n`",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-2:0",
              "removal": "0:1-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-2:0"
        }
      ]
    },
    {
      "name": "scopes/go/textFragment.string.singleLine",
      "languageId": "go",
      "facet": "textFragment.string.singleLine",
      "code": "\"foo\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:4",
              "removal": "0:1-0:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-0:4"
        }
      ]
    },
    {
      "name": "scopes/html/attribute",
      "languageId": "html",
      "facet": "attribute",
      "code": "<div id=\"root\"></div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:14",
              "removal": "0:4-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:14"
        }
      ]
    },
    {
      "name": "scopes/html/comment.block",
      "languageId": "html",
      "facet": "comment.block",
      "code": "<!--\n   Hello world\n-->",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:3",
              "removal": "0:0-2:3",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:3"
        }
      ]
    },
    {
      "name": "scopes/html/element",
      "languageId": "html",
      "facet": "element",
      "code": "<div id=\"root\">text</div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:25",
              "removal": "0:0-0:25",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:25"
        }
      ]
    },
    {
      "name": "scopes/html/endTag",
      "languageId": "html",
      "facet": "endTag",
      "code": "<div id=\"root\"></div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:15-0:21",
              "removal": "0:15-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/html/interior.element",
      "languageId": "html",
      "facet": "interior.element",
      "code": "<div> text </div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:4",
              "removal": "0:1-0:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:5"
        },
        {
          "targets": [
            {
              "content": "0:6-0:10",
              "removal": "0:5-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:13-0:16",
              "removal": "0:13-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:11-0:17"
        }
      ]
    },
    {
      "name": "scopes/html/key.attribute",
      "languageId": "html",
      "facet": "key.attribute",
      "code": "<div id=\"root\"></div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:7",
              "removal": "0:5-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:14"
        }
      ]
    },
    {
      "name": "scopes/html/key.attribute2",
      "languageId": "html",
      "facet": "key.attribute",
      "code": "<div disabled></div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:13",
              "removal": "0:4-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:13"
        }
      ]
    },
    {
      "name": "scopes/html/startTag",
      "languageId": "html",
      "facet": "startTag",
      "code": "<div id=\"root\"></div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:15",
              "removal": "0:0-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/html/string.singleLine",
      "languageId": "html",
      "facet": "string.singleLine",
      "code": "<div id=\"me\"><div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:12",
              "removal": "0:8-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:8-0:12"
        }
      ]
    },
    {
      "name": "scopes/html/tags",
      "languageId": "html",
      "facet": "tags",
      "code": "<div>hello</div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:5",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            },
            {
              "content": "0:10-0:16",
              "removal": "0:10-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:16"
        }
      ]
    },
    {
      "name": "scopes/html/textFragment.comment.block",
      "languageId": "html",
      "facet": "textFragment.comment.block",
      "code": "<!--\n   Hello world\n-->",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:3",
              "removal": "0:0-2:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:3"
        }
      ]
    },
    {
      "name": "scopes/html/textFragment.element",
      "languageId": "html",
      "facet": "textFragment.element",
      "code": "<div>hello<div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:10",
              "removal": "0:5-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:10"
        }
      ]
    },
    {
      "name": "scopes/html/textFragment.string.singleLine",
      "languageId": "html",
      "facet": "textFragment.string.singleLine",
      "code": "<div id=\"me\"><div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:11",
              "removal": "0:9-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:11"
        }
      ]
    },
    {
      "name": "scopes/html/value.attribute",
      "languageId": "html",
      "facet": "value.attribute",
      "code": "<div id=\"root\"></div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:14",
              "removal": "0:7-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:14"
        }
      ]
    },
    {
      "name": "scopes/java/anonymousFunction",
      "languageId": "java",
      "facet": "anonymousFunction",
      "code": "() -> 0;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:7",
              "removal": "0:0-0:7",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:7"
        }
      ]
    },
    {
      "name": "scopes/java/anonymousFunction2",
      "languageId": "java",
      "facet": "anonymousFunction",
      "code": "() -> {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:8",
              "removal": "0:0-0:8",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:8"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.actual.constructor.iteration",
      "languageId": "java",
      "facet": "argument.actual.constructor.iteration",
      "code": "new Foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16"
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.actual.constructor.multiLine",
      "languageId": "java",
      "facet": "argument.actual.constructor.multiLine",
      "code": "new Foo(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.actual.constructor.singleLine",
      "languageId": "java",
      "facet": "argument.actual.constructor.singleLine",
      "code": "new Foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:11",
              "removal": "0:8-0:13",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:8-0:11"
        },
        {
          "targets": [
            {
              "content": "0:13-0:16",
              "removal": "0:11-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:13-0:16"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.actual.iteration",
      "languageId": "java",
      "facet": "argument.actual.iteration",
      "code": "foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.actual.method.iteration",
      "languageId": "java",
      "facet": "argument.actual.method.iteration",
      "code": "foo.bar(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16"
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.actual.method.multiLine",
      "languageId": "java",
      "facet": "argument.actual.method.multiLine",
      "code": "foo.bar(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.actual.method.singleLine",
      "languageId": "java",
      "facet": "argument.actual.method.singleLine",
      "code": "foo.bar(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:11",
              "removal": "0:8-0:13",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:8-0:11"
        },
        {
          "targets": [
            {
              "content": "0:13-0:16",
              "removal": "0:11-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:13-0:16"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.actual.multiLine",
      "languageId": "java",
      "facet": "argument.actual.multiLine",
      "code": "foo(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.actual.singleLine",
      "languageId": "java",
      "facet": "argument.actual.singleLine",
      "code": "foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:4-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:7"
        },
        {
          "targets": [
            {
              "content": "0:9-0:12",
              "removal": "0:7-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:12"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.catch",
      "languageId": "java",
      "facet": "argument.catch",
      "code": "try {}\ncatch(final MyException ex) {}\ncatch(final Exception ex) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:6-1:26",
              "removal": "1:6-1:26",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:6-1:26"
        },
        {
          "targets": [
            {
              "content": "2:6-2:24",
              "removal": "2:6-2:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:6-2:24"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.formal.constructor.iteration",
      "languageId": "java",
      "facet": "argument.formal.constructor.iteration",
      "code": "public class Foo {\n    public Foo(int aaa, int bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:15-1:31"
            }
          ],
          "domain": "1:4-1:35"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.formal.constructor.multiLine",
      "languageId": "java",
      "facet": "argument.formal.constructor.multiLine",
      "code": "public class Foo {\n    public Foo(\n        int aaa,\n        int bbb\n    ) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:8-2:15",
              "removal": "2:8-3:8",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:8-2:15"
        },
        {
          "targets": [
            {
              "content": "3:8-3:15",
              "removal": "2:15-3:15",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:8-3:15"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.formal.constructor.singleLine",
      "languageId": "java",
      "facet": "argument.formal.constructor.singleLine",
      "code": "public class Foo {\n    public Foo(int aaa, int bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:15-1:22",
              "removal": "1:15-1:24",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:15-1:22"
        },
        {
          "targets": [
            {
              "content": "1:24-1:31",
              "removal": "1:22-1:31",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:24-1:31"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.formal.lambda.iteration",
      "languageId": "java",
      "facet": "argument.formal.lambda.iteration",
      "code": "(aaa, bbb) -> {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:9"
            }
          ],
          "domain": "0:0-0:16"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.formal.lambda.multiLine",
      "languageId": "java",
      "facet": "argument.formal.lambda.multiLine",
      "code": "(\n    aaa,\n    bbb\n) -> {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.formal.lambda.singleLine",
      "languageId": "java",
      "facet": "argument.formal.lambda.singleLine",
      "code": "(aaa, bbb) -> {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:4",
              "removal": "0:1-0:6",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:1-0:4"
        },
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:4-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:6-0:9"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.formal.method.iteration",
      "languageId": "java",
      "facet": "argument.formal.method.iteration",
      "code": "public class Foo {\n    public void bar(int aaa, int bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:20-1:36"
            }
          ],
          "domain": "1:4-1:40"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.formal.method.multiLine",
      "languageId": "java",
      "facet": "argument.formal.method.multiLine",
      "code": "public class Foo {\n    public void bar(\n        int aaa,\n        int bbb\n    ) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:8-2:15",
              "removal": "2:8-3:8",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:8-2:15"
        },
        {
          "targets": [
            {
              "content": "3:8-3:15",
              "removal": "2:15-3:15",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:8-3:15"
        }
      ]
    },
    {
      "name": "scopes/java/argument/argument.formal.method.singleLine",
      "languageId": "java",
      "facet": "argument.formal.method.singleLine",
      "code": "public class Foo {\n    public void bar(int aaa, int bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:20-1:27",
              "removal": "1:20-1:29",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:20-1:27"
        },
        {
          "targets": [
            {
              "content": "1:29-1:36",
              "removal": "1:27-1:36",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:29-1:36"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.actual.constructor.empty",
      "languageId": "java",
      "facet": "argumentList.actual.constructor.empty",
      "code": "new Foo();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:8",
              "removal": "0:8-0:8",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.actual.constructor.multiLine",
      "languageId": "java",
      "facet": "argumentList.actual.constructor.multiLine",
      "code": "new Foo(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:8-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.actual.constructor.singleLine",
      "languageId": "java",
      "facet": "argumentList.actual.constructor.singleLine",
      "code": "new Foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16",
              "removal": "0:8-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.actual.empty",
      "languageId": "java",
      "facet": "argumentList.actual.empty",
      "code": "foo();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:4",
              "removal": "0:4-0:4",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:5"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.actual.method.empty",
      "languageId": "java",
      "facet": "argumentList.actual.method.empty",
      "code": "foo.bar();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:8",
              "removal": "0:8-0:8",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.actual.method.multiLine",
      "languageId": "java",
      "facet": "argumentList.actual.method.multiLine",
      "code": "foo.bar(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:8-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.actual.method.singleLine",
      "languageId": "java",
      "facet": "argumentList.actual.method.singleLine",
      "code": "foo.bar(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16",
              "removal": "0:8-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.actual.multiLine",
      "languageId": "java",
      "facet": "argumentList.actual.multiLine",
      "code": "foo(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:4-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.actual.singleLine",
      "languageId": "java",
      "facet": "argumentList.actual.singleLine",
      "code": "foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12",
              "removal": "0:4-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.formal.constructor.empty",
      "languageId": "java",
      "facet": "argumentList.formal.constructor.empty",
      "code": "public class MyClass {\n    public MyClass() {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:19-1:19",
              "removal": "1:19-1:19",
              "insertionDelimiter": ""
            }
          ],
          "domain": "1:4-1:23"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.formal.constructor.multiLine",
      "languageId": "java",
      "facet": "argumentList.formal.constructor.multiLine",
      "code": "public class MyClass {\n    public MyClass(\n        int aaa,\n        int bbb\n    ) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:8-3:15",
              "removal": "1:19-4:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-4:8"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.formal.constructor.singleLine",
      "languageId": "java",
      "facet": "argumentList.formal.constructor.singleLine",
      "code": "public class MyClass {\n    public MyClass(String aaa, int bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:19-1:38",
              "removal": "1:19-1:38",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:4-1:42"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.formal.lambda.empty",
      "languageId": "java",
      "facet": "argumentList.formal.lambda.empty",
      "code": "() -> { };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:1",
              "removal": "0:1-0:1",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.formal.lambda.multiLine",
      "languageId": "java",
      "facet": "argumentList.formal.lambda.multiLine",
      "code": "(\n    aaa,\n    bbb\n) -> { };",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:1-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:8"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.formal.lambda.singleLine",
      "languageId": "java",
      "facet": "argumentList.formal.lambda.singleLine",
      "code": "(aaa, bbb) -> { };",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:9",
              "removal": "0:1-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.formal.method.empty",
      "languageId": "java",
      "facet": "argumentList.formal.method.empty",
      "code": "public class MyClass {\n    public void foo() {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:20-1:20",
              "removal": "1:20-1:20",
              "insertionDelimiter": ""
            }
          ],
          "domain": "1:4-1:24"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.formal.method.multiLine",
      "languageId": "java",
      "facet": "argumentList.formal.method.multiLine",
      "code": "public class MyClass {\n    public void foo(\n        int aaa,\n        int bbb\n    ) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:8-3:15",
              "removal": "1:20-4:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-4:8"
        }
      ]
    },
    {
      "name": "scopes/java/argumentList/argumentList.formal.method.singleLine",
      "languageId": "java",
      "facet": "argumentList.formal.method.singleLine",
      "code": "public class MyClass {\n    public void foo(int aaa, int bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:20-1:36",
              "removal": "1:20-1:36",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:4-1:40"
        }
      ]
    },
    {
      "name": "scopes/java/branch/branch.if.elif.else",
      "languageId": "java",
      "facet": "branch.if.elif.else",
      "code": "if (true) {}\nelse if (false) {}\nelse {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-1:5",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:12"
        },
        {
          "targets": [
            {
              "content": "1:0-1:18",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:0-1:18"
        },
        {
          "targets": [
            {
              "content": "2:0-2:7",
              "removal": "1:18-2:7",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-2:7"
        }
      ]
    },
    {
      "name": "scopes/java/branch/branch.if.else",
      "languageId": "java",
      "facet": "branch.if.else",
      "code": "if (true) {}\nelse {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-1:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:12"
        },
        {
          "targets": [
            {
              "content": "1:0-1:7",
              "removal": "0:12-1:7",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:0-1:7"
        }
      ]
    },
    {
      "name": "scopes/java/branch/branch.if.iteration",
      "languageId": "java",
      "facet": "branch.if.iteration",
      "code": "if (true) {}\nelse if (false) {}\nelse {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:7"
            }
          ],
          "domain": "0:0-2:7"
        }
      ]
    },
    {
      "name": "scopes/java/branch/branch.if",
      "languageId": "java",
      "facet": "branch.if",
      "code": "if (true) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-0:12",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/java/branch/branch.switchCase.iteration",
      "languageId": "java",
      "facet": "branch.switchCase.iteration",
      "code": "switch (value) {\n    case 1:\n        break;\n    case 2:\n        break;\n    default:\n        break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-7:0"
            }
          ],
          "domain": "0:0-7:1"
        }
      ]
    },
    {
      "name": "scopes/java/branch/branch.switchCase",
      "languageId": "java",
      "facet": "branch.switchCase",
      "code": "switch (value) {\n    case 1:\n        break;\n    case 2:\n        break;\n    default:\n        break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:14",
              "removal": "1:0-3:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-2:14"
        },
        {
          "targets": [
            {
              "content": "3:4-4:14",
              "removal": "3:0-5:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "3:4-4:14"
        },
        {
          "targets": [
            {
              "content": "5:4-6:14",
              "removal": "5:0-7:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "5:4-6:14"
        }
      ]
    },
    {
      "name": "scopes/java/branch/branch.ternary.iteration",
      "languageId": "java",
      "facet": "branch.ternary.iteration",
      "code": "true ? 0 : 1;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12"
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/java/branch/branch.ternary",
      "languageId": "java",
      "facet": "branch.ternary",
      "code": "true ? 0 : 1;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:7-0:9",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:7-0:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:10-0:12",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/java/branch/branch.try.iteration",
      "languageId": "java",
      "facet": "branch.try.iteration",
      "code": "try {}\ncatch(Exception e) {}\nfinally {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:10"
            }
          ],
          "domain": "0:0-2:10"
        }
      ]
    },
    {
      "name": "scopes/java/branch/branch.try",
      "languageId": "java",
      "facet": "branch.try",
      "code": "try {}\ncatch(Exception e) {}\nfinally {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:6",
              "removal": "0:0-1:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:6"
        },
        {
          "targets": [
            {
              "content": "1:0-1:21",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:0-1:21"
        },
        {
          "targets": [
            {
              "content": "2:0-2:10",
              "removal": "1:21-2:10",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-2:10"
        }
      ]
    },
    {
      "name": "scopes/java/class.iteration.block",
      "languageId": "java",
      "facet": "class.iteration.block",
      "code": "public class MyClass { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:24"
            }
          ],
          "domain": "0:0-0:24"
        },
        {
          "targets": [
            {
              "content": "0:22-0:23"
            }
          ],
          "domain": "0:22-0:23"
        }
      ]
    },
    {
      "name": "scopes/java/class.iteration.document",
      "languageId": "java",
      "facet": "class.iteration.document",
      "code": "\npublic class MyClass { }\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        },
        {
          "targets": [
            {
              "content": "1:22-1:23"
            }
          ],
          "domain": "1:22-1:23"
        }
      ]
    },
    {
      "name": "scopes/java/class",
      "languageId": "java",
      "facet": "class",
      "code": "public class MyClass { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:24",
              "removal": "0:0-0:24",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:24"
        }
      ]
    },
    {
      "name": "scopes/java/className.iteration.block",
      "languageId": "java",
      "facet": "className.iteration.block",
      "code": "public class MyClass { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:24"
            }
          ],
          "domain": "0:0-0:24"
        },
        {
          "targets": [
            {
              "content": "0:22-0:23"
            }
          ],
          "domain": "0:22-0:23"
        }
      ]
    },
    {
      "name": "scopes/java/className.iteration.document",
      "languageId": "java",
      "facet": "className.iteration.document",
      "code": "\npublic class MyClass { }\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        },
        {
          "targets": [
            {
              "content": "1:22-1:23"
            }
          ],
          "domain": "1:22-1:23"
        }
      ]
    },
    {
      "name": "scopes/java/className",
      "languageId": "java",
      "facet": "className",
      "code": "public class MyClass { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:20",
              "removal": "0:13-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:24"
        }
      ]
    },
    {
      "name": "scopes/java/collectionItem.unenclosed.iteration",
      "languageId": "java",
      "facet": "collectionItem.unenclosed.iteration",
      "code": "public class MyClass {\n    String foo, bar;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:20"
            }
          ],
          "domain": "0:22-2:0"
        },
        {
          "targets": [
            {
              "content": "1:4-1:20"
            }
          ],
          "domain": "1:0-1:20"
        },
        {
          "targets": [
            {
              "content": "1:11-1:19"
            }
          ],
          "domain": "1:4-1:20"
        }
      ]
    },
    {
      "name": "scopes/java/collectionItem.unenclosed.iteration2",
      "languageId": "java",
      "facet": "collectionItem.unenclosed.iteration",
      "code": "public class MyClass {\n    public void myFunk() {\n        String foo, bar;\n    }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-3:5"
            }
          ],
          "domain": "0:22-4:0"
        },
        {
          "targets": [
            {
              "content": "2:8-2:24"
            }
          ],
          "domain": "1:26-3:4"
        },
        {
          "targets": [
            {
              "content": "2:8-2:24"
            }
          ],
          "domain": "2:0-2:24"
        },
        {
          "targets": [
            {
              "content": "2:15-2:23"
            }
          ],
          "domain": "2:8-2:24"
        }
      ]
    },
    {
      "name": "scopes/java/collectionItem.unenclosed",
      "languageId": "java",
      "facet": "collectionItem.unenclosed",
      "code": "public class MyClass {\n    String foo, bar;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:14",
              "removal": "1:4-1:16",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:14"
        },
        {
          "targets": [
            {
              "content": "1:11-1:14",
              "removal": "1:11-1:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:11-1:14"
        },
        {
          "targets": [
            {
              "content": "1:16-1:19",
              "removal": "1:14-1:19",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:16-1:19"
        },
        {
          "targets": [
            {
              "content": "1:16-1:20",
              "removal": "1:14-1:20",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:16-1:20"
        }
      ]
    },
    {
      "name": "scopes/java/collectionItem.unenclosed2",
      "languageId": "java",
      "facet": "collectionItem.unenclosed",
      "code": "public class MyClass {\n    public void myFunk() {\n        String foo, bar;\n    }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-3:5",
              "removal": "1:0-4:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-3:5"
        },
        {
          "targets": [
            {
              "content": "2:8-2:18",
              "removal": "2:8-2:20",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:8-2:18"
        },
        {
          "targets": [
            {
              "content": "2:15-2:18",
              "removal": "2:15-2:20",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "2:15-2:18"
        },
        {
          "targets": [
            {
              "content": "2:20-2:23",
              "removal": "2:18-2:23",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "2:20-2:23"
        },
        {
          "targets": [
            {
              "content": "2:20-2:24",
              "removal": "2:18-2:24",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:20-2:24"
        }
      ]
    },
    {
      "name": "scopes/java/comment.block",
      "languageId": "java",
      "facet": "comment.block",
      "code": "/* Hello */",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:11",
              "removal": "0:0-0:11",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/java/comment.line",
      "languageId": "java",
      "facet": "comment.line",
      "code": "// Hello",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:8",
              "removal": "0:0-0:8",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:8"
        }
      ]
    },
    {
      "name": "scopes/java/condition/condition.doWhile",
      "languageId": "java",
      "facet": "condition.doWhile",
      "code": "do { } while(value != null);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:26",
              "removal": "0:13-0:26",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:28"
        }
      ]
    },
    {
      "name": "scopes/java/condition/condition.for",
      "languageId": "java",
      "facet": "condition.for",
      "code": "for (int i = 0; i < value.length; ++i) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:32",
              "removal": "0:15-0:32",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:42"
        }
      ]
    },
    {
      "name": "scopes/java/condition/condition.if",
      "languageId": "java",
      "facet": "condition.if",
      "code": "if (true) {}\nelse if (false) {}\nelse {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:8",
              "removal": "0:4-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:7"
        },
        {
          "targets": [
            {
              "content": "1:9-1:14",
              "removal": "1:9-1:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:18"
        }
      ]
    },
    {
      "name": "scopes/java/condition/condition.switchCase.iteration",
      "languageId": "java",
      "facet": "condition.switchCase.iteration",
      "code": "switch (value) {\n    case 1:\n        break;\n    case 2:\n        break;\n    default:\n        break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-7:0"
            }
          ],
          "domain": "0:0-7:1"
        }
      ]
    },
    {
      "name": "scopes/java/condition/condition.switchCase",
      "languageId": "java",
      "facet": "condition.switchCase",
      "code": "switch (value) {\n    case 1:\n        break;\n    case 2:\n        break;\n    default:\n        break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:9-1:10",
              "removal": "1:8-1:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-2:14"
        },
        {
          "targets": [
            {
              "content": "3:9-3:10",
              "removal": "3:8-3:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "3:4-4:14"
        }
      ]
    },
    {
      "name": "scopes/java/condition/condition.switchCase2",
      "languageId": "java",
      "facet": "condition.switchCase",
      "code": "switch (value) {\n    case 1, 2:\n        break;\n    case 3, 4:\n        break;\n    default:\n        break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:9-1:10",
              "removal": "1:8-1:10",
              "insertionDelimiter": " "
            },
            {
              "content": "1:12-1:13",
              "removal": "1:11-1:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-2:14"
        },
        {
          "targets": [
            {
              "content": "3:9-3:10",
              "removal": "3:8-3:10",
              "insertionDelimiter": " "
            },
            {
              "content": "3:12-3:13",
              "removal": "3:11-3:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "3:4-4:14"
        }
      ]
    },
    {
      "name": "scopes/java/condition/condition.ternary",
      "languageId": "java",
      "facet": "condition.ternary",
      "code": "value != null ? value : -1;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:26"
        }
      ]
    },
    {
      "name": "scopes/java/condition/condition.while",
      "languageId": "java",
      "facet": "condition.while",
      "code": "while(value != null) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:19",
              "removal": "0:6-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:24"
        }
      ]
    },
    {
      "name": "scopes/java/disqualifyDelimiter",
      "languageId": "java",
      "facet": "disqualifyDelimiter",
      "code": "1 < 2;\n1 > 2;\n1 <= 2;\n1 >= 2;\na << 2;\na >> 2;\na <<= 2;\na >>= 2;\na >>> 2;\na >>>= 2;\n() -> 2;\nswitch () { case \"foo\" -> 1 }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "1:2-1:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "2:2-2:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "3:2-3:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "4:2-4:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "5:2-5:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "6:2-6:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "7:2-7:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "8:2-8:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "9:2-9:6"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "10:3-10:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "11:23-11:25"
            }
          ]
        }
      ]
    },
    {
      "name": "scopes/java/functionCall.constructor",
      "languageId": "java",
      "facet": "functionCall.constructor",
      "code": "new Foo(123, 456);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17",
              "removal": "0:0-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/java/functionCall",
      "languageId": "java",
      "facet": "functionCall",
      "code": "foo(123, 456);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/java/functionCallee.constructor",
      "languageId": "java",
      "facet": "functionCallee.constructor",
      "code": "new Foo();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:7",
              "removal": "0:0-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:10"
        }
      ]
    },
    {
      "name": "scopes/java/functionCallee",
      "languageId": "java",
      "facet": "functionCallee",
      "code": "foo();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:6"
        }
      ]
    },
    {
      "name": "scopes/java/functionName.constructor",
      "languageId": "java",
      "facet": "functionName.constructor",
      "code": "public class MyClass {\n    public MyClass() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:11-1:18",
              "removal": "1:11-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:24"
        }
      ]
    },
    {
      "name": "scopes/java/functionName.method.iteration.class",
      "languageId": "java",
      "facet": "functionName.method.iteration.class",
      "code": "class MyClass { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:15-0:16"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/java/functionName.method",
      "languageId": "java",
      "facet": "functionName.method",
      "code": "public class MyClass {\n    public void foo() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:16-1:19",
              "removal": "1:16-1:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:25"
        }
      ]
    },
    {
      "name": "scopes/java/ifStatement",
      "languageId": "java",
      "facet": "ifStatement",
      "code": "if (value != null) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:22",
              "removal": "0:0-0:22",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:22"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.class",
      "languageId": "java",
      "facet": "interior.class",
      "code": "public class Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:18-0:19",
              "removal": "0:18-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:20"
        },
        {
          "targets": [
            {
              "content": "0:18-0:19",
              "removal": "0:18-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:17-0:20"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.constructor",
      "languageId": "java",
      "facet": "interior.constructor",
      "code": "public class MyClass {\n    public MyClass() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:24",
              "removal": "0:22-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:24",
              "removal": "0:22-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:21-2:1"
        },
        {
          "targets": [
            {
              "content": "1:22-1:23",
              "removal": "1:22-1:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:24"
        },
        {
          "targets": [
            {
              "content": "1:19-1:19",
              "removal": "1:19-1:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:18-1:20"
        },
        {
          "targets": [
            {
              "content": "1:22-1:23",
              "removal": "1:22-1:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:21-1:24"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.doWhile",
      "languageId": "java",
      "facet": "interior.doWhile",
      "code": "do { } while (true);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:5",
              "removal": "0:4-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:20"
        },
        {
          "targets": [
            {
              "content": "0:4-0:5",
              "removal": "0:4-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:3-0:6"
        },
        {
          "targets": [
            {
              "content": "0:14-0:18",
              "removal": "0:14-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:13-0:19"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.enum",
      "languageId": "java",
      "facet": "interior.enum",
      "code": "public enum Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:17-0:18",
              "removal": "0:17-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:19"
        },
        {
          "targets": [
            {
              "content": "0:17-0:18",
              "removal": "0:17-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:16-0:19"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.for",
      "languageId": "java",
      "facet": "interior.for",
      "code": "for (int i = 0; i < size; ++i) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:32-0:33",
              "removal": "0:32-0:33",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:34"
        },
        {
          "targets": [
            {
              "content": "0:5-0:29",
              "removal": "0:5-0:29",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:4-0:30"
        },
        {
          "targets": [
            {
              "content": "0:32-0:33",
              "removal": "0:32-0:33",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:31-0:34"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.foreach",
      "languageId": "java",
      "facet": "interior.foreach",
      "code": "for (int v : values) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:22-0:23",
              "removal": "0:22-0:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:24"
        },
        {
          "targets": [
            {
              "content": "0:5-0:19",
              "removal": "0:5-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:4-0:20"
        },
        {
          "targets": [
            {
              "content": "0:22-0:23",
              "removal": "0:22-0:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:21-0:24"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.if",
      "languageId": "java",
      "facet": "interior.if",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:11-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:4-0:8",
              "removal": "0:4-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:3-0:9"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:11-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:10-0:13"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18",
              "removal": "1:17-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:19"
        },
        {
          "targets": [
            {
              "content": "1:9-1:14",
              "removal": "1:9-1:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:8-1:15"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18",
              "removal": "1:17-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:16-1:19"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7",
              "removal": "2:6-2:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-2:8"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7",
              "removal": "2:6-2:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:5-2:8"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.interface",
      "languageId": "java",
      "facet": "interior.interface",
      "code": "public interface Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:22-0:23",
              "removal": "0:22-0:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:24"
        },
        {
          "targets": [
            {
              "content": "0:22-0:23",
              "removal": "0:22-0:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:21-0:24"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.lambda.block",
      "languageId": "java",
      "facet": "interior.lambda.block",
      "code": "() -> { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:1",
              "removal": "0:1-0:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:2"
        },
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:7-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:9"
        },
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:7-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:6-0:9"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.lambda.expression",
      "languageId": "java",
      "facet": "interior.lambda.expression",
      "code": "() -> 0;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:1",
              "removal": "0:1-0:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:2"
        },
        {
          "targets": [
            {
              "content": "0:6-0:7",
              "removal": "0:6-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.method",
      "languageId": "java",
      "facet": "interior.method",
      "code": "public class MyClass {\n    public void foo() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:25",
              "removal": "0:22-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:25",
              "removal": "0:22-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:21-2:1"
        },
        {
          "targets": [
            {
              "content": "1:23-1:24",
              "removal": "1:23-1:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:25"
        },
        {
          "targets": [
            {
              "content": "1:20-1:20",
              "removal": "1:20-1:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:19-1:21"
        },
        {
          "targets": [
            {
              "content": "1:23-1:24",
              "removal": "1:23-1:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:22-1:25"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.resource",
      "languageId": "java",
      "facet": "interior.resource",
      "code": "try (PrintWriter writer = create()) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:37-0:38",
              "removal": "0:37-0:38",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:39"
        },
        {
          "targets": [
            {
              "content": "0:5-0:34",
              "removal": "0:5-0:34",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:4-0:35"
        },
        {
          "targets": [
            {
              "content": "0:33-0:33",
              "removal": "0:33-0:33",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:32-0:34"
        },
        {
          "targets": [
            {
              "content": "0:37-0:38",
              "removal": "0:37-0:38",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:36-0:39"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.static",
      "languageId": "java",
      "facet": "interior.static",
      "code": "class MyClass {\n    static { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:14",
              "removal": "0:15-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:14",
              "removal": "0:15-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:14-2:1"
        },
        {
          "targets": [
            {
              "content": "1:12-1:13",
              "removal": "1:12-1:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:14"
        },
        {
          "targets": [
            {
              "content": "1:12-1:13",
              "removal": "1:12-1:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:11-1:14"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.switch",
      "languageId": "java",
      "facet": "interior.switch",
      "code": "switch (value) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:17",
              "removal": "0:16-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        },
        {
          "targets": [
            {
              "content": "0:8-0:13",
              "removal": "0:8-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:14"
        },
        {
          "targets": [
            {
              "content": "0:16-0:17",
              "removal": "0:16-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:15-0:18"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.switchCase",
      "languageId": "java",
      "facet": "interior.switchCase",
      "code": "switch (value) {\n    case 0:\n        foo;\n        break;\n    case 1: {\n        break;\n    }\n    default:\n        break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-8:14",
              "removal": "0:16-9:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-9:1"
        },
        {
          "targets": [
            {
              "content": "0:8-0:13",
              "removal": "0:8-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:14"
        },
        {
          "targets": [
            {
              "content": "1:4-8:14",
              "removal": "0:16-9:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:15-9:1"
        },
        {
          "targets": [
            {
              "content": "2:8-3:14",
              "removal": "2:8-3:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-3:14"
        },
        {
          "targets": [
            {
              "content": "5:8-5:14",
              "removal": "4:13-6:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:4-6:5"
        },
        {
          "targets": [
            {
              "content": "5:8-5:14",
              "removal": "4:13-6:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:12-6:5"
        },
        {
          "targets": [
            {
              "content": "8:8-8:14",
              "removal": "8:8-8:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "7:4-8:14"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.switchCase2",
      "languageId": "java",
      "facet": "interior.switchCase",
      "code": "switch (value) {\n    case 0 -> foo;\n    case 1 -> bar;\n    default -> {\n        yield baz;\n    }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-5:5",
              "removal": "0:16-6:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-6:1"
        },
        {
          "targets": [
            {
              "content": "0:8-0:13",
              "removal": "0:8-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:14"
        },
        {
          "targets": [
            {
              "content": "1:4-5:5",
              "removal": "0:16-6:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:15-6:1"
        },
        {
          "targets": [
            {
              "content": "1:14-1:18",
              "removal": "1:14-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:18"
        },
        {
          "targets": [
            {
              "content": "2:14-2:18",
              "removal": "2:14-2:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:18"
        },
        {
          "targets": [
            {
              "content": "4:8-4:18",
              "removal": "3:16-5:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "3:4-5:5"
        },
        {
          "targets": [
            {
              "content": "4:8-4:18",
              "removal": "3:16-5:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "3:15-5:5"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.ternary",
      "languageId": "java",
      "facet": "interior.ternary",
      "code": "true ? 1 : 0;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:4",
              "removal": "0:0-0:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:4"
        },
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:7-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:11-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.try",
      "languageId": "java",
      "facet": "interior.try",
      "code": "try { }\ncatch(Exception ex) { }\nfinally { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:6",
              "removal": "0:5-0:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        },
        {
          "targets": [
            {
              "content": "0:5-0:6",
              "removal": "0:5-0:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:4-0:7"
        },
        {
          "targets": [
            {
              "content": "1:21-1:22",
              "removal": "1:21-1:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:23"
        },
        {
          "targets": [
            {
              "content": "1:6-1:18",
              "removal": "1:6-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:5-1:19"
        },
        {
          "targets": [
            {
              "content": "1:21-1:22",
              "removal": "1:21-1:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:20-1:23"
        },
        {
          "targets": [
            {
              "content": "2:9-2:10",
              "removal": "2:9-2:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-2:11"
        },
        {
          "targets": [
            {
              "content": "2:9-2:10",
              "removal": "2:9-2:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:8-2:11"
        }
      ]
    },
    {
      "name": "scopes/java/interior/interior.while",
      "languageId": "java",
      "facet": "interior.while",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:14-0:15",
              "removal": "0:14-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:7-0:11",
              "removal": "0:7-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:6-0:12"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15",
              "removal": "0:14-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:13-0:16"
        }
      ]
    },
    {
      "name": "scopes/java/list",
      "languageId": "java",
      "facet": "list",
      "code": "new int[]{1, 2, 3};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:18",
              "removal": "0:9-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:18"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.argument.catch",
      "languageId": "java",
      "facet": "name.argument.catch",
      "code": "try {}\ncatch(final MyException ex) {}\ncatch(final Exception ex) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:24-1:26",
              "removal": "1:23-1:26",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:6-1:26"
        },
        {
          "targets": [
            {
              "content": "2:22-2:24",
              "removal": "2:21-2:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:6-2:24"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.argument.formal.constructor.iteration",
      "languageId": "java",
      "facet": "name.argument.formal.constructor.iteration",
      "code": "public class MyClass {\n    public MyClass(String name, int value) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:22-2:0"
            }
          ],
          "domain": "0:22-2:0"
        },
        {
          "targets": [
            {
              "content": "1:19-1:41"
            }
          ],
          "domain": "1:19-1:41"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.argument.formal.constructor",
      "languageId": "java",
      "facet": "name.argument.formal.constructor",
      "code": "public class MyClass {\n    public MyClass(String name, int value) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:20",
              "removal": "0:13-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:11-1:18",
              "removal": "1:11-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:45"
        },
        {
          "targets": [
            {
              "content": "1:26-1:30",
              "removal": "1:25-1:30",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:19-1:30"
        },
        {
          "targets": [
            {
              "content": "1:36-1:41",
              "removal": "1:35-1:41",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:32-1:41"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.argument.formal.method.iteration",
      "languageId": "java",
      "facet": "name.argument.formal.method.iteration",
      "code": "public class MyClass {\n    public void foo(String name, int value) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:22-2:0"
            }
          ],
          "domain": "0:22-2:0"
        },
        {
          "targets": [
            {
              "content": "1:20-1:42"
            }
          ],
          "domain": "1:20-1:42"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.argument.formal.method",
      "languageId": "java",
      "facet": "name.argument.formal.method",
      "code": "public class MyClass {\n    public void foo(String name, int value) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:20",
              "removal": "0:13-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:16-1:19",
              "removal": "1:16-1:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:46"
        },
        {
          "targets": [
            {
              "content": "1:27-1:31",
              "removal": "1:26-1:31",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:20-1:31"
        },
        {
          "targets": [
            {
              "content": "1:37-1:42",
              "removal": "1:36-1:42",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:33-1:42"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.assignment",
      "languageId": "java",
      "facet": "name.assignment",
      "code": "value = 123;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:5",
              "removal": "0:0-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.class",
      "languageId": "java",
      "facet": "name.class",
      "code": "public class Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:16",
              "removal": "0:13-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:19"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.constructor",
      "languageId": "java",
      "facet": "name.constructor",
      "code": "public class MyClass {\n    public MyClass() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:20",
              "removal": "0:13-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:11-1:18",
              "removal": "1:11-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:24"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.enum",
      "languageId": "java",
      "facet": "name.enum",
      "code": "public enum Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:12-0:15",
              "removal": "0:12-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.field.class",
      "languageId": "java",
      "facet": "name.field.class",
      "code": "public class Foo {\n    private int bar;\n    private int baz = 0;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:16",
              "removal": "0:13-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:1"
        },
        {
          "targets": [
            {
              "content": "1:16-1:19",
              "removal": "1:15-1:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:20"
        },
        {
          "targets": [
            {
              "content": "2:16-2:19",
              "removal": "2:16-2:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:24"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.field.enum",
      "languageId": "java",
      "facet": "name.field.enum",
      "code": "public enum Foo {\n    bar,\n    baz;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:12-0:15",
              "removal": "0:12-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:0-1:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "2:0-2:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.field.interface",
      "languageId": "java",
      "facet": "name.field.interface",
      "code": "public interface Foo {\n    private int bar;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:17-0:20",
              "removal": "0:17-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:16-1:19",
              "removal": "1:15-1:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:20"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.foreach",
      "languageId": "java",
      "facet": "name.foreach",
      "code": "for (final Item item : items) {\n\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:20",
              "removal": "0:16-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.interface",
      "languageId": "java",
      "facet": "name.interface",
      "code": "public interface Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:17-0:20",
              "removal": "0:17-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:23"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.iteration.block",
      "languageId": "java",
      "facet": "name.iteration.block",
      "code": "class Foo {\n    void bar() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:11-2:0"
            }
          ],
          "domain": "0:11-2:0"
        },
        {
          "targets": [
            {
              "content": "1:16-1:17"
            }
          ],
          "domain": "1:16-1:17"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.iteration.block2",
      "languageId": "java",
      "facet": "name.iteration.block",
      "code": "void foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13"
            }
          ],
          "domain": "0:12-0:13"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.iteration.block3",
      "languageId": "java",
      "facet": "name.iteration.block",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8"
            }
          ],
          "domain": "0:0-2:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18"
            }
          ],
          "domain": "1:17-1:18"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7"
            }
          ],
          "domain": "2:6-2:7"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.iteration.block4",
      "languageId": "java",
      "facet": "name.iteration.block",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16"
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15"
            }
          ],
          "domain": "0:14-0:15"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.iteration.class",
      "languageId": "java",
      "facet": "name.iteration.class",
      "code": "class Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13"
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.iteration.document",
      "languageId": "java",
      "facet": "name.iteration.document",
      "code": "\nint foo;\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.iteration.enum",
      "languageId": "java",
      "facet": "name.iteration.enum",
      "code": "public enum Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:19"
            }
          ],
          "domain": "0:0-0:19"
        },
        {
          "targets": [
            {
              "content": "0:17-0:18"
            }
          ],
          "domain": "0:17-0:18"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.iteration.interface",
      "languageId": "java",
      "facet": "name.iteration.interface",
      "code": "interface Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.method",
      "languageId": "java",
      "facet": "name.method",
      "code": "public class MyClass {\n    public void foo() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:20",
              "removal": "0:13-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:16-1:19",
              "removal": "1:16-1:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:25"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.resource",
      "languageId": "java",
      "facet": "name.resource",
      "code": "try (PrintWriter writer = create()) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:17-0:23",
              "removal": "0:17-0:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:39"
        }
      ]
    },
    {
      "name": "scopes/java/name/name.variable",
      "languageId": "java",
      "facet": "name.variable",
      "code": "int value = 123;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:9",
              "removal": "0:4-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:16"
        }
      ]
    },
    {
      "name": "scopes/java/namedFunction.constructor",
      "languageId": "java",
      "facet": "namedFunction.constructor",
      "code": "public class MyClass {\n    public MyClass() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:24",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "1:4-1:24"
        }
      ]
    },
    {
      "name": "scopes/java/namedFunction.method.iteration.class",
      "languageId": "java",
      "facet": "namedFunction.method.iteration.class",
      "code": "class MyClass { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:15-0:16"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/java/namedFunction.method",
      "languageId": "java",
      "facet": "namedFunction.method",
      "code": "public class MyClass {\n    public void foo() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:25",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "1:4-1:25"
        }
      ]
    },
    {
      "name": "scopes/java/statement/statement.class",
      "languageId": "java",
      "facet": "statement.class",
      "code": "public class Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:19",
              "removal": "0:0-0:19",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:19"
        }
      ]
    },
    {
      "name": "scopes/java/statement/statement.class2",
      "languageId": "java",
      "facet": "statement.class",
      "code": "class Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-0:12",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/java/statement/statement.enum",
      "languageId": "java",
      "facet": "statement.enum",
      "code": "public enum Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:18",
              "removal": "0:0-0:18",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:18"
        }
      ]
    },
    {
      "name": "scopes/java/statement/statement.field.class",
      "languageId": "java",
      "facet": "statement.field.class",
      "code": "public class Foo {\n    private int bar;\n    private int baz = 0;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:1",
              "removal": "0:0-3:1",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-3:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:20",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-1:20"
        },
        {
          "targets": [
            {
              "content": "2:4-2:24",
              "removal": "2:0-3:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:4-2:24"
        }
      ]
    },
    {
      "name": "scopes/java/statement/statement.field.interface",
      "languageId": "java",
      "facet": "statement.field.interface",
      "code": "public interface Foo {\n    private int bar;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:20",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-1:20"
        }
      ]
    },
    {
      "name": "scopes/java/statement/statement.interface",
      "languageId": "java",
      "facet": "statement.interface",
      "code": "public interface Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:23",
              "removal": "0:0-0:23",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:23"
        }
      ]
    },
    {
      "name": "scopes/java/statement/statement.interface2",
      "languageId": "java",
      "facet": "statement.interface",
      "code": "interface Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16",
              "removal": "0:0-0:16",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:16"
        }
      ]
    },
    {
      "name": "scopes/java/statement/statement.iteration.block",
      "languageId": "java",
      "facet": "statement.iteration.block",
      "code": "class Foo {\n    void bar() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:11-2:0"
            }
          ],
          "domain": "0:11-2:0"
        },
        {
          "targets": [
            {
              "content": "1:16-1:17"
            }
          ],
          "domain": "1:16-1:17"
        }
      ]
    },
    {
      "name": "scopes/java/statement/statement.iteration.block2",
      "languageId": "java",
      "facet": "statement.iteration.block",
      "code": "void foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13"
            }
          ],
          "domain": "0:12-0:13"
        }
      ]
    },
    {
      "name": "scopes/java/statement/statement.iteration.block3",
      "languageId": "java",
      "facet": "statement.iteration.block",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8"
            }
          ],
          "domain": "0:0-2:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18"
            }
          ],
          "domain": "1:17-1:18"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7"
            }
          ],
          "domain": "2:6-2:7"
        }
      ]
    },
    {
      "name": "scopes/java/statement/statement.iteration.block4",
      "languageId": "java",
      "facet": "statement.iteration.block",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16"
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15"
            }
          ],
          "domain": "0:14-0:15"
        }
      ]
    },
    {
      "name": "scopes/java/statement/statement.iteration.class",
      "languageId": "java",
      "facet": "statement.iteration.class",
      "code": "class Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13"
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/java/statement/statement.iteration.class2",
      "languageId": "java",
      "facet": "statement.iteration.class",
      "code": "interface Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/java/statement/statement.iteration.document",
      "languageId": "java",
      "facet": "statement.iteration.document",
      "code": "\nint foo;\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/java/statement/statement.iteration.interface",
      "languageId": "java",
      "facet": "statement.iteration.interface",
      "code": "interface Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/java/statement/statement",
      "languageId": "java",
      "facet": "statement",
      "code": "if (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/java/string.multiLine",
      "languageId": "java",
      "facet": "string.multiLine",
      "code": "\"\"\"\nHello\nworld\n\"\"\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:3",
              "removal": "0:0-3:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:3"
        }
      ]
    },
    {
      "name": "scopes/java/string.singleLine",
      "languageId": "java",
      "facet": "string.singleLine",
      "code": "\"Hello world\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/java/switchStatementSubject",
      "languageId": "java",
      "facet": "switchStatementSubject",
      "code": "switch (value) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:13",
              "removal": "0:8-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        }
      ]
    },
    {
      "name": "scopes/java/textFragment.comment.block",
      "languageId": "java",
      "facet": "textFragment.comment.block",
      "code": "/* Hello world */",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17",
              "removal": "0:0-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/java/textFragment.comment.line",
      "languageId": "java",
      "facet": "textFragment.comment.line",
      "code": "// Hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/java/textFragment.string.multiLine",
      "languageId": "java",
      "facet": "textFragment.string.multiLine",
      "code": "\"\"\"\nHello\nworld\n\"\"\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:3-3:0",
              "removal": "0:3-3:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:3-3:0"
        }
      ]
    },
    {
      "name": "scopes/java/textFragment.string.singleLine",
      "languageId": "java",
      "facet": "textFragment.string.singleLine",
      "code": "\"Hello world\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:12",
              "removal": "0:1-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-0:12"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.argument.catch",
      "languageId": "java",
      "facet": "type.argument.catch",
      "code": "try {}\ncatch(final MyException ex) {}\ncatch(final Exception ex) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:12-1:23",
              "removal": "1:12-1:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:6-1:26"
        },
        {
          "targets": [
            {
              "content": "2:12-2:21",
              "removal": "2:12-2:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:6-2:24"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.argument.formal.constructor.iteration",
      "languageId": "java",
      "facet": "type.argument.formal.constructor.iteration",
      "code": "public class MyClass {\n    public MyClass(String name, int age) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:22-2:0"
            }
          ],
          "domain": "0:22-2:0"
        },
        {
          "targets": [
            {
              "content": "1:19-1:39"
            }
          ],
          "domain": "1:19-1:39"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.argument.formal.constructor",
      "languageId": "java",
      "facet": "type.argument.formal.constructor",
      "code": "public class MyClass {\n    public MyClass(final int value) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:25-1:28",
              "removal": "1:25-1:29",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:19-1:34"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.argument.formal.method.iteration",
      "languageId": "java",
      "facet": "type.argument.formal.method.iteration",
      "code": "public class MyClass {\n    public void foo(String name, int age) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:22-2:0"
            }
          ],
          "domain": "0:22-2:0"
        },
        {
          "targets": [
            {
              "content": "1:20-1:40"
            }
          ],
          "domain": "1:20-1:40"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.argument.formal.method",
      "languageId": "java",
      "facet": "type.argument.formal.method",
      "code": "public class MyClass {\n    public void foo(final int value) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:11-1:15",
              "removal": "1:11-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:39"
        },
        {
          "targets": [
            {
              "content": "1:26-1:29",
              "removal": "1:26-1:30",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:20-1:35"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.cast",
      "languageId": "java",
      "facet": "type.cast",
      "code": "(int)5;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:4",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:6"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.class",
      "languageId": "java",
      "facet": "type.class",
      "code": "public class MyClass { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:24",
              "removal": "0:0-0:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:24"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.enum",
      "languageId": "java",
      "facet": "type.enum",
      "code": "public enum Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:18",
              "removal": "0:0-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.field.class",
      "languageId": "java",
      "facet": "type.field.class",
      "code": "class Foo {\n    int bar;\n    int baz = 0;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:1",
              "removal": "0:0-3:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:12"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "2:4-2:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:16"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.field.interface",
      "languageId": "java",
      "facet": "type.field.interface",
      "code": "public interface Foo {\n    private int bar;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:12-1:15",
              "removal": "1:12-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:20"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.foreach",
      "languageId": "java",
      "facet": "type.foreach",
      "code": "for (final Item item : items) {\n\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-0:15",
              "removal": "0:11-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.interface",
      "languageId": "java",
      "facet": "type.interface",
      "code": "public interface Value { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:26",
              "removal": "0:0-0:26",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:26"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.iteration.block",
      "languageId": "java",
      "facet": "type.iteration.block",
      "code": "class Foo {\n    void bar() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:11-2:0"
            }
          ],
          "domain": "0:11-2:0"
        },
        {
          "targets": [
            {
              "content": "1:16-1:17"
            }
          ],
          "domain": "1:16-1:17"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.iteration.block2",
      "languageId": "java",
      "facet": "type.iteration.block",
      "code": "void foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13"
            }
          ],
          "domain": "0:12-0:13"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.iteration.block3",
      "languageId": "java",
      "facet": "type.iteration.block",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8"
            }
          ],
          "domain": "0:0-2:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18"
            }
          ],
          "domain": "1:17-1:18"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7"
            }
          ],
          "domain": "2:6-2:7"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.iteration.block4",
      "languageId": "java",
      "facet": "type.iteration.block",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16"
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15"
            }
          ],
          "domain": "0:14-0:15"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.iteration.class",
      "languageId": "java",
      "facet": "type.iteration.class",
      "code": "class Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13"
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.iteration.class2",
      "languageId": "java",
      "facet": "type.iteration.class",
      "code": "interface Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.iteration.document",
      "languageId": "java",
      "facet": "type.iteration.document",
      "code": "\nint foo;\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.iteration.interface",
      "languageId": "java",
      "facet": "type.iteration.interface",
      "code": "interface Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.resource",
      "languageId": "java",
      "facet": "type.resource",
      "code": "try (PrintWriter writer = create()) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:16",
              "removal": "0:5-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:39"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.return",
      "languageId": "java",
      "facet": "type.return",
      "code": "public class MyClass {\n    public int myFunk() {\n        return 123;\n    }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-4:1",
              "removal": "0:0-4:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-4:1"
        },
        {
          "targets": [
            {
              "content": "1:11-1:14",
              "removal": "1:11-1:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-3:5"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.typeArgument.iteration",
      "languageId": "java",
      "facet": "type.typeArgument.iteration",
      "code": "Map<int, int> foo;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:18"
            }
          ],
          "domain": "0:0-0:18"
        },
        {
          "targets": [
            {
              "content": "0:4-0:12"
            }
          ],
          "domain": "0:4-0:12"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.typeArgument",
      "languageId": "java",
      "facet": "type.typeArgument",
      "code": "Map<int, int> foo;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        },
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:4-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:7"
        },
        {
          "targets": [
            {
              "content": "0:9-0:12",
              "removal": "0:7-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:12"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.variable",
      "languageId": "java",
      "facet": "type.variable",
      "code": "int value;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:10"
        }
      ]
    },
    {
      "name": "scopes/java/type/type.variable2",
      "languageId": "java",
      "facet": "type.variable",
      "code": "int value = 123;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:16"
        }
      ]
    },
    {
      "name": "scopes/java/value/value.assignment",
      "languageId": "java",
      "facet": "value.assignment",
      "code": "value = 123;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:11",
              "removal": "0:5-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/java/value/value.field.class",
      "languageId": "java",
      "facet": "value.field.class",
      "code": "public class Foo {\n    private int value = 123;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:24-1:27",
              "removal": "1:21-1:27",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:28"
        }
      ]
    },
    {
      "name": "scopes/java/value/value.foreach",
      "languageId": "java",
      "facet": "value.foreach",
      "code": "for (final Item item : items) {\n\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:23-0:28",
              "removal": "0:22-0:28",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/java/value/value.iteration.block",
      "languageId": "java",
      "facet": "value.iteration.block",
      "code": "class Foo {\n    void bar() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:11-2:0"
            }
          ],
          "domain": "0:11-2:0"
        },
        {
          "targets": [
            {
              "content": "1:16-1:17"
            }
          ],
          "domain": "1:16-1:17"
        }
      ]
    },
    {
      "name": "scopes/java/value/value.iteration.block2",
      "languageId": "java",
      "facet": "value.iteration.block",
      "code": "void foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:12-0:13"
            }
          ],
          "domain": "0:12-0:13"
        }
      ]
    },
    {
      "name": "scopes/java/value/value.iteration.block3",
      "languageId": "java",
      "facet": "value.iteration.block",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8"
            }
          ],
          "domain": "0:0-2:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18"
            }
          ],
          "domain": "1:17-1:18"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7"
            }
          ],
          "domain": "2:6-2:7"
        }
      ]
    },
    {
      "name": "scopes/java/value/value.iteration.block4",
      "languageId": "java",
      "facet": "value.iteration.block",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16"
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15"
            }
          ],
          "domain": "0:14-0:15"
        }
      ]
    },
    {
      "name": "scopes/java/value/value.iteration.class",
      "languageId": "java",
      "facet": "value.iteration.class",
      "code": "class Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13"
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/java/value/value.iteration.class2",
      "languageId": "java",
      "facet": "value.iteration.class",
      "code": "interface Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/java/value/value.iteration.document",
      "languageId": "java",
      "facet": "value.iteration.document",
      "code": "\nint foo;\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/java/value/value.resource",
      "languageId": "java",
      "facet": "value.resource",
      "code": "try (PrintWriter writer = create()) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:26-0:34",
              "removal": "0:25-0:34",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:39"
        }
      ]
    },
    {
      "name": "scopes/java/value/value.return.lambda",
      "languageId": "java",
      "facet": "value.return.lambda",
      "code": "() -> 0;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:7",
              "removal": "0:5-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        }
      ]
    },
    {
      "name": "scopes/java/value/value.return",
      "languageId": "java",
      "facet": "value.return",
      "code": "public class MyClass {\n    public int foo() {\n        return 123;\n    }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:15-2:18",
              "removal": "2:14-2:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:8-2:19"
        }
      ]
    },
    {
      "name": "scopes/java/value/value.variable",
      "languageId": "java",
      "facet": "value.variable",
      "code": "value = 123;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:11",
              "removal": "0:5-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/java/value/value.yield",
      "languageId": "java",
      "facet": "value.yield",
      "code": "switch (value) {\n    case 1:\n        yield \"foo\";\n    default:\n        yield \"bar\";\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:14-2:19",
              "removal": "2:13-2:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:8-2:20"
        },
        {
          "targets": [
            {
              "content": "4:14-4:19",
              "removal": "4:13-4:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:8-4:20"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/anonymousFunction",
      "languageId": "javascript.core",
      "facet": "anonymousFunction",
      "code": "function() {\n\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/anonymousFunction2",
      "languageId": "javascript.core",
      "facet": "anonymousFunction",
      "code": "() => {\n\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/anonymousFunction3",
      "languageId": "javascript.core",
      "facet": "anonymousFunction",
      "code": "() => 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:7",
              "removal": "0:0-0:7",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:7"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.actual.constructor.iteration",
      "languageId": "javascript.core",
      "facet": "argument.actual.constructor.iteration",
      "code": "new Foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16"
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.actual.constructor.multiLine",
      "languageId": "javascript.core",
      "facet": "argument.actual.constructor.multiLine",
      "code": "new Foo(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.actual.constructor.singleLine",
      "languageId": "javascript.core",
      "facet": "argument.actual.constructor.singleLine",
      "code": "new Foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:11",
              "removal": "0:8-0:13",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:8-0:11"
        },
        {
          "targets": [
            {
              "content": "0:13-0:16",
              "removal": "0:11-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:13-0:16"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.actual.iteration",
      "languageId": "javascript.core",
      "facet": "argument.actual.iteration",
      "code": "foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.actual.method.iteration",
      "languageId": "javascript.core",
      "facet": "argument.actual.method.iteration",
      "code": "foo.bar(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16"
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.actual.method.multiLine",
      "languageId": "javascript.core",
      "facet": "argument.actual.method.multiLine",
      "code": "foo.bar(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.actual.method.singleLine",
      "languageId": "javascript.core",
      "facet": "argument.actual.method.singleLine",
      "code": "foo.bar(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:11",
              "removal": "0:8-0:13",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:8-0:11"
        },
        {
          "targets": [
            {
              "content": "0:13-0:16",
              "removal": "0:11-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:13-0:16"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.actual.multiLine",
      "languageId": "javascript.core",
      "facet": "argument.actual.multiLine",
      "code": "foo(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.actual.singleLine",
      "languageId": "javascript.core",
      "facet": "argument.actual.singleLine",
      "code": "foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:4-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:7"
        },
        {
          "targets": [
            {
              "content": "0:9-0:12",
              "removal": "0:7-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:12"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.catch",
      "languageId": "javascript.core",
      "facet": "argument.catch",
      "code": "try {}\ncatch(error) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:6-1:11",
              "removal": "1:6-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:6-1:11"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.formal.constructor.iteration",
      "languageId": "javascript.core",
      "facet": "argument.formal.constructor.iteration",
      "code": "class MyClass {\n  constructor(aaa, bbb) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:14-1:22"
            }
          ],
          "domain": "1:2-1:27"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.formal.constructor.multiLine",
      "languageId": "javascript.core",
      "facet": "argument.formal.constructor.multiLine",
      "code": "class Foo {\n  constructor(\n    aaa,\n    bbb\n  ) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "2:4-3:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        },
        {
          "targets": [
            {
              "content": "3:4-3:7",
              "removal": "2:7-3:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:4-3:7"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.formal.constructor.singleLine",
      "languageId": "javascript.core",
      "facet": "argument.formal.constructor.singleLine",
      "code": "class Foo {\n  constructor(aaa, bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:14-1:17",
              "removal": "1:14-1:19",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:14-1:17"
        },
        {
          "targets": [
            {
              "content": "1:19-1:22",
              "removal": "1:17-1:22",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:19-1:22"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.formal.iteration",
      "languageId": "javascript.core",
      "facet": "argument.formal.iteration",
      "code": "function myFunk(aaa, bbb) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:24"
            }
          ],
          "domain": "0:0-0:29"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.formal.lambda.iteration",
      "languageId": "javascript.core",
      "facet": "argument.formal.lambda.iteration",
      "code": "(aaa, bbb) => { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:9"
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.formal.lambda.iteration2",
      "languageId": "javascript.core",
      "facet": "argument.formal.lambda.iteration",
      "code": "function (aaa, bbb) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:18"
            }
          ],
          "domain": "0:0-0:23"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.formal.lambda.multiLine",
      "languageId": "javascript.core",
      "facet": "argument.formal.lambda.multiLine",
      "code": "(\n  aaa,\n  bbb\n) => { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:2-1:5",
              "removal": "1:2-2:2",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:2-1:5"
        },
        {
          "targets": [
            {
              "content": "2:2-2:5",
              "removal": "1:5-2:5",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:2-2:5"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.formal.lambda.singleLine",
      "languageId": "javascript.core",
      "facet": "argument.formal.lambda.singleLine",
      "code": "(aaa, bbb) => { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:4",
              "removal": "0:1-0:6",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:1-0:4"
        },
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:4-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:6-0:9"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.formal.lambda.singleLine2",
      "languageId": "javascript.core",
      "facet": "argument.formal.lambda.singleLine",
      "code": "function (aaa, bbb) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:13",
              "removal": "0:10-0:15",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:10-0:13"
        },
        {
          "targets": [
            {
              "content": "0:15-0:18",
              "removal": "0:13-0:18",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:15-0:18"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.formal.method.iteration",
      "languageId": "javascript.core",
      "facet": "argument.formal.method.iteration",
      "code": "class MyClass {\n  myFunk(aaa, bbb) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:9-1:17"
            }
          ],
          "domain": "1:2-1:22"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.formal.method.multiLine",
      "languageId": "javascript.core",
      "facet": "argument.formal.method.multiLine",
      "code": "class Foo {\n  bar(\n    aaa,\n    bbb\n  ) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "2:4-3:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        },
        {
          "targets": [
            {
              "content": "3:4-3:7",
              "removal": "2:7-3:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:4-3:7"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.formal.method.singleLine",
      "languageId": "javascript.core",
      "facet": "argument.formal.method.singleLine",
      "code": "class Foo {\n  bar(aaa, bbb) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:6-1:9",
              "removal": "1:6-1:11",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:6-1:9"
        },
        {
          "targets": [
            {
              "content": "1:11-1:14",
              "removal": "1:9-1:14",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:11-1:14"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.formal.multiLine",
      "languageId": "javascript.core",
      "facet": "argument.formal.multiLine",
      "code": "function foo(\n    aaa,\n    bbb\n) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argument/argument.formal.singleLine",
      "languageId": "javascript.core",
      "facet": "argument.formal.singleLine",
      "code": "function foo(aaa, bbb) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:16",
              "removal": "0:13-0:18",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:13-0:16"
        },
        {
          "targets": [
            {
              "content": "0:18-0:21",
              "removal": "0:16-0:21",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:18-0:21"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.actual.constructor.empty",
      "languageId": "javascript.core",
      "facet": "argumentList.actual.constructor.empty",
      "code": "new Foo();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:8",
              "removal": "0:8-0:8",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.actual.constructor.multiLine",
      "languageId": "javascript.core",
      "facet": "argumentList.actual.constructor.multiLine",
      "code": "new Foo(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:8-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.actual.constructor.singleLine",
      "languageId": "javascript.core",
      "facet": "argumentList.actual.constructor.singleLine",
      "code": "new Foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16",
              "removal": "0:8-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.actual.empty",
      "languageId": "javascript.core",
      "facet": "argumentList.actual.empty",
      "code": "foo();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:4",
              "removal": "0:4-0:4",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:5"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.actual.method.empty",
      "languageId": "javascript.core",
      "facet": "argumentList.actual.method.empty",
      "code": "foo.bar();",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:8",
              "removal": "0:8-0:8",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.actual.method.multiLine",
      "languageId": "javascript.core",
      "facet": "argumentList.actual.method.multiLine",
      "code": "foo.bar(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:8-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.actual.method.singleLine",
      "languageId": "javascript.core",
      "facet": "argumentList.actual.method.singleLine",
      "code": "foo.bar(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16",
              "removal": "0:8-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.actual.multiLine",
      "languageId": "javascript.core",
      "facet": "argumentList.actual.multiLine",
      "code": "foo(\n    aaa,\n    bbb\n);",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:4-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.actual.singleLine",
      "languageId": "javascript.core",
      "facet": "argumentList.actual.singleLine",
      "code": "foo(aaa, bbb);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12",
              "removal": "0:4-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.formal.constructor.empty",
      "languageId": "javascript.core",
      "facet": "argumentList.formal.constructor.empty",
      "code": "class MyClass {\n  constructor() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:14-1:14",
              "removal": "1:14-1:14",
              "insertionDelimiter": ""
            }
          ],
          "domain": "1:2-1:19"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.formal.constructor.multiLine",
      "languageId": "javascript.core",
      "facet": "argumentList.formal.constructor.multiLine",
      "code": "class MyClass {\n  constructor(\n    aaa,\n    bbb\n  ) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:4-3:7",
              "removal": "1:14-4:2",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:2-4:7"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.formal.constructor.singleLine",
      "languageId": "javascript.core",
      "facet": "argumentList.formal.constructor.singleLine",
      "code": "class MyClass {\n  constructor(aaa, bbb) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:14-1:22",
              "removal": "1:14-1:22",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:2-1:27"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.formal.empty",
      "languageId": "javascript.core",
      "facet": "argumentList.formal.empty",
      "code": "function myFunk() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:16",
              "removal": "0:16-0:16",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.formal.lambda.empty",
      "languageId": "javascript.core",
      "facet": "argumentList.formal.lambda.empty",
      "code": "() => { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:1",
              "removal": "0:1-0:1",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.formal.lambda.empty2",
      "languageId": "javascript.core",
      "facet": "argumentList.formal.lambda.empty",
      "code": "function () { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:10",
              "removal": "0:10-0:10",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:15"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.formal.lambda.multiLine",
      "languageId": "javascript.core",
      "facet": "argumentList.formal.lambda.multiLine",
      "code": "(\n  aaa,\n  bbb\n) => { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:2-2:5",
              "removal": "0:1-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:8"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.formal.lambda.multiLine2",
      "languageId": "javascript.core",
      "facet": "argumentList.formal.lambda.multiLine",
      "code": "function (\n  aaa,\n  bbb\n) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:2-2:5",
              "removal": "0:10-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:5"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.formal.lambda.singleLine",
      "languageId": "javascript.core",
      "facet": "argumentList.formal.lambda.singleLine",
      "code": "(aaa, bbb) => { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:9",
              "removal": "0:1-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.formal.lambda.singleLine2",
      "languageId": "javascript.core",
      "facet": "argumentList.formal.lambda.singleLine",
      "code": "function (aaa, bbb) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:18",
              "removal": "0:10-0:18",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:23"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.formal.method.empty",
      "languageId": "javascript.core",
      "facet": "argumentList.formal.method.empty",
      "code": "class MyClass {\n  myFunk() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:9-1:9",
              "removal": "1:9-1:9",
              "insertionDelimiter": ""
            }
          ],
          "domain": "1:2-1:14"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.formal.method.multiLine",
      "languageId": "javascript.core",
      "facet": "argumentList.formal.method.multiLine",
      "code": "class MyClass {\n  myFunk(\n    aaa,\n    bbb\n  ) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:4-3:7",
              "removal": "1:9-4:2",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:2-4:7"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.formal.method.singleLine",
      "languageId": "javascript.core",
      "facet": "argumentList.formal.method.singleLine",
      "code": "class MyClass {\n  myFunk(aaa, bbb) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:9-1:17",
              "removal": "1:9-1:17",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:2-1:22"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.formal.multiLine",
      "languageId": "javascript.core",
      "facet": "argumentList.formal.multiLine",
      "code": "function myFunk(\n    aaa,\n    bbb\n) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:16-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:5"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/argumentList/argumentList.formal.singleLine",
      "languageId": "javascript.core",
      "facet": "argumentList.formal.singleLine",
      "code": "function myFunk(aaa, bbb) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:24",
              "removal": "0:16-0:24",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:29"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/branch/branch.if.elif.else",
      "languageId": "javascript.core",
      "facet": "branch.if.elif.else",
      "code": "if (true) {}\nelse if (false) {}\nelse {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-1:5",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:12"
        },
        {
          "targets": [
            {
              "content": "1:0-1:18",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:0-1:18"
        },
        {
          "targets": [
            {
              "content": "2:0-2:7",
              "removal": "1:18-2:7",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-2:7"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/branch/branch.if.else",
      "languageId": "javascript.core",
      "facet": "branch.if.else",
      "code": "if (true) {}\nelse {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-1:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:12"
        },
        {
          "targets": [
            {
              "content": "1:0-1:7",
              "removal": "0:12-1:7",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:0-1:7"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/branch/branch.if.iteration",
      "languageId": "javascript.core",
      "facet": "branch.if.iteration",
      "code": "if (true) {\n\n}\nelse if (false) {\n\n}\nelse {\n\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-8:1"
            }
          ],
          "domain": "0:0-8:1"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/branch/branch.if",
      "languageId": "javascript.core",
      "facet": "branch.if",
      "code": "if (true) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-0:12",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/branch/branch.switchCase.iteration",
      "languageId": "javascript.core",
      "facet": "branch.switchCase.iteration",
      "code": "switch (value) {\n  case 0: { }\n  case 1: { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-3:0"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/branch/branch.switchCase",
      "languageId": "javascript.core",
      "facet": "branch.switchCase",
      "code": "switch (value) {\n  case 0: { }\n  default: { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:2-1:13",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:2-1:13"
        },
        {
          "targets": [
            {
              "content": "2:2-2:14",
              "removal": "2:0-3:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:2-2:14"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/branch/branch.ternary.iteration",
      "languageId": "javascript.core",
      "facet": "branch.ternary.iteration",
      "code": "true ? 0 : 1",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12"
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/branch/branch.ternary",
      "languageId": "javascript.core",
      "facet": "branch.ternary",
      "code": "true ? 0 : 1",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:7-0:9",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:7-0:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:10-0:12",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/branch/branch.try.iteration",
      "languageId": "javascript.core",
      "facet": "branch.try.iteration",
      "code": "try {}\ncatch(error) {}\nfinally {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:10"
            }
          ],
          "domain": "0:0-2:10"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/branch/branch.try",
      "languageId": "javascript.core",
      "facet": "branch.try",
      "code": "try {}\ncatch(error) {}\nfinally {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:6",
              "removal": "0:0-1:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:6"
        },
        {
          "targets": [
            {
              "content": "1:0-1:15",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:0-1:15"
        },
        {
          "targets": [
            {
              "content": "2:0-2:10",
              "removal": "1:15-2:10",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-2:10"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/class.iteration.document",
      "languageId": "javascript.core",
      "facet": "class.iteration.document",
      "code": "\nint foo;\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/class",
      "languageId": "javascript.core",
      "facet": "class",
      "code": "class Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-0:12",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/class2",
      "languageId": "javascript.core",
      "facet": "class",
      "code": "export default class Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:27",
              "removal": "0:0-0:27",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:27"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/class3",
      "languageId": "javascript.core",
      "facet": "class",
      "code": "export class Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:19",
              "removal": "0:0-0:19",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:19"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/className.iteration.document",
      "languageId": "javascript.core",
      "facet": "className.iteration.document",
      "code": "\nint foo;\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/className",
      "languageId": "javascript.core",
      "facet": "className",
      "code": "class MyClass {\n\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:13",
              "removal": "0:6-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/collectionItem.unenclosed.iteration",
      "languageId": "javascript.core",
      "facet": "collectionItem.unenclosed.iteration",
      "code": "let foo, bar;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/collectionItem.unenclosed",
      "languageId": "javascript.core",
      "facet": "collectionItem.unenclosed",
      "code": "let foo, bar;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:7",
              "removal": "0:0-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:7"
        },
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:4-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:7"
        },
        {
          "targets": [
            {
              "content": "0:9-0:12",
              "removal": "0:7-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:12"
        },
        {
          "targets": [
            {
              "content": "0:9-0:13",
              "removal": "0:7-0:13",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:13"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/comment.block",
      "languageId": "javascript.core",
      "facet": "comment.block",
      "code": "/*\n  Hello world\n*/",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:2",
              "removal": "0:0-2:2",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:2"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/comment.block2",
      "languageId": "javascript.core",
      "facet": "comment.block",
      "code": "/**\n* Hello world\n*/",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:2",
              "removal": "0:0-2:2",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:2"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/comment.line",
      "languageId": "javascript.core",
      "facet": "comment.line",
      "code": "// Hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/condition/condition.doWhile",
      "languageId": "javascript.core",
      "facet": "condition.doWhile",
      "code": "do {\n\n} while (true);",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:9-2:13",
              "removal": "2:9-2:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:15"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/condition/condition.for",
      "languageId": "javascript.core",
      "facet": "condition.for",
      "code": "for (let i = 0; i < 10; ++i) {\n\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:22",
              "removal": "0:15-0:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/condition/condition.if",
      "languageId": "javascript.core",
      "facet": "condition.if",
      "code": "if (true) {}\nelse if (false) {}\nelse {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:8",
              "removal": "0:4-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:7"
        },
        {
          "targets": [
            {
              "content": "1:9-1:14",
              "removal": "1:9-1:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:18"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/condition/condition.switchCase.iteration",
      "languageId": "javascript.core",
      "facet": "condition.switchCase.iteration",
      "code": "switch (value) {\n  case 0: { }\n  case 1: { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-3:0"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/condition/condition.switchCase",
      "languageId": "javascript.core",
      "facet": "condition.switchCase",
      "code": "switch (value) {\n  case 0: { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:7-1:8",
              "removal": "1:6-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:2-1:13"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/condition/condition.ternary",
      "languageId": "javascript.core",
      "facet": "condition.ternary",
      "code": "true ? 0 : 1",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:4",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/condition/condition.while",
      "languageId": "javascript.core",
      "facet": "condition.while",
      "code": "while (true) {\n\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:11",
              "removal": "0:7-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/disqualifyDelimiter",
      "languageId": "javascript.core",
      "facet": "disqualifyDelimiter",
      "code": "1 < 2;\n1 > 2;\n1 <= 2;\n1 >= 2;\na << 2;\na >> 2;\na <<= 2;\na >>= 2;\na >>> 2;\na >>>= 2;\n() => 2;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "1:2-1:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "2:2-2:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "3:2-3:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "4:2-4:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "5:2-5:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "6:2-6:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "7:2-7:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "8:2-8:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "9:2-9:6"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "10:3-10:5"
            }
          ]
        }
      ]
    },
    {
      "name": "scopes/javascript.core/fieldAccess",
      "languageId": "javascript.core",
      "facet": "fieldAccess",
      "code": "foo.bar(0);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:3"
        },
        {
          "targets": [
            {
              "content": "0:3-0:10",
              "removal": "0:3-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:3-0:10"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/functionCall.constructor",
      "languageId": "javascript.core",
      "facet": "functionCall.constructor",
      "code": "new Foo.bar(0);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/functionCall",
      "languageId": "javascript.core",
      "facet": "functionCall",
      "code": "foo.bar(0);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:10",
              "removal": "0:0-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:10"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/functionCallee.constructor",
      "languageId": "javascript.core",
      "facet": "functionCallee.constructor",
      "code": "new Foo.bar(0);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:11",
              "removal": "0:0-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/functionCallee",
      "languageId": "javascript.core",
      "facet": "functionCallee",
      "code": "foo.bar(0);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:7",
              "removal": "0:0-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:10"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/functionName/functionName.constructor",
      "languageId": "javascript.core",
      "facet": "functionName.constructor",
      "code": "class MyClass {\n  constructor() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:2-1:13",
              "removal": "1:2-1:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:2-1:19"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/functionName/functionName.iteration.document",
      "languageId": "javascript.core",
      "facet": "functionName.iteration.document",
      "code": "\nfunction myFunk() { }\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/functionName/functionName.method.iteration.class",
      "languageId": "javascript.core",
      "facet": "functionName.method.iteration.class",
      "code": "class MyClass {\n  myFunk() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/functionName/functionName.method",
      "languageId": "javascript.core",
      "facet": "functionName.method",
      "code": "class MyClass {\n  myFunk() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:2-1:8",
              "removal": "1:2-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:2-1:14"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/functionName/functionName",
      "languageId": "javascript.core",
      "facet": "functionName",
      "code": "function myFunk() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:15",
              "removal": "0:9-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/functionName/functionName2",
      "languageId": "javascript.core",
      "facet": "functionName",
      "code": "map = { funk: () => { } }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:12",
              "removal": "0:7-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:8-0:23"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/functionName/functionName3",
      "languageId": "javascript.core",
      "facet": "functionName",
      "code": "map = { funk: function() { } }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:12",
              "removal": "0:7-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:8-0:28"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/ifStatement",
      "languageId": "javascript.core",
      "facet": "ifStatement",
      "code": "if (true) {\n\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/interior/interior.class",
      "languageId": "javascript.core",
      "facet": "interior.class",
      "code": "class Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:11-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:11-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:10-0:13"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/interior/interior.constructor",
      "languageId": "javascript.core",
      "facet": "interior.constructor",
      "code": "class Foo {\n    constructor() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:21",
              "removal": "0:11-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:21",
              "removal": "0:11-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:10-2:1"
        },
        {
          "targets": [
            {
              "content": "1:19-1:20",
              "removal": "1:19-1:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:21"
        },
        {
          "targets": [
            {
              "content": "1:16-1:16",
              "removal": "1:16-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:15-1:17"
        },
        {
          "targets": [
            {
              "content": "1:19-1:20",
              "removal": "1:19-1:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:18-1:21"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/interior/interior.doWhile",
      "languageId": "javascript.core",
      "facet": "interior.doWhile",
      "code": "do { } while (true);",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:5",
              "removal": "0:4-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:20"
        },
        {
          "targets": [
            {
              "content": "0:4-0:5",
              "removal": "0:4-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:3-0:6"
        },
        {
          "targets": [
            {
              "content": "0:14-0:18",
              "removal": "0:14-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:13-0:19"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/interior/interior.for",
      "languageId": "javascript.core",
      "facet": "interior.for",
      "code": "for (let i = 0; i < size; ++i) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:32-0:33",
              "removal": "0:32-0:33",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:34"
        },
        {
          "targets": [
            {
              "content": "0:5-0:29",
              "removal": "0:5-0:29",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:4-0:30"
        },
        {
          "targets": [
            {
              "content": "0:32-0:33",
              "removal": "0:32-0:33",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:31-0:34"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/interior/interior.foreach",
      "languageId": "javascript.core",
      "facet": "interior.foreach",
      "code": "for (const v of values) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:25-0:26",
              "removal": "0:25-0:26",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:27"
        },
        {
          "targets": [
            {
              "content": "0:5-0:22",
              "removal": "0:5-0:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:4-0:23"
        },
        {
          "targets": [
            {
              "content": "0:25-0:26",
              "removal": "0:25-0:26",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:24-0:27"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/interior/interior.foreach2",
      "languageId": "javascript.core",
      "facet": "interior.foreach",
      "code": "for (const k in values) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:25-0:26",
              "removal": "0:25-0:26",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:27"
        },
        {
          "targets": [
            {
              "content": "0:5-0:22",
              "removal": "0:5-0:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:4-0:23"
        },
        {
          "targets": [
            {
              "content": "0:25-0:26",
              "removal": "0:25-0:26",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:24-0:27"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/interior/interior.function",
      "languageId": "javascript.core",
      "facet": "interior.function",
      "code": "function foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:17",
              "removal": "0:16-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        },
        {
          "targets": [
            {
              "content": "0:13-0:13",
              "removal": "0:13-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:12-0:14"
        },
        {
          "targets": [
            {
              "content": "0:16-0:17",
              "removal": "0:16-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:15-0:18"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/interior/interior.if",
      "languageId": "javascript.core",
      "facet": "interior.if",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:11-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:4-0:8",
              "removal": "0:4-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:3-0:9"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:11-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:10-0:13"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18",
              "removal": "1:17-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:19"
        },
        {
          "targets": [
            {
              "content": "1:9-1:14",
              "removal": "1:9-1:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:8-1:15"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18",
              "removal": "1:17-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:16-1:19"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7",
              "removal": "2:6-2:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-2:8"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7",
              "removal": "2:6-2:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:5-2:8"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/interior/interior.lambda.block",
      "languageId": "javascript.core",
      "facet": "interior.lambda.block",
      "code": "() => { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:1",
              "removal": "0:1-0:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:2"
        },
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:7-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:9"
        },
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:7-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:6-0:9"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/interior/interior.lambda.expression",
      "languageId": "javascript.core",
      "facet": "interior.lambda.expression",
      "code": "() => 0;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:1",
              "removal": "0:1-0:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:2"
        },
        {
          "targets": [
            {
              "content": "0:6-0:7",
              "removal": "0:6-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/interior/interior.method",
      "languageId": "javascript.core",
      "facet": "interior.method",
      "code": "class Foo {\n    bar() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:13",
              "removal": "0:11-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:13",
              "removal": "0:11-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:10-2:1"
        },
        {
          "targets": [
            {
              "content": "1:11-1:12",
              "removal": "1:11-1:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:13"
        },
        {
          "targets": [
            {
              "content": "1:8-1:8",
              "removal": "1:8-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:7-1:9"
        },
        {
          "targets": [
            {
              "content": "1:11-1:12",
              "removal": "1:11-1:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:10-1:13"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/interior/interior.static",
      "languageId": "javascript.core",
      "facet": "interior.static",
      "code": "class Foo {\n    static { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:14",
              "removal": "0:11-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:14",
              "removal": "0:11-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:10-2:1"
        },
        {
          "targets": [
            {
              "content": "1:12-1:13",
              "removal": "1:12-1:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:14"
        },
        {
          "targets": [
            {
              "content": "1:12-1:13",
              "removal": "1:12-1:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:11-1:14"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/interior/interior.switch",
      "languageId": "javascript.core",
      "facet": "interior.switch",
      "code": "switch (value) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:17",
              "removal": "0:16-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        },
        {
          "targets": [
            {
              "content": "0:8-0:13",
              "removal": "0:8-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:14"
        },
        {
          "targets": [
            {
              "content": "0:16-0:17",
              "removal": "0:16-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:15-0:18"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/interior/interior.switchCase",
      "languageId": "javascript.core",
      "facet": "interior.switchCase",
      "code": "switch (value) {\n    case 0:\n        foo;\n        break;\n    case 1: {\n        break;\n    }\n    default:\n        break;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-8:14",
              "removal": "0:16-9:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-9:1"
        },
        {
          "targets": [
            {
              "content": "0:8-0:13",
              "removal": "0:8-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:14"
        },
        {
          "targets": [
            {
              "content": "1:4-8:14",
              "removal": "0:16-9:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:15-9:1"
        },
        {
          "targets": [
            {
              "content": "2:8-3:14",
              "removal": "2:8-3:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-3:14"
        },
        {
          "targets": [
            {
              "content": "5:8-5:14",
              "removal": "4:13-6:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:4-6:5"
        },
        {
          "targets": [
            {
              "content": "5:8-5:14",
              "removal": "4:13-6:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:12-6:5"
        },
        {
          "targets": [
            {
              "content": "8:8-8:14",
              "removal": "8:8-8:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "7:4-8:14"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/interior/interior.ternary",
      "languageId": "javascript.core",
      "facet": "interior.ternary",
      "code": "true ? 1 : 0;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:4",
              "removal": "0:0-0:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:4"
        },
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:7-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12",
              "removal": "0:11-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/interior/interior.try",
      "languageId": "javascript.core",
      "facet": "interior.try",
      "code": "try { }\ncatch(e) { }\nfinally { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:6",
              "removal": "0:5-0:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        },
        {
          "targets": [
            {
              "content": "0:5-0:6",
              "removal": "0:5-0:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:4-0:7"
        },
        {
          "targets": [
            {
              "content": "1:10-1:11",
              "removal": "1:10-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:12"
        },
        {
          "targets": [
            {
              "content": "1:6-1:7",
              "removal": "1:6-1:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:5-1:8"
        },
        {
          "targets": [
            {
              "content": "1:10-1:11",
              "removal": "1:10-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:9-1:12"
        },
        {
          "targets": [
            {
              "content": "2:9-2:10",
              "removal": "2:9-2:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-2:11"
        },
        {
          "targets": [
            {
              "content": "2:9-2:10",
              "removal": "2:9-2:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:8-2:11"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/interior/interior.while",
      "languageId": "javascript.core",
      "facet": "interior.while",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:14-0:15",
              "removal": "0:14-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:7-0:11",
              "removal": "0:7-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:6-0:12"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15",
              "removal": "0:14-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:13-0:16"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/key.mapPair.iteration",
      "languageId": "javascript.core",
      "facet": "key.mapPair.iteration",
      "code": "{ value: 123 }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:13"
            }
          ],
          "domain": "0:1-0:13"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/key.mapPair",
      "languageId": "javascript.core",
      "facet": "key.mapPair",
      "code": "{ value: 123 }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:7",
              "removal": "0:2-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:2-0:12"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/list",
      "languageId": "javascript.core",
      "facet": "list",
      "code": "[1, 2, 3]",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:9",
              "removal": "0:0-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/map",
      "languageId": "javascript.core",
      "facet": "map",
      "code": "{ value: 123 }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.argument.catch",
      "languageId": "javascript.core",
      "facet": "name.argument.catch",
      "code": "try {}\ncatch(error) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:6-1:11",
              "removal": "1:6-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:6-1:11"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.argument.formal.constructor.iteration",
      "languageId": "javascript.core",
      "facet": "name.argument.formal.constructor.iteration",
      "code": "class MyClass {\n  constructor(aaa, bbb) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:14-1:22"
            }
          ],
          "domain": "1:14-1:22"
        },
        {
          "targets": [
            {
              "content": "1:25-1:26"
            }
          ],
          "domain": "1:25-1:26"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.argument.formal.constructor",
      "languageId": "javascript.core",
      "facet": "name.argument.formal.constructor",
      "code": "class MyClass {\n  constructor(aaa, bbb) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:13",
              "removal": "0:6-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:2-1:13",
              "removal": "1:2-1:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:2-1:27"
        },
        {
          "targets": [
            {
              "content": "1:14-1:17",
              "removal": "1:14-1:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:14-1:17"
        },
        {
          "targets": [
            {
              "content": "1:19-1:22",
              "removal": "1:18-1:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:19-1:22"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.argument.formal.constructor2",
      "languageId": "javascript.core",
      "facet": "name.argument.formal.constructor",
      "code": "class MyClass {\n  constructor(aaa = 0, bbb = 1) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:13",
              "removal": "0:6-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:2-1:13",
              "removal": "1:2-1:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:2-1:35"
        },
        {
          "targets": [
            {
              "content": "1:14-1:17",
              "removal": "1:14-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:14-1:21"
        },
        {
          "targets": [
            {
              "content": "1:23-1:26",
              "removal": "1:23-1:27",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:23-1:30"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.argument.formal.iteration",
      "languageId": "javascript.core",
      "facet": "name.argument.formal.iteration",
      "code": "function myFunk(aaa, bbb) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:29"
            }
          ],
          "domain": "0:0-0:29"
        },
        {
          "targets": [
            {
              "content": "0:16-0:24"
            }
          ],
          "domain": "0:16-0:24"
        },
        {
          "targets": [
            {
              "content": "0:27-0:28"
            }
          ],
          "domain": "0:27-0:28"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.argument.formal.method.iteration",
      "languageId": "javascript.core",
      "facet": "name.argument.formal.method.iteration",
      "code": "class MyClass {\n  myFunk(aaa, bbb) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:9-1:17"
            }
          ],
          "domain": "1:9-1:17"
        },
        {
          "targets": [
            {
              "content": "1:20-1:21"
            }
          ],
          "domain": "1:20-1:21"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.argument.formal.method",
      "languageId": "javascript.core",
      "facet": "name.argument.formal.method",
      "code": "class MyClass {\n  myFunk(aaa, bbb) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:13",
              "removal": "0:6-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:2-1:8",
              "removal": "1:2-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:2-1:22"
        },
        {
          "targets": [
            {
              "content": "1:9-1:12",
              "removal": "1:9-1:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:9-1:12"
        },
        {
          "targets": [
            {
              "content": "1:14-1:17",
              "removal": "1:13-1:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:14-1:17"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.argument.formal.method2",
      "languageId": "javascript.core",
      "facet": "name.argument.formal.method",
      "code": "class MyClass {\n  myFunk(aaa = 0, bbb = 1) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:13",
              "removal": "0:6-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:2-1:8",
              "removal": "1:2-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:2-1:30"
        },
        {
          "targets": [
            {
              "content": "1:9-1:12",
              "removal": "1:9-1:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:9-1:16"
        },
        {
          "targets": [
            {
              "content": "1:18-1:21",
              "removal": "1:18-1:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:18-1:25"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.argument.formal",
      "languageId": "javascript.core",
      "facet": "name.argument.formal",
      "code": "function myFunk(aaa, bbb) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:15",
              "removal": "0:9-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:29"
        },
        {
          "targets": [
            {
              "content": "0:16-0:19",
              "removal": "0:16-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:16-0:19"
        },
        {
          "targets": [
            {
              "content": "0:21-0:24",
              "removal": "0:20-0:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:21-0:24"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.argument.formal2",
      "languageId": "javascript.core",
      "facet": "name.argument.formal",
      "code": "function myFunk(aaa = 0, bbb = 1) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:15",
              "removal": "0:9-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:37"
        },
        {
          "targets": [
            {
              "content": "0:16-0:19",
              "removal": "0:16-0:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:16-0:23"
        },
        {
          "targets": [
            {
              "content": "0:25-0:28",
              "removal": "0:25-0:29",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:25-0:32"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.assignment.pattern",
      "languageId": "javascript.core",
      "facet": "name.assignment.pattern",
      "code": "{ aaa: bbb } = ccc;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:19"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.assignment",
      "languageId": "javascript.core",
      "facet": "name.assignment",
      "code": "aaa = bbb;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:10"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.class",
      "languageId": "javascript.core",
      "facet": "name.class",
      "code": "class Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:6-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.constructor",
      "languageId": "javascript.core",
      "facet": "name.constructor",
      "code": "class MyClass {\n  constructor() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:13",
              "removal": "0:6-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:2-1:13",
              "removal": "1:2-1:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:2-1:19"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.field.class",
      "languageId": "javascript.core",
      "facet": "name.field.class",
      "code": "class Foo {\n  bar;\n  baz = 0;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:6-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:1"
        },
        {
          "targets": [
            {
              "content": "1:2-1:5",
              "removal": "1:0-1:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:2-1:6"
        },
        {
          "targets": [
            {
              "content": "2:2-2:5",
              "removal": "2:2-2:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:2-2:10"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.foreach",
      "languageId": "javascript.core",
      "facet": "name.foreach",
      "code": "for (const item of items) {\n\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-0:15",
              "removal": "0:11-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.function",
      "languageId": "javascript.core",
      "facet": "name.function",
      "code": "function myFunk() {\n\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:15",
              "removal": "0:9-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.iteration.block",
      "languageId": "javascript.core",
      "facet": "name.iteration.block",
      "code": "class Foo {\n    bar() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:11-2:0"
            }
          ],
          "domain": "0:11-2:0"
        },
        {
          "targets": [
            {
              "content": "1:11-1:12"
            }
          ],
          "domain": "1:11-1:12"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.iteration.block2",
      "languageId": "javascript.core",
      "facet": "name.iteration.block",
      "code": "function foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:18"
            }
          ],
          "domain": "0:0-0:18"
        },
        {
          "targets": [
            {
              "content": "0:16-0:17"
            }
          ],
          "domain": "0:16-0:17"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.iteration.block3",
      "languageId": "javascript.core",
      "facet": "name.iteration.block",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8"
            }
          ],
          "domain": "0:0-2:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18"
            }
          ],
          "domain": "1:17-1:18"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7"
            }
          ],
          "domain": "2:6-2:7"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.iteration.block4",
      "languageId": "javascript.core",
      "facet": "name.iteration.block",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16"
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15"
            }
          ],
          "domain": "0:14-0:15"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.iteration.class",
      "languageId": "javascript.core",
      "facet": "name.iteration.class",
      "code": "class Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13"
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.iteration.document",
      "languageId": "javascript.core",
      "facet": "name.iteration.document",
      "code": "\nlet foo;\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.method",
      "languageId": "javascript.core",
      "facet": "name.method",
      "code": "class MyClass {\n  myFunk() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:13",
              "removal": "0:6-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:2-1:8",
              "removal": "1:2-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:2-1:14"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.variable.pattern",
      "languageId": "javascript.core",
      "facet": "name.variable.pattern",
      "code": "const {aaa: bbb} = ccc;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:16",
              "removal": "0:0-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:23"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.variable.pattern2",
      "languageId": "javascript.core",
      "facet": "name.variable.pattern",
      "code": "function funk({ value = 2 }) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:13",
              "removal": "0:9-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:32"
        },
        {
          "targets": [
            {
              "content": "0:16-0:21",
              "removal": "0:16-0:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:16-0:25"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.variable.pattern3",
      "languageId": "javascript.core",
      "facet": "name.variable.pattern",
      "code": "const { foo = 1 } = opts;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:17",
              "removal": "0:0-0:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:25"
        },
        {
          "targets": [
            {
              "content": "0:8-0:11",
              "removal": "0:8-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:8-0:15"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/name/name.variable",
      "languageId": "javascript.core",
      "facet": "name.variable",
      "code": "const name = \"Hello world\";",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:10",
              "removal": "0:0-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:27"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/namedFunction/namedFunction.constructor",
      "languageId": "javascript.core",
      "facet": "namedFunction.constructor",
      "code": "class MyClass {\n  constructor() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:2-1:19",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "1:2-1:19"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/namedFunction/namedFunction.iteration.document",
      "languageId": "javascript.core",
      "facet": "namedFunction.iteration.document",
      "code": "\nfunction myFunk() { }\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/namedFunction/namedFunction.method.iteration.class",
      "languageId": "javascript.core",
      "facet": "namedFunction.method.iteration.class",
      "code": "class MyClass {\n  myFunk() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/namedFunction/namedFunction.method",
      "languageId": "javascript.core",
      "facet": "namedFunction.method",
      "code": "class MyClass {\n  myFunk() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:2-1:14",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "1:2-1:14"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/namedFunction/namedFunction",
      "languageId": "javascript.core",
      "facet": "namedFunction",
      "code": "function myFunk() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:21",
              "removal": "0:0-0:21",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/namedFunction/namedFunction2",
      "languageId": "javascript.core",
      "facet": "namedFunction",
      "code": "const myFunk = function() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:29",
              "removal": "0:0-0:29",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:29"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/pairDelimiter",
      "languageId": "javascript.core",
      "facet": "pairDelimiter",
      "code": "taggedTemplate`hello ${world}`",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:15",
              "removal": "0:0-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:15"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/regularExpression",
      "languageId": "javascript.core",
      "facet": "regularExpression",
      "code": "/^\\w+$/g",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:8",
              "removal": "0:0-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:8"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/statement/statement.class",
      "languageId": "javascript.core",
      "facet": "statement.class",
      "code": "class Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/statement/statement.field.class",
      "languageId": "javascript.core",
      "facet": "statement.field.class",
      "code": "class Foo {\n  bar;\n  baz = 0;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:1",
              "removal": "0:0-3:1",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-3:1"
        },
        {
          "targets": [
            {
              "content": "1:2-1:6",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:2-1:6"
        },
        {
          "targets": [
            {
              "content": "2:2-2:10",
              "removal": "2:0-3:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:2-2:10"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/statement/statement.iteration.block",
      "languageId": "javascript.core",
      "facet": "statement.iteration.block",
      "code": "class Foo {\n    bar() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:11-2:0"
            }
          ],
          "domain": "0:11-2:0"
        },
        {
          "targets": [
            {
              "content": "1:11-1:12"
            }
          ],
          "domain": "1:11-1:12"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/statement/statement.iteration.block2",
      "languageId": "javascript.core",
      "facet": "statement.iteration.block",
      "code": "function foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:18"
            }
          ],
          "domain": "0:0-0:18"
        },
        {
          "targets": [
            {
              "content": "0:16-0:17"
            }
          ],
          "domain": "0:16-0:17"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/statement/statement.iteration.block3",
      "languageId": "javascript.core",
      "facet": "statement.iteration.block",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8"
            }
          ],
          "domain": "0:0-2:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18"
            }
          ],
          "domain": "1:17-1:18"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7"
            }
          ],
          "domain": "2:6-2:7"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/statement/statement.iteration.block4",
      "languageId": "javascript.core",
      "facet": "statement.iteration.block",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16"
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15"
            }
          ],
          "domain": "0:14-0:15"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/statement/statement.iteration.class",
      "languageId": "javascript.core",
      "facet": "statement.iteration.class",
      "code": "class Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13"
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/statement/statement.iteration.document",
      "languageId": "javascript.core",
      "facet": "statement.iteration.document",
      "code": "\nfunction foo() { }\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        },
        {
          "targets": [
            {
              "content": "1:16-1:17"
            }
          ],
          "domain": "1:16-1:17"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/statement/statement",
      "languageId": "javascript.core",
      "facet": "statement",
      "code": "const value = 0;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16",
              "removal": "0:0-0:16",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:16"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/string.multiLine",
      "languageId": "javascript.core",
      "facet": "string.multiLine",
      "code": "`Hello\nworld`",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:6",
              "removal": "0:0-1:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:6"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/string.singleLine",
      "languageId": "javascript.core",
      "facet": "string.singleLine",
      "code": "\"Hello world\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/switchStatementSubject",
      "languageId": "javascript.core",
      "facet": "switchStatementSubject",
      "code": "switch (value) {\n\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:13",
              "removal": "0:8-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/textFragment/textFragment.comment.block",
      "languageId": "javascript.core",
      "facet": "textFragment.comment.block",
      "code": "/* hello\nworld */",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8",
              "removal": "0:0-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/textFragment/textFragment.comment.block2",
      "languageId": "javascript.core",
      "facet": "textFragment.comment.block",
      "code": "/**\n* hello\n* world\n*/",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:2",
              "removal": "0:0-3:2",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:2"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/textFragment/textFragment.comment.line",
      "languageId": "javascript.core",
      "facet": "textFragment.comment.line",
      "code": "// hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/textFragment/textFragment.string.multiLine",
      "languageId": "javascript.core",
      "facet": "textFragment.string.multiLine",
      "code": "`hello\nworld`",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-1:5",
              "removal": "0:1-1:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-1:5"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/textFragment/textFragment.string.singleLine",
      "languageId": "javascript.core",
      "facet": "textFragment.string.singleLine",
      "code": "\"hello world\"\n'hello world'\n\"hello\\nworld\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:12",
              "removal": "0:1-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-0:12"
        },
        {
          "targets": [
            {
              "content": "1:1-1:12",
              "removal": "1:1-1:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:1-1:12"
        },
        {
          "targets": [
            {
              "content": "2:1-2:13",
              "removal": "2:1-2:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:1-2:13"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.argument.formal.constructor.iteration",
      "languageId": "javascript.core",
      "facet": "value.argument.formal.constructor.iteration",
      "code": "class MyClass {\n  constructor(aaa = 0, bbb = 1) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:14-1:30"
            }
          ],
          "domain": "1:14-1:30"
        },
        {
          "targets": [
            {
              "content": "1:33-1:34"
            }
          ],
          "domain": "1:33-1:34"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.argument.formal.constructor",
      "languageId": "javascript.core",
      "facet": "value.argument.formal.constructor",
      "code": "class MyClass {\n  constructor(aaa = 0, bbb = 1) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:20-1:21",
              "removal": "1:17-1:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:14-1:21"
        },
        {
          "targets": [
            {
              "content": "1:29-1:30",
              "removal": "1:26-1:30",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:23-1:30"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.argument.formal.iteration",
      "languageId": "javascript.core",
      "facet": "value.argument.formal.iteration",
      "code": "function myFunk(aaa = 0, bbb = 1) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:37"
            }
          ],
          "domain": "0:0-0:37"
        },
        {
          "targets": [
            {
              "content": "0:16-0:32"
            }
          ],
          "domain": "0:16-0:32"
        },
        {
          "targets": [
            {
              "content": "0:35-0:36"
            }
          ],
          "domain": "0:35-0:36"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.argument.formal.method.iteration",
      "languageId": "javascript.core",
      "facet": "value.argument.formal.method.iteration",
      "code": "class MyClass {\n  myFunk(aaa = 0, bbb = 1) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:9-1:25"
            }
          ],
          "domain": "1:9-1:25"
        },
        {
          "targets": [
            {
              "content": "1:28-1:29"
            }
          ],
          "domain": "1:28-1:29"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.argument.formal.method",
      "languageId": "javascript.core",
      "facet": "value.argument.formal.method",
      "code": "class MyClass {\n  myFunk(aaa = 0, bbb = 1) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:15-1:16",
              "removal": "1:12-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:9-1:16"
        },
        {
          "targets": [
            {
              "content": "1:24-1:25",
              "removal": "1:21-1:25",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:18-1:25"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.argument.formal",
      "languageId": "javascript.core",
      "facet": "value.argument.formal",
      "code": "function myFunk(aaa = 0, bbb = 1) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:22-0:23",
              "removal": "0:19-0:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:16-0:23"
        },
        {
          "targets": [
            {
              "content": "0:31-0:32",
              "removal": "0:28-0:32",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:25-0:32"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.assignment",
      "languageId": "javascript.core",
      "facet": "value.assignment",
      "code": "aaa = bbb;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:3-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:10"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.field.class",
      "languageId": "javascript.core",
      "facet": "value.field.class",
      "code": "class Foo {\n  bar = 0;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:8-1:9",
              "removal": "1:5-1:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:2-1:10"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.foreach",
      "languageId": "javascript.core",
      "facet": "value.foreach",
      "code": "for (const item of items) {\n\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:19-0:24",
              "removal": "0:18-0:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.iteration.block",
      "languageId": "javascript.core",
      "facet": "value.iteration.block",
      "code": "class Foo {\n    bar() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:11-2:0"
            }
          ],
          "domain": "0:11-2:0"
        },
        {
          "targets": [
            {
              "content": "1:11-1:12"
            }
          ],
          "domain": "1:11-1:12"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.iteration.block2",
      "languageId": "javascript.core",
      "facet": "value.iteration.block",
      "code": "function foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:18"
            }
          ],
          "domain": "0:0-0:18"
        },
        {
          "targets": [
            {
              "content": "0:16-0:17"
            }
          ],
          "domain": "0:16-0:17"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.iteration.block3",
      "languageId": "javascript.core",
      "facet": "value.iteration.block",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8"
            }
          ],
          "domain": "0:0-2:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18"
            }
          ],
          "domain": "1:17-1:18"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7"
            }
          ],
          "domain": "2:6-2:7"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.iteration.class",
      "languageId": "javascript.core",
      "facet": "value.iteration.class",
      "code": "class Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13"
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.iteration.document",
      "languageId": "javascript.core",
      "facet": "value.iteration.document",
      "code": "\nlet foo;\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.mapPair.iteration",
      "languageId": "javascript.core",
      "facet": "value.mapPair.iteration",
      "code": "{ value: 123 }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:1-0:13"
            }
          ],
          "domain": "0:1-0:13"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.mapPair",
      "languageId": "javascript.core",
      "facet": "value.mapPair",
      "code": "{ value: 123 }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:12",
              "removal": "0:7-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:2-0:12"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.return.lambda",
      "languageId": "javascript.core",
      "facet": "value.return.lambda",
      "code": "() => 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:7",
              "removal": "0:5-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.return",
      "languageId": "javascript.core",
      "facet": "value.return",
      "code": "function myFunk() {\n  return 0;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:9-1:10",
              "removal": "1:8-1:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:2-1:11"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.variable.pattern",
      "languageId": "javascript.core",
      "facet": "value.variable.pattern",
      "code": "function funk({ value = 2 }) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:24-0:25",
              "removal": "0:21-0:25",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:16-0:25"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.variable.pattern2",
      "languageId": "javascript.core",
      "facet": "value.variable.pattern",
      "code": "const { foo = 1 } = opts;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:20-0:24",
              "removal": "0:17-0:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:25"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15",
              "removal": "0:11-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:8-0:15"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.variable",
      "languageId": "javascript.core",
      "facet": "value.variable",
      "code": "const name = \"Hello world\";",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:26",
              "removal": "0:10-0:26",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:27"
        }
      ]
    },
    {
      "name": "scopes/javascript.core/value/value.yield",
      "languageId": "javascript.core",
      "facet": "value.yield",
      "code": "yield 5;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:7",
              "removal": "0:5-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        }
      ]
    },
    {
      "name": "scopes/javascript.jsx/attribute",
      "languageId": "javascript.jsx",
      "facet": "attribute",
      "code": "<div id=\"root\"></div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:14",
              "removal": "0:4-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:14"
        }
      ]
    },
    {
      "name": "scopes/javascript.jsx/element",
      "languageId": "javascript.jsx",
      "facet": "element",
      "code": "<div id=\"root\">text</div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:25",
              "removal": "0:0-0:25",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:25"
        }
      ]
    },
    {
      "name": "scopes/javascript.jsx/endTag",
      "languageId": "javascript.jsx",
      "facet": "endTag",
      "code": "<div id=\"root\"></div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:15-0:21",
              "removal": "0:15-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/javascript.jsx/interior.element",
      "languageId": "javascript.jsx",
      "facet": "interior.element",
      "code": "<div> text </div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:4",
              "removal": "0:1-0:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:5"
        },
        {
          "targets": [
            {
              "content": "0:6-0:10",
              "removal": "0:5-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:13-0:16",
              "removal": "0:13-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:11-0:17"
        }
      ]
    },
    {
      "name": "scopes/javascript.jsx/key.attribute",
      "languageId": "javascript.jsx",
      "facet": "key.attribute",
      "code": "<div id=\"root\"></div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:7",
              "removal": "0:5-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:14"
        }
      ]
    },
    {
      "name": "scopes/javascript.jsx/key.attribute2",
      "languageId": "javascript.jsx",
      "facet": "key.attribute",
      "code": "<div disabled></div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:13",
              "removal": "0:4-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:13"
        }
      ]
    },
    {
      "name": "scopes/javascript.jsx/startTag",
      "languageId": "javascript.jsx",
      "facet": "startTag",
      "code": "<div id=\"root\"></div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:15",
              "removal": "0:0-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/javascript.jsx/tags",
      "languageId": "javascript.jsx",
      "facet": "tags",
      "code": "<div>hello</div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:5",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            },
            {
              "content": "0:10-0:16",
              "removal": "0:10-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:16"
        }
      ]
    },
    {
      "name": "scopes/javascript.jsx/textFragment.element",
      "languageId": "javascript.jsx",
      "facet": "textFragment.element",
      "code": "<div>text</div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:9",
              "removal": "0:5-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:9"
        }
      ]
    },
    {
      "name": "scopes/javascript.jsx/textFragment.element2",
      "languageId": "javascript.jsx",
      "facet": "textFragment.element",
      "code": "<div>({value})</div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:14",
              "removal": "0:5-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:14"
        }
      ]
    },
    {
      "name": "scopes/javascript.jsx/value.attribute",
      "languageId": "javascript.jsx",
      "facet": "value.attribute",
      "code": "<div id=\"root\"></div>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:14",
              "removal": "0:7-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:14"
        }
      ]
    },
    {
      "name": "scopes/json/comment.block",
      "languageId": "json",
      "facet": "comment.block",
      "code": "/*\n  Hello world\n*/",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:2",
              "removal": "0:0-2:2",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:2"
        }
      ]
    },
    {
      "name": "scopes/json/comment.line",
      "languageId": "json",
      "facet": "comment.line",
      "code": "// Hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/json/key.mapPair.iteration",
      "languageId": "json",
      "facet": "key.mapPair.iteration",
      "code": "{\"aaa\": 123, \"bbb\": 456}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:23"
            }
          ],
          "domain": "0:1-0:23"
        }
      ]
    },
    {
      "name": "scopes/json/key.mapPair",
      "languageId": "json",
      "facet": "key.mapPair",
      "code": "{\"aaa\": 123, \"bbb\": 456}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:6",
              "removal": "0:1-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-0:11"
        },
        {
          "targets": [
            {
              "content": "0:13-0:18",
              "removal": "0:13-0:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:13-0:23"
        }
      ]
    },
    {
      "name": "scopes/json/list",
      "languageId": "json",
      "facet": "list",
      "code": "[1, 2, 3]",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:9",
              "removal": "0:0-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/json/map",
      "languageId": "json",
      "facet": "map",
      "code": "{\"aaa\": 123, \"bbb\": 456}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:24",
              "removal": "0:0-0:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:24"
        }
      ]
    },
    {
      "name": "scopes/json/string.singleLine",
      "languageId": "json",
      "facet": "string.singleLine",
      "code": "\"value\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:7",
              "removal": "0:0-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        }
      ]
    },
    {
      "name": "scopes/json/string.singleLine2",
      "languageId": "json",
      "facet": "string.singleLine",
      "code": "{\"key\": \"value\"}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:6",
              "removal": "0:1-0:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-0:6"
        },
        {
          "targets": [
            {
              "content": "0:8-0:15",
              "removal": "0:7-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:8-0:15"
        }
      ]
    },
    {
      "name": "scopes/json/textFragment.comment.block",
      "languageId": "json",
      "facet": "textFragment.comment.block",
      "code": "/*\n  Hello world\n*/",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:2",
              "removal": "0:0-2:2",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:2"
        }
      ]
    },
    {
      "name": "scopes/json/textFragment.comment.line",
      "languageId": "json",
      "facet": "textFragment.comment.line",
      "code": "// Hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/json/textFragment.string.singleLine",
      "languageId": "json",
      "facet": "textFragment.string.singleLine",
      "code": "\"value\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:6",
              "removal": "0:1-0:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-0:6"
        }
      ]
    },
    {
      "name": "scopes/json/textFragment.string.singleLine2",
      "languageId": "json",
      "facet": "textFragment.string.singleLine",
      "code": "{\"key\": \"value\"}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:5",
              "removal": "0:2-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:2-0:5"
        },
        {
          "targets": [
            {
              "content": "0:9-0:14",
              "removal": "0:9-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:14"
        }
      ]
    },
    {
      "name": "scopes/json/value.mapPair.iteration",
      "languageId": "json",
      "facet": "value.mapPair.iteration",
      "code": "{\"aaa\": 123, \"bbb\": 456}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:23"
            }
          ],
          "domain": "0:1-0:23"
        }
      ]
    },
    {
      "name": "scopes/json/value.mapPair",
      "languageId": "json",
      "facet": "value.mapPair",
      "code": "{\"aaa\": 123, \"bbb\": 456}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:11",
              "removal": "0:6-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-0:11"
        },
        {
          "targets": [
            {
              "content": "0:20-0:23",
              "removal": "0:18-0:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:13-0:23"
        }
      ]
    },
    {
      "name": "scopes/jsonl/map",
      "languageId": "jsonl",
      "facet": "map",
      "code": "{\"aaa\": 0}\n{\"bbb\": 0}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:10",
              "removal": "0:0-1:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:10"
        },
        {
          "targets": [
            {
              "content": "1:0-1:10",
              "removal": "0:10-1:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:10"
        }
      ]
    },
    {
      "name": "scopes/latex/comment.block",
      "languageId": "latex",
      "facet": "comment.block",
      "code": "\\iffalse\nsome comment\n\\fi",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:3",
              "removal": "0:0-2:3",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:3"
        }
      ]
    },
    {
      "name": "scopes/latex/comment.line",
      "languageId": "latex",
      "facet": "comment.line",
      "code": "\\LaTeX % some comment",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:21",
              "removal": "0:6-0:21",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:7-0:21"
        }
      ]
    },
    {
      "name": "scopes/latex/disqualifyDelimiter",
      "languageId": "latex",
      "facet": "disqualifyDelimiter",
      "code": "1 < 2\n1 > 2",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "1:2-1:3"
            }
          ]
        }
      ]
    },
    {
      "name": "scopes/latex/element",
      "languageId": "latex",
      "facet": "element",
      "code": "\\begin{quote}\n    Hello\n\\end{quote}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:11",
              "removal": "0:0-2:11",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:11"
        }
      ]
    },
    {
      "name": "scopes/latex/endTag",
      "languageId": "latex",
      "facet": "endTag",
      "code": "\\begin{quote}\n    Hello\n\\end{quote}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:0-2:11",
              "removal": "1:9-2:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:11"
        }
      ]
    },
    {
      "name": "scopes/latex/environment",
      "languageId": "latex",
      "facet": "environment",
      "code": "\\begin{quote}\n    Hello\n\\end{quote}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:11",
              "removal": "0:0-2:11",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:11"
        }
      ]
    },
    {
      "name": "scopes/latex/interior.element",
      "languageId": "latex",
      "facet": "interior.element",
      "code": "\\begin{quote}\n    Hello\n\\end{quote}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:9",
              "removal": "0:13-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:11"
        },
        {
          "targets": [
            {
              "content": "0:7-0:12",
              "removal": "0:7-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:6-0:13"
        },
        {
          "targets": [
            {
              "content": "2:5-2:10",
              "removal": "2:5-2:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:11"
        }
      ]
    },
    {
      "name": "scopes/latex/startTag",
      "languageId": "latex",
      "facet": "startTag",
      "code": "\\begin{quote}\n    Hello\n\\end{quote}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-1:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:11"
        }
      ]
    },
    {
      "name": "scopes/latex/tags",
      "languageId": "latex",
      "facet": "tags",
      "code": "\\begin{quote}\n    Hello\n\\end{quote}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-1:0",
              "insertionDelimiter": " "
            },
            {
              "content": "2:0-2:11",
              "removal": "1:9-2:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:11"
        }
      ]
    },
    {
      "name": "scopes/lua/branch.if.elif.else",
      "languageId": "lua",
      "facet": "branch.if.elif.else",
      "code": "if true then\n    a = 1\nelseif false then\n    a = 2\nelse\n    a = 3\nend",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:9",
              "removal": "0:0-2:4",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-1:9"
        },
        {
          "targets": [
            {
              "content": "2:0-3:9",
              "removal": "2:0-4:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-3:9"
        },
        {
          "targets": [
            {
              "content": "4:0-5:9",
              "removal": "4:0-6:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "4:0-5:9"
        }
      ]
    },
    {
      "name": "scopes/lua/branch.if.else",
      "languageId": "lua",
      "facet": "branch.if.else",
      "code": "if true then\n    a = 1\nelse\n    a = 2\nend",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:9",
              "removal": "0:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-1:9"
        },
        {
          "targets": [
            {
              "content": "2:0-3:9",
              "removal": "2:0-4:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-3:9"
        }
      ]
    },
    {
      "name": "scopes/lua/branch.if.iteration",
      "languageId": "lua",
      "facet": "branch.if.iteration",
      "code": "if true then\n    a = 1\nelseif false then\n    a = 2\nelse\n    a = 3\nend",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-6:3"
            }
          ],
          "domain": "0:0-6:3"
        }
      ]
    },
    {
      "name": "scopes/lua/branch.if",
      "languageId": "lua",
      "facet": "branch.if",
      "code": "if true then\n    a = 1\nend",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:9",
              "removal": "0:0-2:3",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-1:9"
        }
      ]
    },
    {
      "name": "scopes/lua/condition.if",
      "languageId": "lua",
      "facet": "condition.if",
      "code": "if true then\n    a = 1\nelseif false then\n    a = 1\nelse\n    a = 1\nend",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:3-0:7",
              "removal": "0:3-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-6:3"
        },
        {
          "targets": [
            {
              "content": "2:7-2:12",
              "removal": "2:7-2:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-3:9"
        }
      ]
    },
    {
      "name": "scopes/lua/disqualifyDelimiter",
      "languageId": "lua",
      "facet": "disqualifyDelimiter",
      "code": "a = 1 < 2\na = 1 > 2\na = 1 <= 2\na = 1 >= 2\na = 1 << 2\na = 1 >> 2",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:7"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "1:6-1:7"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "2:6-2:8"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "3:6-3:8"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "4:6-4:8"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "5:6-5:8"
            }
          ]
        }
      ]
    },
    {
      "name": "scopes/lua/functionCallee",
      "languageId": "lua",
      "facet": "functionCallee",
      "code": "print(\"a is greater than 10\")",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:5",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:29"
        }
      ]
    },
    {
      "name": "scopes/lua/ifStatement",
      "languageId": "lua",
      "facet": "ifStatement",
      "code": "if true then\n    a = 1\nelseif false then\n    a = 1\nelse\n    a = 1\nend",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-6:3",
              "removal": "0:0-6:3",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-6:3"
        }
      ]
    },
    {
      "name": "scopes/lua/interior.function",
      "languageId": "lua",
      "facet": "interior.function",
      "code": "function makeCounter()\n    local count = 0\nend",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:19",
              "removal": "1:4-1:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:3"
        },
        {
          "targets": [
            {
              "content": "0:21-0:21",
              "removal": "0:21-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:20-0:22"
        }
      ]
    },
    {
      "name": "scopes/lua/interior.if",
      "languageId": "lua",
      "facet": "interior.if",
      "code": "if true then\n    a = 1\nelseif false then\n    a = 2\nelse\n    a = 3\nend",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:9",
              "removal": "1:4-1:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:9"
        },
        {
          "targets": [
            {
              "content": "3:4-3:9",
              "removal": "3:4-3:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-3:9"
        },
        {
          "targets": [
            {
              "content": "5:4-5:9",
              "removal": "5:4-5:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:0-5:9"
        }
      ]
    },
    {
      "name": "scopes/lua/map",
      "languageId": "lua",
      "facet": "map",
      "code": "foo = { bar = \"a\", baz = \"b\" }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:30",
              "removal": "0:5-0:30",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:6-0:30"
        }
      ]
    },
    {
      "name": "scopes/lua/name.assignment",
      "languageId": "lua",
      "facet": "name.assignment",
      "code": "a, b = 1, 2",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:4",
              "removal": "0:0-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/lua/name.variable",
      "languageId": "lua",
      "facet": "name.variable",
      "code": "local a, b = 1, 2",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:10",
              "removal": "0:0-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/lua/namedFunction",
      "languageId": "lua",
      "facet": "namedFunction",
      "code": "function makeCounter()\n    local count = 0\n    return function()\n        count = count + 1\n        return count\n    end\nend",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-6:3",
              "removal": "0:0-6:3",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-6:3"
        }
      ]
    },
    {
      "name": "scopes/lua/value.assignment",
      "languageId": "lua",
      "facet": "value.assignment",
      "code": "a, b = 1, 2",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:11",
              "removal": "0:4-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/lua/value.variable",
      "languageId": "lua",
      "facet": "value.variable",
      "code": "local a, b = 1, 2",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:17",
              "removal": "0:10-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/markdown/collectionItem.unenclosed",
      "languageId": "markdown",
      "facet": "collectionItem.unenclosed",
      "code": "- This is the first level of a list.\n  - This is the second level of a list.\n- This is the first level of a list again.",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-1:39",
              "removal": "0:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-1:39"
        },
        {
          "targets": [
            {
              "content": "1:4-1:39",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:2-1:39"
        },
        {
          "targets": [
            {
              "content": "2:2-2:42",
              "removal": "2:0-2:42",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-2:42"
        }
      ]
    },
    {
      "name": "scopes/markdown/comment.block",
      "languageId": "markdown",
      "facet": "comment.block",
      "code": "<!--\n  Hello\n  World\n-->",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:3",
              "removal": "0:0-3:3",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-3:3"
        }
      ]
    },
    {
      "name": "scopes/markdown/interior.cell",
      "languageId": "markdown",
      "facet": "interior.cell",
      "code": "```python\ndef foo():\n    pass\n```\n\n```\nhello\n```\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:3-2:8",
              "removal": "0:3-3:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:3"
        },
        {
          "targets": [
            {
              "content": "1:0-2:8",
              "removal": "0:9-3:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-4:0"
        },
        {
          "targets": [
            {
              "content": "1:8-1:8",
              "removal": "1:8-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:7-1:9"
        },
        {
          "targets": [
            {
              "content": "6:0-6:5",
              "removal": "5:3-7:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "5:0-7:3"
        },
        {
          "targets": [
            {
              "content": "6:0-6:5",
              "removal": "5:3-7:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "5:0-8:0"
        }
      ]
    },
    {
      "name": "scopes/markdown/list",
      "languageId": "markdown",
      "facet": "list",
      "code": "* hello\n* stuff",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:7",
              "removal": "0:0-1:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:7"
        }
      ]
    },
    {
      "name": "scopes/markdown/notebookCell",
      "languageId": "markdown",
      "facet": "notebookCell",
      "code": "```python\ndef foo():\n    pass\n```\n\n```\nhello\n```\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:3",
              "removal": "0:0-5:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-3:3"
        },
        {
          "targets": [
            {
              "content": "5:0-7:3",
              "removal": "4:0-8:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "5:0-7:3"
        }
      ]
    },
    {
      "name": "scopes/markdown/section.iteration.document",
      "languageId": "markdown",
      "facet": "section.iteration.document",
      "code": "\n# h1\nAaa\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:0"
            }
          ],
          "domain": "0:0-3:0"
        },
        {
          "targets": [
            {
              "content": "2:0-2:3"
            }
          ],
          "domain": "2:0-2:3"
        }
      ]
    },
    {
      "name": "scopes/markdown/section.iteration.parent",
      "languageId": "markdown",
      "facet": "section.iteration.parent",
      "code": "# h1\nAaa\n\n## h2.1\nBbb\n\n## h2.2\nCcc",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-7:3"
            }
          ],
          "domain": "0:0-7:3"
        },
        {
          "targets": [
            {
              "content": "1:0-7:3"
            }
          ],
          "domain": "1:0-7:3"
        },
        {
          "targets": [
            {
              "content": "4:0-4:3"
            }
          ],
          "domain": "4:0-4:3"
        },
        {
          "targets": [
            {
              "content": "7:0-7:3"
            }
          ],
          "domain": "7:0-7:3"
        }
      ]
    },
    {
      "name": "scopes/markdown/section",
      "languageId": "markdown",
      "facet": "section",
      "code": "# H1\n\nSub 1\n\n## H2\n\nSub 2\n\n# H1.2",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-6:5",
              "removal": "0:0-8:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-6:5"
        },
        {
          "targets": [
            {
              "content": "4:0-6:5",
              "removal": "4:0-8:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "4:0-6:5"
        },
        {
          "targets": [
            {
              "content": "8:0-8:6",
              "removal": "8:0-8:6",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "8:0-8:6"
        }
      ]
    },
    {
      "name": "scopes/markdown/textFragment.comment.block",
      "languageId": "markdown",
      "facet": "textFragment.comment.block",
      "code": "<!--\n  Hello\n  World\n-->",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:3",
              "removal": "0:0-3:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:3"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.actual.constructor.iteration",
      "languageId": "php",
      "facet": "argument.actual.constructor.iteration",
      "code": "<?php\nnew MyClass(2, \"foo\")",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:12-1:20"
            }
          ],
          "domain": "1:0-1:21"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.actual.constructor.multiLine",
      "languageId": "php",
      "facet": "argument.actual.constructor.multiLine",
      "code": "<?php\nnew MyClass(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "2:4-3:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        },
        {
          "targets": [
            {
              "content": "3:4-3:7",
              "removal": "2:7-3:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:4-3:7"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.actual.constructor.singleLine",
      "languageId": "php",
      "facet": "argument.actual.constructor.singleLine",
      "code": "<?php\nnew MyClass(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:12-1:15",
              "removal": "1:12-1:17",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:12-1:15"
        },
        {
          "targets": [
            {
              "content": "1:17-1:20",
              "removal": "1:15-1:20",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:17-1:20"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.actual.iteration",
      "languageId": "php",
      "facet": "argument.actual.iteration",
      "code": "<?php\nmyFunc(2, \"foo\")",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:7-1:15"
            }
          ],
          "domain": "1:0-1:16"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.actual.method.iteration",
      "languageId": "php",
      "facet": "argument.actual.method.iteration",
      "code": "<?php\nobj.myFunc(2, \"foo\");",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:11-1:19"
            }
          ],
          "domain": "1:0-1:20"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.actual.method.multiLine",
      "languageId": "php",
      "facet": "argument.actual.method.multiLine",
      "code": "<?php\nfoo.bar(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "2:4-3:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        },
        {
          "targets": [
            {
              "content": "3:4-3:7",
              "removal": "2:7-3:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:4-3:7"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.actual.method.singleLine",
      "languageId": "php",
      "facet": "argument.actual.method.singleLine",
      "code": "<?php\nfoo.bar(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:8-1:11",
              "removal": "1:8-1:13",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:8-1:11"
        },
        {
          "targets": [
            {
              "content": "1:13-1:16",
              "removal": "1:11-1:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:13-1:16"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.actual.multiLine",
      "languageId": "php",
      "facet": "argument.actual.multiLine",
      "code": "<?php\nfoo(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "2:4-3:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        },
        {
          "targets": [
            {
              "content": "3:4-3:7",
              "removal": "2:7-3:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:4-3:7"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.actual.singleLine",
      "languageId": "php",
      "facet": "argument.actual.singleLine",
      "code": "<?php\nfoo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-1:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "1:9-1:12",
              "removal": "1:7-1:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:9-1:12"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.formal.constructor.iteration",
      "languageId": "php",
      "facet": "argument.formal.constructor.iteration",
      "code": "<?php\nclass MyClass {\n    function __construct($name, $value) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:25-2:38"
            }
          ],
          "domain": "2:4-2:43"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.formal.constructor.multiLine",
      "languageId": "php",
      "facet": "argument.formal.constructor.multiLine",
      "code": "<?php\nclass MyClass {\n    function __construct(\n        string $name,\n        number $value\n    ) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "3:8-3:20",
              "removal": "3:8-4:8",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:8-3:20"
        },
        {
          "targets": [
            {
              "content": "4:8-4:21",
              "removal": "3:20-4:21",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "4:8-4:21"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.formal.constructor.singleLine",
      "languageId": "php",
      "facet": "argument.formal.constructor.singleLine",
      "code": "<?php\nclass MyClass {\n    function __construct(string $name, number $value) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:25-2:37",
              "removal": "2:25-2:39",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "2:25-2:37"
        },
        {
          "targets": [
            {
              "content": "2:39-2:52",
              "removal": "2:37-2:52",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "2:39-2:52"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.formal.iteration",
      "languageId": "php",
      "facet": "argument.formal.iteration",
      "code": "<?php\nfunction myFunc($value, string $name) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:16-1:36"
            }
          ],
          "domain": "1:0-1:41"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.formal.method.iteration",
      "languageId": "php",
      "facet": "argument.formal.method.iteration",
      "code": "<?php\nclass MyClass {\n    function myFunc($value, string $name) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:20-2:40"
            }
          ],
          "domain": "2:4-2:45"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.formal.method.multiLine",
      "languageId": "php",
      "facet": "argument.formal.method.multiLine",
      "code": "<?php\nclass MyClass {\n    function myFunc(\n        $value,\n        string $name\n    ) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "3:8-3:14",
              "removal": "3:8-4:8",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:8-3:14"
        },
        {
          "targets": [
            {
              "content": "4:8-4:20",
              "removal": "3:14-4:20",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "4:8-4:20"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.formal.method.singleLine",
      "languageId": "php",
      "facet": "argument.formal.method.singleLine",
      "code": "<?php\nclass MyClass {\n    function myFunc($value, string $name) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:20-2:26",
              "removal": "2:20-2:28",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "2:20-2:26"
        },
        {
          "targets": [
            {
              "content": "2:28-2:40",
              "removal": "2:26-2:40",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "2:28-2:40"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.formal.multiLine",
      "languageId": "php",
      "facet": "argument.formal.multiLine",
      "code": "<?php\nfunction myFunc(\n    $value,\n    string $name\n) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:4-2:10",
              "removal": "2:4-3:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:10"
        },
        {
          "targets": [
            {
              "content": "3:4-3:16",
              "removal": "2:10-3:16",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:4-3:16"
        }
      ]
    },
    {
      "name": "scopes/php/argument/argument.formal.singleLine",
      "languageId": "php",
      "facet": "argument.formal.singleLine",
      "code": "<?php\nfunction myFunc($value, string $name) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:16-1:22",
              "removal": "1:16-1:24",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:16-1:22"
        },
        {
          "targets": [
            {
              "content": "1:24-1:36",
              "removal": "1:22-1:36",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:24-1:36"
        }
      ]
    },
    {
      "name": "scopes/php/comment.block",
      "languageId": "php",
      "facet": "comment.block",
      "code": "<?php\n    /* Hello world! */\n?>",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:22",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-1:22"
        }
      ]
    },
    {
      "name": "scopes/php/comment.line",
      "languageId": "php",
      "facet": "comment.line",
      "code": "<?php\n    // Hello world!\n?>",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:19",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-1:19"
        }
      ]
    },
    {
      "name": "scopes/php/comment.line2",
      "languageId": "php",
      "facet": "comment.line",
      "code": "<?php\n    # Hello world!\n?>",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:18",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-1:18"
        }
      ]
    },
    {
      "name": "scopes/php/disqualifyDelimiter",
      "languageId": "php",
      "facet": "disqualifyDelimiter",
      "code": "<?php\n1 < 2;\n1 > 2;\n1 <= 2;\n1 >= 2;\na << 2;\na >> 2;\na <<= 2;\na >>= 2;\n['first' => 1];\n$a = <<< EOT;\n$a = <<< 'TEXT';\nfoo->bar;\nfoo->bar();\nfoo?->bar;\nfoo?->bar();",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:2-1:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "2:2-2:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "3:2-3:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "4:2-4:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "5:2-5:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "6:2-6:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "7:2-7:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "8:2-8:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "9:9-9:11"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "10:5-10:8"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "11:5-11:8"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "12:3-12:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "13:3-13:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "14:3-14:6"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "15:3-15:6"
            }
          ]
        }
      ]
    },
    {
      "name": "scopes/php/key.mapPair",
      "languageId": "php",
      "facet": "key.mapPair",
      "code": "<?php\n['num' => 1];",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:1-1:6",
              "removal": "1:1-1:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:1-1:11"
        }
      ]
    },
    {
      "name": "scopes/php/name/name.argument.formal.iteration",
      "languageId": "php",
      "facet": "name.argument.formal.iteration",
      "code": "<?php\nfunction myFunc(string $str, int $value) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:16-1:39"
            }
          ],
          "domain": "1:16-1:39"
        }
      ]
    },
    {
      "name": "scopes/php/name/name.argument.formal",
      "languageId": "php",
      "facet": "name.argument.formal",
      "code": "<?php\nfunction myFunc(string $str, int $value) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:9-1:15",
              "removal": "1:9-1:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:44"
        },
        {
          "targets": [
            {
              "content": "1:23-1:27",
              "removal": "1:22-1:27",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:16-1:27"
        },
        {
          "targets": [
            {
              "content": "1:33-1:39",
              "removal": "1:32-1:39",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:29-1:39"
        }
      ]
    },
    {
      "name": "scopes/php/name/name.argument.formal2",
      "languageId": "php",
      "facet": "name.argument.formal",
      "code": "<?php\nfunction myFunc(array ...$nums) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:9-1:15",
              "removal": "1:9-1:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:35"
        },
        {
          "targets": [
            {
              "content": "1:25-1:30",
              "removal": "1:25-1:30",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:16-1:30"
        }
      ]
    },
    {
      "name": "scopes/php/name/name.assignment",
      "languageId": "php",
      "facet": "name.assignment",
      "code": "<?php\n$value = 2;",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:0-1:6",
              "removal": "1:0-1:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:10"
        }
      ]
    },
    {
      "name": "scopes/php/name/name.assignment2",
      "languageId": "php",
      "facet": "name.assignment",
      "code": "<?php\n$value += 2;",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:0-1:6",
              "removal": "1:0-1:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:11"
        }
      ]
    },
    {
      "name": "scopes/php/name/name.field.class",
      "languageId": "php",
      "facet": "name.field.class",
      "code": "<?php\nclass Foo {\n    public string $bar;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:6-1:9",
              "removal": "1:6-1:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-3:1"
        },
        {
          "targets": [
            {
              "content": "2:18-2:22",
              "removal": "2:17-2:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:23"
        }
      ]
    },
    {
      "name": "scopes/php/name/name.variable",
      "languageId": "php",
      "facet": "name.variable",
      "code": "<?php\n$value = 2;",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:0-1:6",
              "removal": "1:0-1:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:10"
        }
      ]
    },
    {
      "name": "scopes/php/textFragment.string.singleLine",
      "languageId": "php",
      "facet": "textFragment.string.singleLine",
      "code": "<?php\n    \"aaa\";\n    'aaa';\n    `aaa`;\n    \"aaa $bbb ccc\"\n    `aaa $bbb ccc`;",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:5-1:8",
              "removal": "1:5-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:5-1:8"
        },
        {
          "targets": [
            {
              "content": "2:5-2:8",
              "removal": "2:5-2:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:5-2:8"
        },
        {
          "targets": [
            {
              "content": "3:5-3:8",
              "removal": "3:5-3:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "3:5-3:8"
        },
        {
          "targets": [
            {
              "content": "4:5-4:17",
              "removal": "4:5-4:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:5-4:17"
        },
        {
          "targets": [
            {
              "content": "5:5-5:17",
              "removal": "5:5-5:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "5:5-5:17"
        }
      ]
    },
    {
      "name": "scopes/php/type/type.argument.formal.iteration",
      "languageId": "php",
      "facet": "type.argument.formal.iteration",
      "code": "<?php\nfunction myFunc(string $str, int $value) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:16-1:39"
            }
          ],
          "domain": "1:16-1:39"
        }
      ]
    },
    {
      "name": "scopes/php/type/type.argument.formal",
      "languageId": "php",
      "facet": "type.argument.formal",
      "code": "<?php\nfunction myFunc(string $str, int $value) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:16-1:22",
              "removal": "1:16-1:23",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:16-1:27"
        },
        {
          "targets": [
            {
              "content": "1:29-1:32",
              "removal": "1:29-1:33",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:29-1:39"
        }
      ]
    },
    {
      "name": "scopes/php/type/type.argument.formal2",
      "languageId": "php",
      "facet": "type.argument.formal",
      "code": "<?php\nfunction myFunc(array ...$nums) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:16-1:21",
              "removal": "1:16-1:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:16-1:30"
        }
      ]
    },
    {
      "name": "scopes/php/type/type.argument.formal3",
      "languageId": "php",
      "facet": "type.argument.formal",
      "code": "<?php\ntry {}\ncatch (Exception $e) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:7-2:16",
              "removal": "2:7-2:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-2:23"
        }
      ]
    },
    {
      "name": "scopes/php/type/type.cast",
      "languageId": "php",
      "facet": "type.cast",
      "code": "<?php\n(string) $str;",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:1-1:7",
              "removal": "1:0-1:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:13"
        }
      ]
    },
    {
      "name": "scopes/php/type/type.field.class",
      "languageId": "php",
      "facet": "type.field.class",
      "code": "<?php\nclass Foo {\n    public string $bar;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:11-2:17",
              "removal": "2:11-2:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:23"
        }
      ]
    },
    {
      "name": "scopes/php/value/value.assignment",
      "languageId": "php",
      "facet": "value.assignment",
      "code": "<?php\n$value = 2;",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:9-1:10",
              "removal": "1:6-1:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:10"
        }
      ]
    },
    {
      "name": "scopes/php/value/value.assignment2",
      "languageId": "php",
      "facet": "value.assignment",
      "code": "<?php\n$value += 2;",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:10-1:11",
              "removal": "1:6-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:11"
        }
      ]
    },
    {
      "name": "scopes/php/value/value.mapPair",
      "languageId": "php",
      "facet": "value.mapPair",
      "code": "<?php\n['num' => 1];",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:10-1:11",
              "removal": "1:6-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:1-1:11"
        }
      ]
    },
    {
      "name": "scopes/php/value/value.return",
      "languageId": "php",
      "facet": "value.return",
      "code": "<?php\nreturn 2;",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:7-1:8",
              "removal": "1:6-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:9"
        }
      ]
    },
    {
      "name": "scopes/php/value/value.variable",
      "languageId": "php",
      "facet": "value.variable",
      "code": "<?php\n$value = 2;",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:9-1:10",
              "removal": "1:6-1:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:10"
        }
      ]
    },
    {
      "name": "scopes/php/value/value.yield",
      "languageId": "php",
      "facet": "value.yield",
      "code": "<?php\nyield 2;",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:6-1:7",
              "removal": "1:5-1:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:7"
        }
      ]
    },
    {
      "name": "scopes/python/anonymousFunction",
      "languageId": "python",
      "facet": "anonymousFunction",
      "code": "lambda: pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-0:12",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/python/anonymousFunction2",
      "languageId": "python",
      "facet": "anonymousFunction",
      "code": "lambda x: x",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:11",
              "removal": "0:0-0:11",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.actual.constructor.iteration",
      "languageId": "python",
      "facet": "argument.actual.constructor.iteration",
      "code": "Foo(123, 456)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.actual.constructor.multiLine",
      "languageId": "python",
      "facet": "argument.actual.constructor.multiLine",
      "code": "Foo(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.actual.constructor.singleLine",
      "languageId": "python",
      "facet": "argument.actual.constructor.singleLine",
      "code": "Foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:4-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:7"
        },
        {
          "targets": [
            {
              "content": "0:9-0:12",
              "removal": "0:7-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:12"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.actual.iteration",
      "languageId": "python",
      "facet": "argument.actual.iteration",
      "code": "foo(\"bar\", 1)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.actual.method.iteration",
      "languageId": "python",
      "facet": "argument.actual.method.iteration",
      "code": "foo.bar(123, 456)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16"
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.actual.method.multiLine",
      "languageId": "python",
      "facet": "argument.actual.method.multiLine",
      "code": "foo.bar(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.actual.method.singleLine",
      "languageId": "python",
      "facet": "argument.actual.method.singleLine",
      "code": "foo.bar(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:11",
              "removal": "0:8-0:13",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:8-0:11"
        },
        {
          "targets": [
            {
              "content": "0:13-0:16",
              "removal": "0:11-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:13-0:16"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.actual.multiLine",
      "languageId": "python",
      "facet": "argument.actual.multiLine",
      "code": "foo(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.actual.singleLine",
      "languageId": "python",
      "facet": "argument.actual.singleLine",
      "code": "foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:4-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:7"
        },
        {
          "targets": [
            {
              "content": "0:9-0:12",
              "removal": "0:7-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:12"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.actual.singleLine2",
      "languageId": "python",
      "facet": "argument.actual.singleLine",
      "code": "\" \".join(word for word in word_list)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:35",
              "removal": "0:9-0:35",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:35"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.actual.singleLine3",
      "languageId": "python",
      "facet": "argument.actual.singleLine",
      "code": "\" \".join((word for word in word_list), \"words\")",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:37",
              "removal": "0:9-0:39",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:37"
        },
        {
          "targets": [
            {
              "content": "0:39-0:46",
              "removal": "0:37-0:46",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:39-0:46"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.actual.singleLine4",
      "languageId": "python",
      "facet": "argument.actual.singleLine",
      "code": "\" \".join((word for word in word_list), (word for word in word_list))",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:37",
              "removal": "0:9-0:39",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:37"
        },
        {
          "targets": [
            {
              "content": "0:39-0:67",
              "removal": "0:37-0:67",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:39-0:67"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.catch",
      "languageId": "python",
      "facet": "argument.catch",
      "code": "try:\n    pass\nexcept MyException as ex:\n    pass\nexcept Exception as ex:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:7-2:24",
              "removal": "2:6-2:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:7-2:24"
        },
        {
          "targets": [
            {
              "content": "4:7-4:22",
              "removal": "4:6-4:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:7-4:22"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.formal.constructor.iteration",
      "languageId": "python",
      "facet": "argument.formal.constructor.iteration",
      "code": "class Foo:\n    def __init__(self, aaa: str, bbb: int):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:17-1:41"
            }
          ],
          "domain": "1:4-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.formal.constructor.multiLine",
      "languageId": "python",
      "facet": "argument.formal.constructor.multiLine",
      "code": "class Foo:\n    def __init__(\n        self,\n        aaa: str,\n        bbb: int\n    ):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:8-2:12",
              "removal": "2:8-3:8",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:8-2:12"
        },
        {
          "targets": [
            {
              "content": "3:8-3:16",
              "removal": "3:8-4:8",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:8-3:16"
        },
        {
          "targets": [
            {
              "content": "4:8-4:16",
              "removal": "3:16-4:16",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "4:8-4:16"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.formal.constructor.singleLine",
      "languageId": "python",
      "facet": "argument.formal.constructor.singleLine",
      "code": "class Foo:\n    def __init__(self, aaa: str, bbb: int):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:17-1:21",
              "removal": "1:17-1:23",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:17-1:21"
        },
        {
          "targets": [
            {
              "content": "1:23-1:31",
              "removal": "1:23-1:33",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:23-1:31"
        },
        {
          "targets": [
            {
              "content": "1:33-1:41",
              "removal": "1:31-1:41",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:33-1:41"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.formal.iteration",
      "languageId": "python",
      "facet": "argument.formal.iteration",
      "code": "def for(name: str, value: int):\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:29"
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.formal.lambda.iteration",
      "languageId": "python",
      "facet": "argument.formal.lambda.iteration",
      "code": "lambda a, b: pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:11"
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.formal.lambda.singleLine",
      "languageId": "python",
      "facet": "argument.formal.lambda.singleLine",
      "code": "lambda a, b: pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:7-0:10",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:7-0:8"
        },
        {
          "targets": [
            {
              "content": "0:10-0:11",
              "removal": "0:8-0:11",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:10-0:11"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.formal.method.iteration",
      "languageId": "python",
      "facet": "argument.formal.method.iteration",
      "code": "class Foo:\n    def bar(aaa: str, bbb: int):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:12-1:30"
            }
          ],
          "domain": "1:4-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.formal.method.multiLine",
      "languageId": "python",
      "facet": "argument.formal.method.multiLine",
      "code": "class Foo:\n    def bar(\n        aaa: str,\n        bbb: int\n    ):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:8-2:16",
              "removal": "2:8-3:8",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:8-2:16"
        },
        {
          "targets": [
            {
              "content": "3:8-3:16",
              "removal": "2:16-3:16",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:8-3:16"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.formal.method.singleLine",
      "languageId": "python",
      "facet": "argument.formal.method.singleLine",
      "code": "class Foo:\n    def bar(aaa: str, bbb: int):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:12-1:20",
              "removal": "1:12-1:22",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:12-1:20"
        },
        {
          "targets": [
            {
              "content": "1:22-1:30",
              "removal": "1:20-1:30",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:22-1:30"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.formal.multiLine",
      "languageId": "python",
      "facet": "argument.formal.multiLine",
      "code": "def foo(\n    aaa,\n    bbb,\n):\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/python/argument/argument.formal.singleLine",
      "languageId": "python",
      "facet": "argument.formal.singleLine",
      "code": "def for(name: str, value: int):\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:17",
              "removal": "0:8-0:19",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:8-0:17"
        },
        {
          "targets": [
            {
              "content": "0:19-0:29",
              "removal": "0:17-0:29",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:19-0:29"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.actual.constructor.empty",
      "languageId": "python",
      "facet": "argumentList.actual.constructor.empty",
      "code": "Foo()",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:4",
              "removal": "0:4-0:4",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:5"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.actual.constructor.multiLine",
      "languageId": "python",
      "facet": "argumentList.actual.constructor.multiLine",
      "code": "Foo(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:4-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.actual.constructor.singleLine",
      "languageId": "python",
      "facet": "argumentList.actual.constructor.singleLine",
      "code": "Foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12",
              "removal": "0:4-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.actual.empty",
      "languageId": "python",
      "facet": "argumentList.actual.empty",
      "code": "foo()",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:4",
              "removal": "0:4-0:4",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:5"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.actual.method.empty",
      "languageId": "python",
      "facet": "argumentList.actual.method.empty",
      "code": "foo.bar()",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:8",
              "removal": "0:8-0:8",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.actual.method.multiLine",
      "languageId": "python",
      "facet": "argumentList.actual.method.multiLine",
      "code": "foo.bar(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:8-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.actual.method.singleLine",
      "languageId": "python",
      "facet": "argumentList.actual.method.singleLine",
      "code": "foo.bar(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16",
              "removal": "0:8-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.actual.multiLine",
      "languageId": "python",
      "facet": "argumentList.actual.multiLine",
      "code": "foo(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:4-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.actual.singleLine",
      "languageId": "python",
      "facet": "argumentList.actual.singleLine",
      "code": "foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12",
              "removal": "0:4-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.actual.singleLine2",
      "languageId": "python",
      "facet": "argumentList.actual.singleLine",
      "code": "\" \".join(word for word in word_list)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:35",
              "removal": "0:9-0:35",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:36"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.formal.constructor.empty",
      "languageId": "python",
      "facet": "argumentList.formal.constructor.empty",
      "code": "class Foo:\n    def __init__():\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:17-1:17",
              "removal": "1:17-1:17",
              "insertionDelimiter": ""
            }
          ],
          "domain": "1:4-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.formal.constructor.multiLine",
      "languageId": "python",
      "facet": "argumentList.formal.constructor.multiLine",
      "code": "class Foo:\n    def __init__(\n        self,\n        aaa: str,\n        bbb: int\n    ):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:8-4:16",
              "removal": "1:17-5:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-6:12"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.formal.constructor.singleLine",
      "languageId": "python",
      "facet": "argumentList.formal.constructor.singleLine",
      "code": "class Foo:\n    def __init__(self, aaa: str, bbb: int):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:17-1:41",
              "removal": "1:17-1:41",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:4-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.formal.empty",
      "languageId": "python",
      "facet": "argumentList.formal.empty",
      "code": "def for():\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:8",
              "removal": "0:8-0:8",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.formal.lambda.empty",
      "languageId": "python",
      "facet": "argumentList.formal.lambda.empty",
      "code": "lambda: pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:6",
              "removal": "0:6-0:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.formal.lambda.singleLine",
      "languageId": "python",
      "facet": "argumentList.formal.lambda.singleLine",
      "code": "lambda aaa, bbb: pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:15",
              "removal": "0:6-0:15",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.formal.method.empty",
      "languageId": "python",
      "facet": "argumentList.formal.method.empty",
      "code": "class Foo:\n    def bar():\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:12-1:12",
              "removal": "1:12-1:12",
              "insertionDelimiter": ""
            }
          ],
          "domain": "1:4-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.formal.method.multiLine",
      "languageId": "python",
      "facet": "argumentList.formal.method.multiLine",
      "code": "class Foo:\n    def bar(\n        aaa: str,\n        bbb: int\n    ):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:8-3:16",
              "removal": "1:12-4:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-5:12"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.formal.method.singleLine",
      "languageId": "python",
      "facet": "argumentList.formal.method.singleLine",
      "code": "class Foo:\n    def bar(aaa: str, bbb: int):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:12-1:30",
              "removal": "1:12-1:30",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:4-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.formal.multiLine",
      "languageId": "python",
      "facet": "argumentList.formal.multiLine",
      "code": "def foo(\n    aaa: str,\n    bbb: int,\n):\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:13",
              "removal": "0:8-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-4:8"
        }
      ]
    },
    {
      "name": "scopes/python/argumentList/argumentList.formal.singleLine",
      "languageId": "python",
      "facet": "argumentList.formal.singleLine",
      "code": "def for(aaa: str, bbb: int):\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:26",
              "removal": "0:8-0:26",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/branch/branch.if.elif.else",
      "languageId": "python",
      "facet": "branch.if.elif.else",
      "code": "if True:\n    pass\nelif False:\n    pass\nelse:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8",
              "removal": "0:0-2:2",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "2:0-3:8",
              "removal": "2:0-4:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-3:8"
        },
        {
          "targets": [
            {
              "content": "4:0-5:8",
              "removal": "3:8-5:8",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "4:0-5:8"
        }
      ]
    },
    {
      "name": "scopes/python/branch/branch.if.else",
      "languageId": "python",
      "facet": "branch.if.else",
      "code": "if True:\n    pass\nelse:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8",
              "removal": "0:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "2:0-3:8",
              "removal": "1:8-3:8",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-3:8"
        }
      ]
    },
    {
      "name": "scopes/python/branch/branch.if.iteration",
      "languageId": "python",
      "facet": "branch.if.iteration",
      "code": "if True:\n    pass\nelif False:\n    pass\nelse:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-5:8"
            }
          ],
          "domain": "0:0-5:8"
        }
      ]
    },
    {
      "name": "scopes/python/branch/branch.if",
      "languageId": "python",
      "facet": "branch.if",
      "code": "if True:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8",
              "removal": "0:0-1:8",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/branch/branch.loop.iteration",
      "languageId": "python",
      "facet": "branch.loop.iteration",
      "code": "while True:\n    pass\nelse:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:8"
            }
          ],
          "domain": "0:0-3:8"
        }
      ]
    },
    {
      "name": "scopes/python/branch/branch.loop.iteration2",
      "languageId": "python",
      "facet": "branch.loop.iteration",
      "code": "for v in values:\n    pass\nelse:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:8"
            }
          ],
          "domain": "0:0-3:8"
        }
      ]
    },
    {
      "name": "scopes/python/branch/branch.loop",
      "languageId": "python",
      "facet": "branch.loop",
      "code": "while True:\n    pass\nelse:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8",
              "removal": "0:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "2:0-3:8",
              "removal": "1:8-3:8",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-3:8"
        }
      ]
    },
    {
      "name": "scopes/python/branch/branch.loop2",
      "languageId": "python",
      "facet": "branch.loop",
      "code": "for v in values:\n    pass\nelse:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8",
              "removal": "0:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "2:0-3:8",
              "removal": "1:8-3:8",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-3:8"
        }
      ]
    },
    {
      "name": "scopes/python/branch/branch.switchCase.iteration",
      "languageId": "python",
      "facet": "branch.switchCase.iteration",
      "code": "match 0:\n    case [0]:\n        pass\n    case [1]:\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-4:12"
            }
          ],
          "domain": "0:0-4:12"
        }
      ]
    },
    {
      "name": "scopes/python/branch/branch.switchCase",
      "languageId": "python",
      "facet": "branch.switchCase",
      "code": "match 0:\n    case [0]:\n        pass\n    case [1]:\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:12",
              "removal": "1:0-3:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-2:12"
        },
        {
          "targets": [
            {
              "content": "3:4-4:12",
              "removal": "2:12-4:12",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "3:4-4:12"
        }
      ]
    },
    {
      "name": "scopes/python/branch/branch.ternary.iteration",
      "languageId": "python",
      "facet": "branch.ternary.iteration",
      "code": "0 if True else 1",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16"
            }
          ],
          "domain": "0:0-0:16"
        }
      ]
    },
    {
      "name": "scopes/python/branch/branch.ternary",
      "languageId": "python",
      "facet": "branch.ternary",
      "code": "0 if True else 1",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:1",
              "removal": "0:0-0:2",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:1"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16",
              "removal": "0:14-0:16",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/python/branch/branch.try.iteration",
      "languageId": "python",
      "facet": "branch.try.iteration",
      "code": "try:\n    pass\nexcept:\n    pass\nfinally:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-5:8"
            }
          ],
          "domain": "0:0-5:8"
        }
      ]
    },
    {
      "name": "scopes/python/branch/branch.try",
      "languageId": "python",
      "facet": "branch.try",
      "code": "try:\n    pass\nexcept:\n    pass\nfinally:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8",
              "removal": "0:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "2:0-3:8",
              "removal": "2:0-4:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-3:8"
        },
        {
          "targets": [
            {
              "content": "4:0-5:8",
              "removal": "3:8-5:8",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "4:0-5:8"
        }
      ]
    },
    {
      "name": "scopes/python/branch/branch.try2",
      "languageId": "python",
      "facet": "branch.try",
      "code": "try:\n    pass\nexcept* ValueError as eg:\n    pass\nelse:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8",
              "removal": "0:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "2:0-3:8",
              "removal": "2:0-4:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-3:8"
        },
        {
          "targets": [
            {
              "content": "4:0-5:8",
              "removal": "3:8-5:8",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "4:0-5:8"
        }
      ]
    },
    {
      "name": "scopes/python/class.iteration.document",
      "languageId": "python",
      "facet": "class.iteration.document",
      "code": "\nclass Foo:\n    pass\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:0"
            }
          ],
          "domain": "0:0-3:0"
        }
      ]
    },
    {
      "name": "scopes/python/class",
      "languageId": "python",
      "facet": "class",
      "code": "class Foo:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8",
              "removal": "0:0-1:8",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/class2",
      "languageId": "python",
      "facet": "class",
      "code": "@value\nclass Foo:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8",
              "removal": "0:0-2:8",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-2:8"
        }
      ]
    },
    {
      "name": "scopes/python/className.iteration.document",
      "languageId": "python",
      "facet": "className.iteration.document",
      "code": "\nclass Foo:\n    pass\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:0"
            }
          ],
          "domain": "0:0-3:0"
        }
      ]
    },
    {
      "name": "scopes/python/className",
      "languageId": "python",
      "facet": "className",
      "code": "class Foo:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:5-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/collectionItem/collectionItem.unenclosed.iteration",
      "languageId": "python",
      "facet": "collectionItem.unenclosed.iteration",
      "code": "import foo, bar",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:15"
            }
          ],
          "domain": "0:0-0:15"
        }
      ]
    },
    {
      "name": "scopes/python/collectionItem/collectionItem.unenclosed.iteration2",
      "languageId": "python",
      "facet": "collectionItem.unenclosed.iteration",
      "code": "from foo import bar, baz",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:24"
            }
          ],
          "domain": "0:0-0:24"
        }
      ]
    },
    {
      "name": "scopes/python/collectionItem/collectionItem.unenclosed.iteration3",
      "languageId": "python",
      "facet": "collectionItem.unenclosed.iteration",
      "code": "def foo():\n    global bar, baz",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:19"
            }
          ],
          "domain": "1:0-1:19"
        },
        {
          "targets": [
            {
              "content": "1:11-1:19"
            }
          ],
          "domain": "1:4-1:19"
        }
      ]
    },
    {
      "name": "scopes/python/collectionItem/collectionItem.unenclosed.iteration4",
      "languageId": "python",
      "facet": "collectionItem.unenclosed.iteration",
      "code": "for key, value in map.items():\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:30"
            }
          ],
          "domain": "0:0-0:30"
        },
        {
          "targets": [
            {
              "content": "0:4-0:14"
            }
          ],
          "domain": "0:4-0:14"
        }
      ]
    },
    {
      "name": "scopes/python/collectionItem/collectionItem.unenclosed",
      "languageId": "python",
      "facet": "collectionItem.unenclosed",
      "code": "import foo",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:10",
              "removal": "0:6-0:10",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:7-0:10"
        }
      ]
    },
    {
      "name": "scopes/python/collectionItem/collectionItem.unenclosed2",
      "languageId": "python",
      "facet": "collectionItem.unenclosed",
      "code": "import foo, bar",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:10",
              "removal": "0:0-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:10"
        },
        {
          "targets": [
            {
              "content": "0:7-0:10",
              "removal": "0:7-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:7-0:10"
        },
        {
          "targets": [
            {
              "content": "0:12-0:15",
              "removal": "0:10-0:15",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:12-0:15"
        }
      ]
    },
    {
      "name": "scopes/python/collectionItem/collectionItem.unenclosed3",
      "languageId": "python",
      "facet": "collectionItem.unenclosed",
      "code": "from foo import bar",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:19",
              "removal": "0:15-0:19",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:16-0:19"
        }
      ]
    },
    {
      "name": "scopes/python/collectionItem/collectionItem.unenclosed4",
      "languageId": "python",
      "facet": "collectionItem.unenclosed",
      "code": "def foo():\n    global bar",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:11-1:14",
              "removal": "1:10-1:14",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:11-1:14"
        }
      ]
    },
    {
      "name": "scopes/python/collectionItem/collectionItem.unenclosed5",
      "languageId": "python",
      "facet": "collectionItem.unenclosed",
      "code": "from foo import bar, baz",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:19",
              "removal": "0:0-0:21",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:19"
        },
        {
          "targets": [
            {
              "content": "0:16-0:19",
              "removal": "0:16-0:21",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:16-0:19"
        },
        {
          "targets": [
            {
              "content": "0:21-0:24",
              "removal": "0:19-0:24",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:21-0:24"
        }
      ]
    },
    {
      "name": "scopes/python/collectionItem/collectionItem.unenclosed6",
      "languageId": "python",
      "facet": "collectionItem.unenclosed",
      "code": "def foo():\n    global bar, baz",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:14",
              "removal": "1:4-1:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:4-1:14"
        },
        {
          "targets": [
            {
              "content": "1:11-1:14",
              "removal": "1:11-1:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:11-1:14"
        },
        {
          "targets": [
            {
              "content": "1:16-1:19",
              "removal": "1:14-1:19",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "1:16-1:19"
        }
      ]
    },
    {
      "name": "scopes/python/collectionItem/collectionItem.unenclosed7",
      "languageId": "python",
      "facet": "collectionItem.unenclosed",
      "code": "for key, value in map.items():\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:7",
              "removal": "0:0-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:7"
        },
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:4-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:7"
        },
        {
          "targets": [
            {
              "content": "0:9-0:14",
              "removal": "0:7-0:14",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:14"
        },
        {
          "targets": [
            {
              "content": "0:9-0:30",
              "removal": "0:7-0:30",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:30"
        }
      ]
    },
    {
      "name": "scopes/python/comment.line",
      "languageId": "python",
      "facet": "comment.line",
      "code": "# Hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/python/condition/condition.if",
      "languageId": "python",
      "facet": "condition.if",
      "code": "if True: pass\nelif False: pass\nelse: pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:3-0:7",
              "removal": "0:2-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:10"
        },
        {
          "targets": [
            {
              "content": "1:5-1:10",
              "removal": "1:4-1:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:16"
        }
      ]
    },
    {
      "name": "scopes/python/condition/condition.switchCase.iteration",
      "languageId": "python",
      "facet": "condition.switchCase.iteration",
      "code": "match value:\n    case 0:\n        pass\n    case 1:\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:12-4:12"
            }
          ],
          "domain": "0:0-4:12"
        }
      ]
    },
    {
      "name": "scopes/python/condition/condition.switchCase",
      "languageId": "python",
      "facet": "condition.switchCase",
      "code": "match value:\n    case 0:\n        pass\n    case 1:\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:9-1:10",
              "removal": "1:8-1:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-2:12"
        },
        {
          "targets": [
            {
              "content": "3:9-3:10",
              "removal": "3:8-3:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "3:4-4:12"
        }
      ]
    },
    {
      "name": "scopes/python/condition/condition.ternary",
      "languageId": "python",
      "facet": "condition.ternary",
      "code": "value if value > 0 else None",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:18",
              "removal": "0:9-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:28"
        }
      ]
    },
    {
      "name": "scopes/python/condition/condition.while",
      "languageId": "python",
      "facet": "condition.while",
      "code": "while value > 0:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:15",
              "removal": "0:5-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/disqualifyDelimiter",
      "languageId": "python",
      "facet": "disqualifyDelimiter",
      "code": "1 < 2\n1 > 2\n1 <= 2\n1 >= 2\na << 2\na >> 2\na <<= 2\na >>= 2\ndef foo() -> int:",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "1:2-1:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "2:2-2:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "3:2-3:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "4:2-4:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "5:2-5:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "6:2-6:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "7:2-7:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "8:10-8:12"
            }
          ]
        }
      ]
    },
    {
      "name": "scopes/python/fieldAccess",
      "languageId": "python",
      "facet": "fieldAccess",
      "code": "foo.bar.baz",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:3"
        },
        {
          "targets": [
            {
              "content": "0:3-0:7",
              "removal": "0:3-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:3-0:7"
        },
        {
          "targets": [
            {
              "content": "0:7-0:11",
              "removal": "0:7-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:11"
        }
      ]
    },
    {
      "name": "scopes/python/functionCall.constructor",
      "languageId": "python",
      "facet": "functionCall.constructor",
      "code": "Foo()",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:5",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:5"
        }
      ]
    },
    {
      "name": "scopes/python/functionCall",
      "languageId": "python",
      "facet": "functionCall",
      "code": "foo()",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:5",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:5"
        }
      ]
    },
    {
      "name": "scopes/python/functionCallee.constructor",
      "languageId": "python",
      "facet": "functionCallee.constructor",
      "code": "Foo()",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:5"
        }
      ]
    },
    {
      "name": "scopes/python/functionCallee",
      "languageId": "python",
      "facet": "functionCallee",
      "code": "foo()",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:5"
        }
      ]
    },
    {
      "name": "scopes/python/functionName/functionName.constructor",
      "languageId": "python",
      "facet": "functionName.constructor",
      "code": "class Foo:\n    def __init__(self):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:8-1:16",
              "removal": "1:8-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/functionName/functionName.iteration.document",
      "languageId": "python",
      "facet": "functionName.iteration.document",
      "code": "\ndef bar():\n    pass\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:0"
            }
          ],
          "domain": "0:0-3:0"
        }
      ]
    },
    {
      "name": "scopes/python/functionName/functionName.method.iteration.class",
      "languageId": "python",
      "facet": "functionName.method.iteration.class",
      "code": "class Foo:\n    def bar():\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:12"
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:4-2:12"
            }
          ],
          "domain": "1:4-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/functionName/functionName.method",
      "languageId": "python",
      "facet": "functionName.method",
      "code": "class Foo:\n    def bar():\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:8-1:11",
              "removal": "1:8-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/functionName/functionName",
      "languageId": "python",
      "facet": "functionName",
      "code": "def bar():\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:4-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/ifStatement",
      "languageId": "python",
      "facet": "ifStatement",
      "code": "if value > 0:\n    pass\nelif value == 0:\n    pass\nelse:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-5:8",
              "removal": "0:0-5:8",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-5:8"
        }
      ]
    },
    {
      "name": "scopes/python/interior/interior.class",
      "languageId": "python",
      "facet": "interior.class",
      "code": "class MyClass:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:8",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/interior/interior.constructor",
      "languageId": "python",
      "facet": "interior.constructor",
      "code": "class Foo:\n    def __init__(self):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:12",
              "removal": "1:4-2:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "2:8-2:12",
              "removal": "2:8-2:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-2:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:21",
              "removal": "1:17-1:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:16-1:22"
        }
      ]
    },
    {
      "name": "scopes/python/interior/interior.foreach",
      "languageId": "python",
      "facet": "interior.foreach",
      "code": "for v in values:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:8",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/interior/interior.function",
      "languageId": "python",
      "facet": "interior.function",
      "code": "def foo():\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:8",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "0:8-0:8",
              "removal": "0:8-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:9"
        }
      ]
    },
    {
      "name": "scopes/python/interior/interior.function2",
      "languageId": "python",
      "facet": "interior.function",
      "code": "@foo\ndef bar(value: string) -> str:\n    return value",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:4-2:16",
              "removal": "2:4-2:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:16"
        },
        {
          "targets": [
            {
              "content": "1:8-1:21",
              "removal": "1:8-1:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:7-1:22"
        }
      ]
    },
    {
      "name": "scopes/python/interior/interior.if",
      "languageId": "python",
      "facet": "interior.if",
      "code": "if True:\n    a\nelif False:\n    b\nelse:\n    c",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:5",
              "removal": "1:4-1:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:5"
        },
        {
          "targets": [
            {
              "content": "3:4-3:5",
              "removal": "3:4-3:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-3:5"
        },
        {
          "targets": [
            {
              "content": "5:4-5:5",
              "removal": "5:4-5:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:0-5:5"
        }
      ]
    },
    {
      "name": "scopes/python/interior/interior.lambda.expression",
      "languageId": "python",
      "facet": "interior.lambda.expression",
      "code": "lambda: pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:12",
              "removal": "0:8-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/python/interior/interior.lambda.expression2",
      "languageId": "python",
      "facet": "interior.lambda.expression",
      "code": "lambda x: x",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:11",
              "removal": "0:10-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/python/interior/interior.method",
      "languageId": "python",
      "facet": "interior.method",
      "code": "class Foo:\n    def bar():\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:12",
              "removal": "1:4-2:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "2:8-2:12",
              "removal": "2:8-2:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-2:12"
        },
        {
          "targets": [
            {
              "content": "1:12-1:12",
              "removal": "1:12-1:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:11-1:13"
        }
      ]
    },
    {
      "name": "scopes/python/interior/interior.resource",
      "languageId": "python",
      "facet": "interior.resource",
      "code": "with file:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:8",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/interior/interior.switch",
      "languageId": "python",
      "facet": "interior.switch",
      "code": "match value:\n    case 0: pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:16",
              "removal": "0:12-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:16"
        },
        {
          "targets": [
            {
              "content": "1:12-1:16",
              "removal": "1:12-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:16"
        }
      ]
    },
    {
      "name": "scopes/python/interior/interior.switchCase",
      "languageId": "python",
      "facet": "interior.switchCase",
      "code": "match value:\n    case 0:\n        foo\n        pass\n    case _:\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-5:12",
              "removal": "0:12-5:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-5:12"
        },
        {
          "targets": [
            {
              "content": "2:8-3:12",
              "removal": "2:8-3:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-3:12"
        },
        {
          "targets": [
            {
              "content": "5:8-5:12",
              "removal": "5:8-5:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:4-5:12"
        }
      ]
    },
    {
      "name": "scopes/python/interior/interior.ternary",
      "languageId": "python",
      "facet": "interior.ternary",
      "code": "1 if True else 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:1",
              "removal": "0:0-0:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:1"
        },
        {
          "targets": [
            {
              "content": "0:5-0:9",
              "removal": "0:5-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:2-0:9"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16",
              "removal": "0:15-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:10-0:16"
        }
      ]
    },
    {
      "name": "scopes/python/interior/interior.try",
      "languageId": "python",
      "facet": "interior.try",
      "code": "try:\n    a\nexcept:\n    b\nfinally:\n    c",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:5",
              "removal": "1:4-1:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:5"
        },
        {
          "targets": [
            {
              "content": "3:4-3:5",
              "removal": "3:4-3:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-3:5"
        },
        {
          "targets": [
            {
              "content": "5:4-5:5",
              "removal": "5:4-5:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:0-5:5"
        }
      ]
    },
    {
      "name": "scopes/python/interior/interior.try2",
      "languageId": "python",
      "facet": "interior.try",
      "code": "try:\n    a\nexcept*:\n    b",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:5",
              "removal": "1:4-1:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:5"
        },
        {
          "targets": [
            {
              "content": "3:4-3:5",
              "removal": "3:4-3:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-3:5"
        }
      ]
    },
    {
      "name": "scopes/python/interior/interior.while",
      "languageId": "python",
      "facet": "interior.while",
      "code": "while True:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:8",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/key.mapPair.iteration",
      "languageId": "python",
      "facet": "key.mapPair.iteration",
      "code": "{ aaa: 123, bbb: 456}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:20"
            }
          ],
          "domain": "0:1-0:20"
        }
      ]
    },
    {
      "name": "scopes/python/key.mapPair",
      "languageId": "python",
      "facet": "key.mapPair",
      "code": "{ aaa: 123, bbb: 456}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:5",
              "removal": "0:2-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:2-0:10"
        },
        {
          "targets": [
            {
              "content": "0:12-0:15",
              "removal": "0:12-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:12-0:20"
        }
      ]
    },
    {
      "name": "scopes/python/list",
      "languageId": "python",
      "facet": "list",
      "code": "[123, 456]",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:10",
              "removal": "0:0-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:10"
        }
      ]
    },
    {
      "name": "scopes/python/map",
      "languageId": "python",
      "facet": "map",
      "code": "{ aaa: 123, bbb: 456}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:21",
              "removal": "0:0-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.argument.actual.iteration",
      "languageId": "python",
      "facet": "name.argument.actual.iteration",
      "code": "aaa(bbb=0, ccc=1)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:4-0:16"
            }
          ],
          "domain": "0:4-0:16"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.argument.actual",
      "languageId": "python",
      "facet": "name.argument.actual",
      "code": "aaa(bbb=0, ccc=1)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:4-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:4-0:9"
        },
        {
          "targets": [
            {
              "content": "0:11-0:14",
              "removal": "0:11-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:11-0:16"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.argument.catch",
      "languageId": "python",
      "facet": "name.argument.catch",
      "code": "try:\n    pass\nexcept MyException as ex:\n    pass\nexcept Exception as ex:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:22-2:24",
              "removal": "2:21-2:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:7-2:24"
        },
        {
          "targets": [
            {
              "content": "4:20-4:22",
              "removal": "4:19-4:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:7-4:22"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.argument.formal.constructor.iteration",
      "languageId": "python",
      "facet": "name.argument.formal.constructor.iteration",
      "code": "class Foo:\n    def __init__(self, aaa: str, bbb: int):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:12"
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:4-2:12"
            }
          ],
          "domain": "1:4-2:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:41"
            }
          ],
          "domain": "1:17-1:41"
        },
        {
          "targets": [
            {
              "content": "2:8-2:12"
            }
          ],
          "domain": "2:8-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.argument.formal.constructor",
      "languageId": "python",
      "facet": "name.argument.formal.constructor",
      "code": "class Foo:\n    def __init__(self, aaa: str, bbb: int):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:5-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:8-1:16",
              "removal": "1:8-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-2:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:21",
              "removal": "1:17-1:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:17-1:21"
        },
        {
          "targets": [
            {
              "content": "1:23-1:26",
              "removal": "1:22-1:26",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:23-1:31"
        },
        {
          "targets": [
            {
              "content": "1:33-1:36",
              "removal": "1:32-1:36",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:33-1:41"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.argument.formal.iteration",
      "languageId": "python",
      "facet": "name.argument.formal.iteration",
      "code": "def foo(aaa: str, bbb: int):\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "0:8-0:26"
            }
          ],
          "domain": "0:8-0:26"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.argument.formal.method.iteration",
      "languageId": "python",
      "facet": "name.argument.formal.method.iteration",
      "code": "class Foo:\n    def bar(aaa: str, bbb: int):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:12"
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:4-2:12"
            }
          ],
          "domain": "1:4-2:12"
        },
        {
          "targets": [
            {
              "content": "1:12-1:30"
            }
          ],
          "domain": "1:12-1:30"
        },
        {
          "targets": [
            {
              "content": "2:8-2:12"
            }
          ],
          "domain": "2:8-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.argument.formal.method",
      "languageId": "python",
      "facet": "name.argument.formal.method",
      "code": "class Foo:\n    def bar(aaa: str, bbb: int):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:5-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:8-1:11",
              "removal": "1:8-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-2:12"
        },
        {
          "targets": [
            {
              "content": "1:12-1:15",
              "removal": "1:12-1:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:12-1:20"
        },
        {
          "targets": [
            {
              "content": "1:22-1:25",
              "removal": "1:21-1:25",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:22-1:30"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.argument.formal",
      "languageId": "python",
      "facet": "name.argument.formal",
      "code": "def foo(aaa: str, bbb: int):\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:4-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "0:8-0:11",
              "removal": "0:8-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:8-0:16"
        },
        {
          "targets": [
            {
              "content": "0:18-0:21",
              "removal": "0:17-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:18-0:26"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.assignment.pattern",
      "languageId": "python",
      "facet": "name.assignment.pattern",
      "code": "aaa, bbb, = ccc",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:9",
              "removal": "0:0-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:15"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.assignment",
      "languageId": "python",
      "facet": "name.assignment",
      "code": "value = 2",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:5",
              "removal": "0:0-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.class",
      "languageId": "python",
      "facet": "name.class",
      "code": "class Foo:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:5-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.constructor",
      "languageId": "python",
      "facet": "name.constructor",
      "code": "class Foo:\n    def __init__(self):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:5-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:8-1:16",
              "removal": "1:8-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-2:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:21",
              "removal": "1:17-1:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:17-1:21"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.field.class",
      "languageId": "python",
      "facet": "name.field.class",
      "code": "class Foo:\n    bar: int",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:5-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:12"
        },
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:0-1:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:12"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.foreach",
      "languageId": "python",
      "facet": "name.foreach",
      "code": "for item in items:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:8",
              "removal": "0:4-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.function",
      "languageId": "python",
      "facet": "name.function",
      "code": "def foo():\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:4-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.iteration.block",
      "languageId": "python",
      "facet": "name.iteration.block",
      "code": "class Foo:\n    def bar():\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:12"
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:4-2:12"
            }
          ],
          "domain": "1:4-2:12"
        },
        {
          "targets": [
            {
              "content": "2:8-2:12"
            }
          ],
          "domain": "2:8-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.iteration.block2",
      "languageId": "python",
      "facet": "name.iteration.block",
      "code": "def foo():\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.iteration.block3",
      "languageId": "python",
      "facet": "name.iteration.block",
      "code": "if True:\n    pass\nelif False:\n    pass\nelse:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-5:8"
            }
          ],
          "domain": "0:0-5:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        },
        {
          "targets": [
            {
              "content": "3:4-3:8"
            }
          ],
          "domain": "3:4-3:8"
        },
        {
          "targets": [
            {
              "content": "5:4-5:8"
            }
          ],
          "domain": "5:4-5:8"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.iteration.block4",
      "languageId": "python",
      "facet": "name.iteration.block",
      "code": "while True:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.iteration.class",
      "languageId": "python",
      "facet": "name.iteration.class",
      "code": "class Foo:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.iteration.document",
      "languageId": "python",
      "facet": "name.iteration.document",
      "code": "\nfoo\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.method",
      "languageId": "python",
      "facet": "name.method",
      "code": "class Foo:\n    def bar():\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:5-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:8-1:11",
              "removal": "1:8-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.resource.iteration",
      "languageId": "python",
      "facet": "name.resource.iteration",
      "code": "with aaa, bbb as ccc:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:20"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.resource",
      "languageId": "python",
      "facet": "name.resource",
      "code": "with aaa as bbb:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:12-0:15",
              "removal": "0:8-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.resource2",
      "languageId": "python",
      "facet": "name.resource",
      "code": "with aaa, bbb as ccc:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:10",
              "insertionDelimiter": " "
            },
            {
              "content": "0:17-0:20",
              "removal": "0:13-0:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:8"
        },
        {
          "targets": [
            {
              "content": "0:17-0:20",
              "removal": "0:13-0:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:10-0:20"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.resource3",
      "languageId": "python",
      "facet": "name.resource",
      "code": "with aaa as bbb, ccc as ddd:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:12-0:15",
              "removal": "0:8-0:15",
              "insertionDelimiter": " "
            },
            {
              "content": "0:24-0:27",
              "removal": "0:20-0:27",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "0:12-0:15",
              "removal": "0:8-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:15"
        },
        {
          "targets": [
            {
              "content": "0:24-0:27",
              "removal": "0:20-0:27",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:17-0:27"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.variable.pattern",
      "languageId": "python",
      "facet": "name.variable.pattern",
      "code": "foo, bar = value",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:8",
              "removal": "0:0-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:16"
        }
      ]
    },
    {
      "name": "scopes/python/name/name.variable",
      "languageId": "python",
      "facet": "name.variable",
      "code": "value = 123",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:5",
              "removal": "0:0-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/python/namedFunction/namedFunction.constructor",
      "languageId": "python",
      "facet": "namedFunction.constructor",
      "code": "class Foo:\n    def __init__(self, aaa: str, bbb: int):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:12",
              "removal": "0:10-2:12",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "1:4-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/namedFunction/namedFunction.iteration.document",
      "languageId": "python",
      "facet": "namedFunction.iteration.document",
      "code": "\ndef bar():\n    pass\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:0"
            }
          ],
          "domain": "0:0-3:0"
        }
      ]
    },
    {
      "name": "scopes/python/namedFunction/namedFunction.method.iteration.class",
      "languageId": "python",
      "facet": "namedFunction.method.iteration.class",
      "code": "class Foo:\n    def bar():\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:12"
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:4-2:12"
            }
          ],
          "domain": "1:4-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/namedFunction/namedFunction.method",
      "languageId": "python",
      "facet": "namedFunction.method",
      "code": "class Foo:\n    def bar():\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:12",
              "removal": "0:10-2:12",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "1:4-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/namedFunction/namedFunction",
      "languageId": "python",
      "facet": "namedFunction",
      "code": "def foo():\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8",
              "removal": "0:0-1:8",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/namedFunction/namedFunction2",
      "languageId": "python",
      "facet": "namedFunction",
      "code": "@foo\ndef bar(value: string) -> str:\n    return value",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:16",
              "removal": "0:0-2:16",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-2:16"
        }
      ]
    },
    {
      "name": "scopes/python/pairDelimiter",
      "languageId": "python",
      "facet": "pairDelimiter",
      "code": "\"server\"\n'server'\n\"\"\"server\"\"\"\n'''server'''\nr\" r\"\nr' r'\nr\"\"\" r\"\"\"\nr''' r'''",
      "scopes": [
        {
          "targets": [
            {
              "content": "4:0-4:2",
              "removal": "4:0-4:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:0-4:2"
        },
        {
          "targets": [
            {
              "content": "5:0-5:2",
              "removal": "5:0-5:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "5:0-5:2"
        },
        {
          "targets": [
            {
              "content": "6:0-6:4",
              "removal": "6:0-6:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "6:0-6:4"
        },
        {
          "targets": [
            {
              "content": "7:0-7:4",
              "removal": "7:0-7:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "7:0-7:4"
        }
      ]
    },
    {
      "name": "scopes/python/statement/statement.class",
      "languageId": "python",
      "facet": "statement.class",
      "code": "class Foo:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8",
              "removal": "0:0-1:8",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8",
              "removal": "0:10-1:8",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/statement/statement.field.class",
      "languageId": "python",
      "facet": "statement.field.class",
      "code": "class Foo:\n    bar: int\n    baz = 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:11",
              "removal": "0:0-2:11",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:11"
        },
        {
          "targets": [
            {
              "content": "1:4-1:12",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-1:12"
        },
        {
          "targets": [
            {
              "content": "2:4-2:11",
              "removal": "1:12-2:11",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:4-2:11"
        }
      ]
    },
    {
      "name": "scopes/python/statement/statement.iteration.block",
      "languageId": "python",
      "facet": "statement.iteration.block",
      "code": "class Foo:\n    def bar():\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:12"
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:4-2:12"
            }
          ],
          "domain": "1:4-2:12"
        },
        {
          "targets": [
            {
              "content": "2:8-2:12"
            }
          ],
          "domain": "2:8-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/statement/statement.iteration.block2",
      "languageId": "python",
      "facet": "statement.iteration.block",
      "code": "def foo():\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/statement/statement.iteration.block3",
      "languageId": "python",
      "facet": "statement.iteration.block",
      "code": "if True:\n    pass\nelif False:\n    pass\nelse:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-5:8"
            }
          ],
          "domain": "0:0-5:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        },
        {
          "targets": [
            {
              "content": "3:4-3:8"
            }
          ],
          "domain": "3:4-3:8"
        },
        {
          "targets": [
            {
              "content": "5:4-5:8"
            }
          ],
          "domain": "5:4-5:8"
        }
      ]
    },
    {
      "name": "scopes/python/statement/statement.iteration.block4",
      "languageId": "python",
      "facet": "statement.iteration.block",
      "code": "while True:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/statement/statement.iteration.class",
      "languageId": "python",
      "facet": "statement.iteration.class",
      "code": "class Foo:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/statement/statement.iteration.document",
      "languageId": "python",
      "facet": "statement.iteration.document",
      "code": "\nfoo\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/python/statement/statement",
      "languageId": "python",
      "facet": "statement",
      "code": "value = 123",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:11",
              "removal": "0:0-0:11",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/python/string.multiLine",
      "languageId": "python",
      "facet": "string.multiLine",
      "code": "\"\"\"\nHello\nworld\n\"\"\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:3",
              "removal": "0:0-3:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:3"
        }
      ]
    },
    {
      "name": "scopes/python/string.singleLine",
      "languageId": "python",
      "facet": "string.singleLine",
      "code": "\"Hello world\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/python/switchStatementSubject",
      "languageId": "python",
      "facet": "switchStatementSubject",
      "code": "match value:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:11",
              "removal": "0:5-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/textFragment.comment.line",
      "languageId": "python",
      "facet": "textFragment.comment.line",
      "code": "# Hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/python/textFragment.string.multiLine",
      "languageId": "python",
      "facet": "textFragment.string.multiLine",
      "code": "\"\"\"\nHello\nworld\n\"\"\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:3-3:0",
              "removal": "0:3-3:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:3-3:0"
        }
      ]
    },
    {
      "name": "scopes/python/textFragment.string.singleLine",
      "languageId": "python",
      "facet": "textFragment.string.singleLine",
      "code": "\"Hello world\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:12",
              "removal": "0:1-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-0:12"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.argument.catch",
      "languageId": "python",
      "facet": "type.argument.catch",
      "code": "try:\n    pass\nexcept MyException as ex:\n    pass\nexcept Exception as ex:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:7-2:18",
              "removal": "2:7-2:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:7-2:24"
        },
        {
          "targets": [
            {
              "content": "4:7-4:16",
              "removal": "4:7-4:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:7-4:22"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.argument.formal.constructor.iteration",
      "languageId": "python",
      "facet": "type.argument.formal.constructor.iteration",
      "code": "class MyClass:\n    def __init__(self, a: int):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:12"
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:4-2:12"
            }
          ],
          "domain": "1:4-2:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:29"
            }
          ],
          "domain": "1:17-1:29"
        },
        {
          "targets": [
            {
              "content": "2:8-2:12"
            }
          ],
          "domain": "2:8-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.argument.formal.constructor",
      "languageId": "python",
      "facet": "type.argument.formal.constructor",
      "code": "class MyClass:\n    def __init__(self, a: int):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:12",
              "removal": "0:0-2:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:26-1:29",
              "removal": "1:24-1:29",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:23-1:29"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.argument.formal.iteration",
      "languageId": "python",
      "facet": "type.argument.formal.iteration",
      "code": "def funk(a: int):\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "0:9-0:15"
            }
          ],
          "domain": "0:9-0:15"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.argument.formal.method.iteration",
      "languageId": "python",
      "facet": "type.argument.formal.method.iteration",
      "code": "class MyClass:\n    def funk(a: int):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:12"
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:4-2:12"
            }
          ],
          "domain": "1:4-2:12"
        },
        {
          "targets": [
            {
              "content": "1:13-1:19"
            }
          ],
          "domain": "1:13-1:19"
        },
        {
          "targets": [
            {
              "content": "2:8-2:12"
            }
          ],
          "domain": "2:8-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.argument.formal.method",
      "languageId": "python",
      "facet": "type.argument.formal.method",
      "code": "class MyClass:\n    def funk(a: int):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:12",
              "removal": "0:0-2:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:16-1:19",
              "removal": "1:14-1:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:13-1:19"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.argument.formal",
      "languageId": "python",
      "facet": "type.argument.formal",
      "code": "def funk(a: int):\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:12-0:15",
              "removal": "0:10-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:15"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.class",
      "languageId": "python",
      "facet": "type.class",
      "code": "class MyClass:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8",
              "removal": "0:0-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.class2",
      "languageId": "python",
      "facet": "type.class",
      "code": "@value\nclass MyClass:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8",
              "removal": "0:0-2:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:8"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.field.class",
      "languageId": "python",
      "facet": "type.field.class",
      "code": "class Foo:\n    bar: int",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:12",
              "removal": "0:0-1:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:12"
        },
        {
          "targets": [
            {
              "content": "1:9-1:12",
              "removal": "1:7-1:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:12"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.iteration.block",
      "languageId": "python",
      "facet": "type.iteration.block",
      "code": "class Foo:\n    def bar():\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:12"
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:4-2:12"
            }
          ],
          "domain": "1:4-2:12"
        },
        {
          "targets": [
            {
              "content": "2:8-2:12"
            }
          ],
          "domain": "2:8-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.iteration.block2",
      "languageId": "python",
      "facet": "type.iteration.block",
      "code": "def foo():\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.iteration.block3",
      "languageId": "python",
      "facet": "type.iteration.block",
      "code": "if True:\n    pass\nelif False:\n    pass\nelse:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-5:8"
            }
          ],
          "domain": "0:0-5:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        },
        {
          "targets": [
            {
              "content": "3:4-3:8"
            }
          ],
          "domain": "3:4-3:8"
        },
        {
          "targets": [
            {
              "content": "5:4-5:8"
            }
          ],
          "domain": "5:4-5:8"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.iteration.block4",
      "languageId": "python",
      "facet": "type.iteration.block",
      "code": "while True:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.iteration.class",
      "languageId": "python",
      "facet": "type.iteration.class",
      "code": "class Foo:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.iteration.document",
      "languageId": "python",
      "facet": "type.iteration.document",
      "code": "\nfoo\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.return",
      "languageId": "python",
      "facet": "type.return",
      "code": "def funk() -> int:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:14-0:17",
              "removal": "0:10-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.typeArgument.iteration",
      "languageId": "python",
      "facet": "type.typeArgument.iteration",
      "code": "value: map[str, int]",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:20"
            }
          ],
          "domain": "0:0-0:20"
        },
        {
          "targets": [
            {
              "content": "0:11-0:19"
            }
          ],
          "domain": "0:11-0:19"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.typeArgument",
      "languageId": "python",
      "facet": "type.typeArgument",
      "code": "value: list[int]",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:16",
              "removal": "0:5-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:12-0:15",
              "removal": "0:12-0:15",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:12-0:15"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.typeArgument2",
      "languageId": "python",
      "facet": "type.typeArgument",
      "code": "value: map[str, int]",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:20",
              "removal": "0:5-0:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:20"
        },
        {
          "targets": [
            {
              "content": "0:11-0:14",
              "removal": "0:11-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:11-0:14"
        },
        {
          "targets": [
            {
              "content": "0:16-0:19",
              "removal": "0:14-0:19",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:16-0:19"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.variable",
      "languageId": "python",
      "facet": "type.variable",
      "code": "value: int",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:10",
              "removal": "0:5-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:10"
        }
      ]
    },
    {
      "name": "scopes/python/type/type.variable2",
      "languageId": "python",
      "facet": "type.variable",
      "code": "value: int = 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:10",
              "removal": "0:5-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.argument.actual.iteration",
      "languageId": "python",
      "facet": "value.argument.actual.iteration",
      "code": "aaa(bbb=0, ccc=1)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:4-0:16"
            }
          ],
          "domain": "0:4-0:16"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.argument.actual",
      "languageId": "python",
      "facet": "value.argument.actual",
      "code": "aaa(bbb=0, ccc=1)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:9",
              "removal": "0:7-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:4-0:9"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16",
              "removal": "0:14-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:11-0:16"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.argument.formal.constructor.iteration",
      "languageId": "python",
      "facet": "value.argument.formal.constructor.iteration",
      "code": "class Foo:\n    def __init__(self, aaa: str, bbb: int):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:12"
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:4-2:12"
            }
          ],
          "domain": "1:4-2:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:41"
            }
          ],
          "domain": "1:17-1:41"
        },
        {
          "targets": [
            {
              "content": "2:8-2:12"
            }
          ],
          "domain": "2:8-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.argument.formal.constructor",
      "languageId": "python",
      "facet": "value.argument.formal.constructor",
      "code": "class Foo:\n    def __init__(self, aaa: str, bbb: int = 2):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:44-1:45",
              "removal": "1:41-1:45",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:33-1:45"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.argument.formal.iteration",
      "languageId": "python",
      "facet": "value.argument.formal.iteration",
      "code": "def bar(aaa: str, bbb: int):\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "0:8-0:26"
            }
          ],
          "domain": "0:8-0:26"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.argument.formal.method.iteration",
      "languageId": "python",
      "facet": "value.argument.formal.method.iteration",
      "code": "class Foo:\n    def bar(aaa: str, bbb: int):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:12"
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:4-2:12"
            }
          ],
          "domain": "1:4-2:12"
        },
        {
          "targets": [
            {
              "content": "1:12-1:30"
            }
          ],
          "domain": "1:12-1:30"
        },
        {
          "targets": [
            {
              "content": "2:8-2:12"
            }
          ],
          "domain": "2:8-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.argument.formal.method",
      "languageId": "python",
      "facet": "value.argument.formal.method",
      "code": "class Foo:\n    def bar(aaa: str, bbb: int = 123):\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:33-1:36",
              "removal": "1:30-1:36",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:22-1:36"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.argument.formal",
      "languageId": "python",
      "facet": "value.argument.formal",
      "code": "def bar(aaa: str, bbb: int = 123):\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:29-0:32",
              "removal": "0:26-0:32",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:18-0:32"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.assignment",
      "languageId": "python",
      "facet": "value.assignment",
      "code": "value = 123",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:11",
              "removal": "0:5-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.field.class",
      "languageId": "python",
      "facet": "value.field.class",
      "code": "class Foo:\n    bar = 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:10-1:11",
              "removal": "1:7-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:11"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.foreach",
      "languageId": "python",
      "facet": "value.foreach",
      "code": "for item in items:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:12-0:17",
              "removal": "0:11-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.iteration.block",
      "languageId": "python",
      "facet": "value.iteration.block",
      "code": "class Foo:\n    def bar():\n        pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:12"
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:4-2:12"
            }
          ],
          "domain": "1:4-2:12"
        },
        {
          "targets": [
            {
              "content": "2:8-2:12"
            }
          ],
          "domain": "2:8-2:12"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.iteration.block2",
      "languageId": "python",
      "facet": "value.iteration.block",
      "code": "def foo():\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.iteration.block3",
      "languageId": "python",
      "facet": "value.iteration.block",
      "code": "if True:\n    pass\nelif False:\n    pass\nelse:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-5:8"
            }
          ],
          "domain": "0:0-5:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        },
        {
          "targets": [
            {
              "content": "3:4-3:8"
            }
          ],
          "domain": "3:4-3:8"
        },
        {
          "targets": [
            {
              "content": "5:4-5:8"
            }
          ],
          "domain": "5:4-5:8"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.iteration.block4",
      "languageId": "python",
      "facet": "value.iteration.block",
      "code": "while True:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.iteration.class",
      "languageId": "python",
      "facet": "value.iteration.class",
      "code": "class Foo:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:8"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.iteration.document",
      "languageId": "python",
      "facet": "value.iteration.document",
      "code": "\nfoo\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.mapPair.iteration",
      "languageId": "python",
      "facet": "value.mapPair.iteration",
      "code": "{ aaa: 123, bbb: 456}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:21"
            }
          ],
          "domain": "0:0-0:21"
        },
        {
          "targets": [
            {
              "content": "0:1-0:20"
            }
          ],
          "domain": "0:1-0:20"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.mapPair",
      "languageId": "python",
      "facet": "value.mapPair",
      "code": "{ aaa: 123, bbb: 456}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:10",
              "removal": "0:5-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:2-0:10"
        },
        {
          "targets": [
            {
              "content": "0:17-0:20",
              "removal": "0:15-0:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:12-0:20"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.resource.iteration",
      "languageId": "python",
      "facet": "value.resource.iteration",
      "code": "with aaa, bbb as ccc:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:20"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.resource.iteration2",
      "languageId": "python",
      "facet": "value.resource.iteration",
      "code": "with aaa:\n    pass\n\nbbb = ccc\nddd = eee",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8"
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "0:0-4:9"
            }
          ],
          "domain": "0:0-4:9"
        },
        {
          "targets": [
            {
              "content": "1:4-1:8"
            }
          ],
          "domain": "1:4-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.resource",
      "languageId": "python",
      "facet": "value.resource",
      "code": "with aaa:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:4-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.resource2",
      "languageId": "python",
      "facet": "value.resource",
      "code": "with aaa, bbb:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:10",
              "insertionDelimiter": " "
            },
            {
              "content": "0:10-0:13",
              "removal": "0:8-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:8"
        },
        {
          "targets": [
            {
              "content": "0:10-0:13",
              "removal": "0:8-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:10-0:13"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.resource3",
      "languageId": "python",
      "facet": "value.resource",
      "code": "with aaa as bbb:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.resource4",
      "languageId": "python",
      "facet": "value.resource",
      "code": "with aaa, bbb as ccc:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:10",
              "insertionDelimiter": " "
            },
            {
              "content": "0:10-0:13",
              "removal": "0:10-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:8"
        },
        {
          "targets": [
            {
              "content": "0:10-0:13",
              "removal": "0:10-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:10-0:20"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.resource5",
      "languageId": "python",
      "facet": "value.resource",
      "code": "with aaa as bbb, ccc as ddd:\n    pass",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:12",
              "insertionDelimiter": " "
            },
            {
              "content": "0:17-0:20",
              "removal": "0:17-0:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:8"
        },
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:15"
        },
        {
          "targets": [
            {
              "content": "0:17-0:20",
              "removal": "0:17-0:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:17-0:27"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.return.lambda",
      "languageId": "python",
      "facet": "value.return.lambda",
      "code": "lambda: 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:9",
              "removal": "0:7-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.return",
      "languageId": "python",
      "facet": "value.return",
      "code": "def bar():\n    return 123",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:11-1:14",
              "removal": "1:10-1:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:14"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.variable.pattern",
      "languageId": "python",
      "facet": "value.variable.pattern",
      "code": "foo, bar = value",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-0:16",
              "removal": "0:8-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:16"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.variable",
      "languageId": "python",
      "facet": "value.variable",
      "code": "value = 123",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:11",
              "removal": "0:5-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/python/value/value.yield",
      "languageId": "python",
      "facet": "value.yield",
      "code": "def aaa():\n    yield bbb",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:10-1:13",
              "removal": "1:9-1:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:13"
        }
      ]
    },
    {
      "name": "scopes/r/anonymousFunction",
      "languageId": "r",
      "facet": "anonymousFunction",
      "code": "lapply(1:10, function(x) x^2)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:28",
              "removal": "0:12-0:28",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:13-0:28"
        }
      ]
    },
    {
      "name": "scopes/r/argument/argument.actual.iteration",
      "languageId": "r",
      "facet": "argument.actual.iteration",
      "code": "foo(x, y)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:8"
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/r/argument/argument.actual.multiLine",
      "languageId": "r",
      "facet": "argument.actual.multiLine",
      "code": "foo(\n    x,\n    y\n)\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:5",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:5"
        },
        {
          "targets": [
            {
              "content": "2:4-2:5",
              "removal": "1:5-2:5",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:5"
        }
      ]
    },
    {
      "name": "scopes/r/argument/argument.actual.singleLine",
      "languageId": "r",
      "facet": "argument.actual.singleLine",
      "code": "func(x, y)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:6",
              "removal": "0:5-0:8",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:5-0:6"
        },
        {
          "targets": [
            {
              "content": "0:8-0:9",
              "removal": "0:6-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:8-0:9"
        }
      ]
    },
    {
      "name": "scopes/r/argument/argument.actual.singleLine2",
      "languageId": "r",
      "facet": "argument.actual.singleLine",
      "code": "func(1)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:6",
              "removal": "0:5-0:6",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:5-0:6"
        }
      ]
    },
    {
      "name": "scopes/r/argument/argument.actual.singleLine3",
      "languageId": "r",
      "facet": "argument.actual.singleLine",
      "code": "func(...)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:8",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:5-0:8"
        }
      ]
    },
    {
      "name": "scopes/r/argument/argument.actual.singleLine4",
      "languageId": "r",
      "facet": "argument.actual.singleLine",
      "code": "func(x=1)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:8",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:5-0:8"
        }
      ]
    },
    {
      "name": "scopes/r/argument/argument.formal.iteration",
      "languageId": "r",
      "facet": "argument.formal.iteration",
      "code": "abc <- function(x, y){}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:20"
            }
          ],
          "domain": "0:0-0:23"
        }
      ]
    },
    {
      "name": "scopes/r/argument/argument.formal.multiLine",
      "languageId": "r",
      "facet": "argument.formal.multiLine",
      "code": "abc <- function(\n    x,\n    y\n){ }",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:5",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:5"
        },
        {
          "targets": [
            {
              "content": "2:4-2:5",
              "removal": "1:5-2:5",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:5"
        }
      ]
    },
    {
      "name": "scopes/r/argument/argument.formal.singleLine",
      "languageId": "r",
      "facet": "argument.formal.singleLine",
      "code": "abc <- function(x, y){ }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:17",
              "removal": "0:16-0:19",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:16-0:17"
        },
        {
          "targets": [
            {
              "content": "0:19-0:20",
              "removal": "0:17-0:20",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:19-0:20"
        }
      ]
    },
    {
      "name": "scopes/r/argumentList/argumentList.actual.empty",
      "languageId": "r",
      "facet": "argumentList.actual.empty",
      "code": "foo()",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:4",
              "removal": "0:4-0:4",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:5"
        }
      ]
    },
    {
      "name": "scopes/r/argumentList/argumentList.actual.method.empty",
      "languageId": "r",
      "facet": "argumentList.actual.method.empty",
      "code": "foo.bar()",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:8",
              "removal": "0:8-0:8",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/r/argumentList/argumentList.actual.method.multiLine",
      "languageId": "r",
      "facet": "argumentList.actual.method.multiLine",
      "code": "foo.bar(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:8-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/r/argumentList/argumentList.actual.method.singleLine",
      "languageId": "r",
      "facet": "argumentList.actual.method.singleLine",
      "code": "foo.bar(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16",
              "removal": "0:8-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/r/argumentList/argumentList.actual.multiLine",
      "languageId": "r",
      "facet": "argumentList.actual.multiLine",
      "code": "foo(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:4-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/r/argumentList/argumentList.actual.singleLine",
      "languageId": "r",
      "facet": "argumentList.actual.singleLine",
      "code": "foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12",
              "removal": "0:4-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/r/argumentList/argumentList.formal.empty",
      "languageId": "r",
      "facet": "argumentList.formal.empty",
      "code": "abc <- function() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:16",
              "removal": "0:16-0:16",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/r/argumentList/argumentList.formal.lambda.empty",
      "languageId": "r",
      "facet": "argumentList.formal.lambda.empty",
      "code": "function() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:9",
              "removal": "0:9-0:9",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/r/argumentList/argumentList.formal.lambda.multiLine",
      "languageId": "r",
      "facet": "argumentList.formal.lambda.multiLine",
      "code": "function(\n    aaa,\n    bbb\n) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:9-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:5"
        }
      ]
    },
    {
      "name": "scopes/r/argumentList/argumentList.formal.lambda.singleLine",
      "languageId": "r",
      "facet": "argumentList.formal.lambda.singleLine",
      "code": "function(aaa, bbb) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:17",
              "removal": "0:9-0:17",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:22"
        }
      ]
    },
    {
      "name": "scopes/r/argumentList/argumentList.formal.multiLine",
      "languageId": "r",
      "facet": "argumentList.formal.multiLine",
      "code": "abc <- function(\n    aaa,\n    bbb\n){\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:16-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-4:1"
        }
      ]
    },
    {
      "name": "scopes/r/argumentList/argumentList.formal.singleLine",
      "languageId": "r",
      "facet": "argumentList.formal.singleLine",
      "code": "abc <- function(aaa, bbb) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:16-0:24",
              "removal": "0:16-0:24",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:29"
        }
      ]
    },
    {
      "name": "scopes/r/comment.line",
      "languageId": "r",
      "facet": "comment.line",
      "code": "# Hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/r/functionCall",
      "languageId": "r",
      "facet": "functionCall",
      "code": "lapply(1:10, function(x) x^2)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:29",
              "removal": "0:0-0:29",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:29"
        }
      ]
    },
    {
      "name": "scopes/r/functionCallee",
      "languageId": "r",
      "facet": "functionCallee",
      "code": "lapply(1:10, function(x) x^2)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:6",
              "removal": "0:0-0:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:6"
        }
      ]
    },
    {
      "name": "scopes/r/functionName",
      "languageId": "r",
      "facet": "functionName",
      "code": "abc <- function(arg){\n    TRUE\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/r/ifStatement",
      "languageId": "r",
      "facet": "ifStatement",
      "code": "if(FALSE) 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:11",
              "removal": "0:0-0:11",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/r/ifStatement2",
      "languageId": "r",
      "facet": "ifStatement",
      "code": "if(TRUE){ 1 }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/r/ifStatement3",
      "languageId": "r",
      "facet": "ifStatement",
      "code": "if(TRUE){\n    1\n} else {\n    0\n}\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-4:1",
              "removal": "0:0-5:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-4:1"
        }
      ]
    },
    {
      "name": "scopes/r/name.assignment",
      "languageId": "r",
      "facet": "name.assignment",
      "code": "hello = \"world\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:5",
              "removal": "0:0-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:15"
        }
      ]
    },
    {
      "name": "scopes/r/name.variable",
      "languageId": "r",
      "facet": "name.variable",
      "code": "hello <- \"world\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:5",
              "removal": "0:0-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:16"
        }
      ]
    },
    {
      "name": "scopes/r/namedFunction",
      "languageId": "r",
      "facet": "namedFunction",
      "code": "foo <- function(bar){}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:22",
              "removal": "0:0-0:22",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:22"
        }
      ]
    },
    {
      "name": "scopes/r/value.assignment",
      "languageId": "r",
      "facet": "value.assignment",
      "code": "hello <- \"world\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:16",
              "removal": "0:5-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:16"
        }
      ]
    },
    {
      "name": "scopes/r/value.variable",
      "languageId": "r",
      "facet": "value.variable",
      "code": "hello = \"world\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:15",
              "removal": "0:5-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:15"
        }
      ]
    },
    {
      "name": "scopes/ruby/argument/argument.actual.iteration",
      "languageId": "ruby",
      "facet": "argument.actual.iteration",
      "code": "foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/ruby/argument/argument.actual.iteration2",
      "languageId": "ruby",
      "facet": "argument.actual.iteration",
      "code": "foo{ |aaa, bbb| }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:14"
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/ruby/argument/argument.actual.multiLine",
      "languageId": "ruby",
      "facet": "argument.actual.multiLine",
      "code": "foo(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/ruby/argument/argument.actual.multiLine2",
      "languageId": "ruby",
      "facet": "argument.actual.multiLine",
      "code": "foo{ |\n    aaa,\n    bbb\n| }",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/ruby/argument/argument.actual.singleLine",
      "languageId": "ruby",
      "facet": "argument.actual.singleLine",
      "code": "foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:4-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:7"
        },
        {
          "targets": [
            {
              "content": "0:9-0:12",
              "removal": "0:7-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:12"
        }
      ]
    },
    {
      "name": "scopes/ruby/argument/argument.actual.singleLine2",
      "languageId": "ruby",
      "facet": "argument.actual.singleLine",
      "code": "foo{ |aaa, bbb| }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:6-0:11",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:6-0:9"
        },
        {
          "targets": [
            {
              "content": "0:11-0:14",
              "removal": "0:9-0:14",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:11-0:14"
        }
      ]
    },
    {
      "name": "scopes/ruby/argument/argument.formal.iteration",
      "languageId": "ruby",
      "facet": "argument.formal.iteration",
      "code": "def foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16"
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/ruby/argument/argument.formal.multiLine",
      "languageId": "ruby",
      "facet": "argument.formal.multiLine",
      "code": "def foo(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/ruby/argument/argument.formal.singleLine",
      "languageId": "ruby",
      "facet": "argument.formal.singleLine",
      "code": "def foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:11",
              "removal": "0:8-0:13",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:8-0:11"
        },
        {
          "targets": [
            {
              "content": "0:13-0:16",
              "removal": "0:11-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:13-0:16"
        }
      ]
    },
    {
      "name": "scopes/ruby/argumentList/argumentList.actual.empty",
      "languageId": "ruby",
      "facet": "argumentList.actual.empty",
      "code": "foo()",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:4",
              "removal": "0:4-0:4",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:5"
        }
      ]
    },
    {
      "name": "scopes/ruby/argumentList/argumentList.actual.multiLine",
      "languageId": "ruby",
      "facet": "argumentList.actual.multiLine",
      "code": "foo(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:4-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/ruby/argumentList/argumentList.actual.singleLine",
      "languageId": "ruby",
      "facet": "argumentList.actual.singleLine",
      "code": "foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12",
              "removal": "0:4-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/ruby/argumentList/argumentList.formal.empty",
      "languageId": "ruby",
      "facet": "argumentList.formal.empty",
      "code": "def foo()",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:8",
              "removal": "0:8-0:8",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/ruby/argumentList/argumentList.formal.empty2",
      "languageId": "ruby",
      "facet": "argumentList.formal.empty",
      "code": "foo{ || }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:6",
              "removal": "0:6-0:6",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:9"
        }
      ]
    },
    {
      "name": "scopes/ruby/argumentList/argumentList.formal.multiLine",
      "languageId": "ruby",
      "facet": "argumentList.formal.multiLine",
      "code": "def foo(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:8-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/ruby/argumentList/argumentList.formal.multiLine2",
      "languageId": "ruby",
      "facet": "argumentList.formal.multiLine",
      "code": "foo{ |\n    aaa,\n    bbb\n| }",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:6-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:3"
        }
      ]
    },
    {
      "name": "scopes/ruby/argumentList/argumentList.formal.singleLine",
      "languageId": "ruby",
      "facet": "argumentList.formal.singleLine",
      "code": "def foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16",
              "removal": "0:8-0:16",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/ruby/argumentList/argumentList.formal.singleLine2",
      "languageId": "ruby",
      "facet": "argumentList.formal.singleLine",
      "code": "foo{ |aaa, bbb| }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:14",
              "removal": "0:6-0:14",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/ruby/comment.block",
      "languageId": "ruby",
      "facet": "comment.block",
      "code": "=begin\n  Hi\n=end",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:4",
              "removal": "0:0-2:4",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:4"
        }
      ]
    },
    {
      "name": "scopes/ruby/comment.line",
      "languageId": "ruby",
      "facet": "comment.line",
      "code": "# Hello World",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/ruby/comment.line2",
      "languageId": "ruby",
      "facet": "comment.line",
      "code": "a = 0 # Hello World",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:19",
              "removal": "0:5-0:19",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:6-0:19"
        }
      ]
    },
    {
      "name": "scopes/ruby/disqualifyDelimiter",
      "languageId": "ruby",
      "facet": "disqualifyDelimiter",
      "code": "1 < 2\n1 > 2\n1 <= 2\n1 >= 2\na << 2\na >> 2\na <<= 2\na >>= 2\na = { :b => 2 }\ncase 85 when 0 then => \"Fail\" end",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "1:2-1:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "2:2-2:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "3:2-3:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "4:2-4:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "5:2-5:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "6:2-6:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "7:2-7:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "8:9-8:11"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "9:20-9:22"
            }
          ]
        }
      ]
    },
    {
      "name": "scopes/rust/disqualifyDelimiter",
      "languageId": "rust",
      "facet": "disqualifyDelimiter",
      "code": "1 < 2;\n1 > 2;\n1 <= 2;\n1 >= 2;\na << 2;\na >> 2;\na <<= 2;\na >>= 2;\nfn foo() -> string {}\nmatch number { 0 => \"fail\" }\nmacro_rules! my_expr { ($x:expr) => {}; }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "1:2-1:3"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "2:2-2:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "3:2-3:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "4:2-4:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "5:2-5:4"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "6:2-6:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "7:2-7:5"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "8:9-8:11"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "9:17-9:19"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "10:33-10:35"
            }
          ]
        }
      ]
    },
    {
      "name": "scopes/rust/ifStatement",
      "languageId": "rust",
      "facet": "ifStatement",
      "code": "if true {}\nelse {};",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:7",
              "removal": "0:0-1:7",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-1:7"
        }
      ]
    },
    {
      "name": "scopes/rust/string.singleLine",
      "languageId": "rust",
      "facet": "string.singleLine",
      "code": "\"aaa\"\nr#\"bbb\"#\nr##\"ccc\"##",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:5",
              "removal": "0:0-1:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:5"
        },
        {
          "targets": [
            {
              "content": "1:0-1:8",
              "removal": "1:0-2:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:8"
        },
        {
          "targets": [
            {
              "content": "2:0-2:10",
              "removal": "1:8-2:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-2:10"
        }
      ]
    },
    {
      "name": "scopes/rust/textFragment.string.singleLine",
      "languageId": "rust",
      "facet": "textFragment.string.singleLine",
      "code": "\"aaa\"\nr#\"bbb\"#\nr##\"ccc\"##",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:4",
              "removal": "0:1-0:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-0:4"
        },
        {
          "targets": [
            {
              "content": "1:3-1:6",
              "removal": "1:3-1:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:3-1:6"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "2:4-2:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/scala/argument/argument.actual.iteration",
      "languageId": "scala",
      "facet": "argument.actual.iteration",
      "code": "foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/scala/argument/argument.actual.multiLine",
      "languageId": "scala",
      "facet": "argument.actual.multiLine",
      "code": "foo(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:7"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "1:7-2:7",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/scala/argument/argument.actual.singleLine",
      "languageId": "scala",
      "facet": "argument.actual.singleLine",
      "code": "foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:4-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:7"
        },
        {
          "targets": [
            {
              "content": "0:9-0:12",
              "removal": "0:7-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:12"
        }
      ]
    },
    {
      "name": "scopes/scala/argument/argument.formal.iteration",
      "languageId": "scala",
      "facet": "argument.formal.iteration",
      "code": "def foo(aaa: Int, bbb: Int) = x",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:26"
            }
          ],
          "domain": "0:0-0:31"
        }
      ]
    },
    {
      "name": "scopes/scala/argument/argument.formal.iteration2",
      "languageId": "scala",
      "facet": "argument.formal.iteration",
      "code": "class Foo(aaa: Int, bbb: Int) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:28"
            }
          ],
          "domain": "0:0-0:32"
        }
      ]
    },
    {
      "name": "scopes/scala/argument/argument.formal.multiLine",
      "languageId": "scala",
      "facet": "argument.formal.multiLine",
      "code": "def foo(\n    aaa: Int,\n    bbb: Int\n) = x",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:12",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:12"
        },
        {
          "targets": [
            {
              "content": "2:4-2:12",
              "removal": "1:12-2:12",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:12"
        }
      ]
    },
    {
      "name": "scopes/scala/argument/argument.formal.multiLine2",
      "languageId": "scala",
      "facet": "argument.formal.multiLine",
      "code": "class Foo(\n    aaa: Int,\n    bbb: Int\n) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:12",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:12"
        },
        {
          "targets": [
            {
              "content": "2:4-2:12",
              "removal": "1:12-2:12",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:12"
        }
      ]
    },
    {
      "name": "scopes/scala/argument/argument.formal.singleLine",
      "languageId": "scala",
      "facet": "argument.formal.singleLine",
      "code": "def foo(aaa: Int, bbb: Int) = x",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:16",
              "removal": "0:8-0:18",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:8-0:16"
        },
        {
          "targets": [
            {
              "content": "0:18-0:26",
              "removal": "0:16-0:26",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:18-0:26"
        }
      ]
    },
    {
      "name": "scopes/scala/argument/argument.formal.singleLine2",
      "languageId": "scala",
      "facet": "argument.formal.singleLine",
      "code": "class Foo(aaa: Int, bbb: Int) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:18",
              "removal": "0:10-0:20",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:10-0:18"
        },
        {
          "targets": [
            {
              "content": "0:20-0:28",
              "removal": "0:18-0:28",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:20-0:28"
        }
      ]
    },
    {
      "name": "scopes/scala/argumentList/argumentList.actual.empty",
      "languageId": "scala",
      "facet": "argumentList.actual.empty",
      "code": "foo()",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:4",
              "removal": "0:4-0:4",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:5"
        }
      ]
    },
    {
      "name": "scopes/scala/argumentList/argumentList.actual.multiLine",
      "languageId": "scala",
      "facet": "argumentList.actual.multiLine",
      "code": "foo(\n    aaa,\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "0:4-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/scala/argumentList/argumentList.actual.singleLine",
      "languageId": "scala",
      "facet": "argumentList.actual.singleLine",
      "code": "foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:12",
              "removal": "0:4-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/scala/argumentList/argumentList.formal.empty",
      "languageId": "scala",
      "facet": "argumentList.formal.empty",
      "code": "def foo() = x",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:8",
              "removal": "0:8-0:8",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/scala/argumentList/argumentList.formal.empty2",
      "languageId": "scala",
      "facet": "argumentList.formal.empty",
      "code": "class Foo() {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:10",
              "removal": "0:10-0:10",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/scala/argumentList/argumentList.formal.multiLine",
      "languageId": "scala",
      "facet": "argumentList.formal.multiLine",
      "code": "def foo(\n    aaa: Int,\n    bbb: Int\n) = x",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:12",
              "removal": "0:8-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:5"
        }
      ]
    },
    {
      "name": "scopes/scala/argumentList/argumentList.formal.multiLine2",
      "languageId": "scala",
      "facet": "argumentList.formal.multiLine",
      "code": "class Foo(\n    aaa: Int,\n    bbb: Int\n) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:12",
              "removal": "0:10-3:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "0:0-3:4"
        }
      ]
    },
    {
      "name": "scopes/scala/argumentList/argumentList.formal.singleLine",
      "languageId": "scala",
      "facet": "argumentList.formal.singleLine",
      "code": "def foo(aaa: Int, bbb: Int) = x",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:26",
              "removal": "0:8-0:26",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:31"
        }
      ]
    },
    {
      "name": "scopes/scala/argumentList/argumentList.formal.singleLine2",
      "languageId": "scala",
      "facet": "argumentList.formal.singleLine",
      "code": "class Foo(aaa: Int, bbb: Int) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:28",
              "removal": "0:10-0:28",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:32"
        }
      ]
    },
    {
      "name": "scopes/scala/disqualifyDelimiter",
      "languageId": "scala",
      "facet": "disqualifyDelimiter",
      "code": "val minValue = if (1 < 2) a else b\nval minValue = if (1 > 2) a else b\nval minValue = if (1 <= 2) a else b\nval minValue = if (1 >= 2) a else b\nval minValue = if (a << 2) a else b\nval minValue = if (a >> 2) a else b\nval minValue = if (a <<= 2) a else b\nval minValue = if (a >>= 2) a else b\nfor (n <- numbers) yield n\ndef function[T <% String](x: T) = {}\ndef method[T <: BaseType](param: T) = {}\ndef method[T >: BaseType](param: T) = {}\nval foo = (x: Int) => x\nval func: (Int, Int) => Int = foo\nvalue match { case 0 => \"fail\" }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:21-0:22"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "1:21-1:22"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "2:21-2:23"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "3:21-3:23"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "4:21-4:23"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "5:21-5:23"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "6:21-6:24"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "7:21-7:24"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "8:7-8:9"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "9:15-9:17"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "10:13-10:15"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "11:13-11:15"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "12:19-12:21"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "13:21-13:23"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "14:21-14:23"
            }
          ]
        }
      ]
    },
    {
      "name": "scopes/scala/ifStatement",
      "languageId": "scala",
      "facet": "ifStatement",
      "code": "val test = if (true) true else false",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-0:36",
              "removal": "0:10-0:36",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:11-0:36"
        }
      ]
    },
    {
      "name": "scopes/scala/ifStatement2",
      "languageId": "scala",
      "facet": "ifStatement",
      "code": "val test = if (true) {\n  true\n} else {\n  false\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-4:1",
              "removal": "0:10-4:1",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:11-4:1"
        }
      ]
    },
    {
      "name": "scopes/scm/argument.actual.iteration",
      "languageId": "scm",
      "facet": "argument.actual.iteration",
      "code": "(#foo? @aaa bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:15"
            }
          ],
          "domain": "0:0-0:16"
        }
      ]
    },
    {
      "name": "scopes/scm/argument.actual.multiLine",
      "languageId": "scm",
      "facet": "argument.actual.multiLine",
      "code": "(#foo?\n    @aaa\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:8",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-1:8"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "2:0-3:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:4-2:7"
        }
      ]
    },
    {
      "name": "scopes/scm/argument.actual.singleLine",
      "languageId": "scm",
      "facet": "argument.actual.singleLine",
      "code": "(#foo? @aaa bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:11",
              "removal": "0:7-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:11"
        },
        {
          "targets": [
            {
              "content": "0:12-0:15",
              "removal": "0:11-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:12-0:15"
        }
      ]
    },
    {
      "name": "scopes/scm/argumentList.actual.empty",
      "languageId": "scm",
      "facet": "argumentList.actual.empty",
      "code": "(#foo?)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:6",
              "removal": "0:6-0:6",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        }
      ]
    },
    {
      "name": "scopes/scm/argumentList.actual.multiLine",
      "languageId": "scm",
      "facet": "argumentList.actual.multiLine",
      "code": "(#foo?\n    @aaa\n    bbb\n)",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "1:0-3:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-3:1"
        }
      ]
    },
    {
      "name": "scopes/scm/argumentList.actual.singleLine",
      "languageId": "scm",
      "facet": "argumentList.actual.singleLine",
      "code": "(#foo? @aaa bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:15",
              "removal": "0:6-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:16"
        }
      ]
    },
    {
      "name": "scopes/scm/comment.line",
      "languageId": "scm",
      "facet": "comment.line",
      "code": ";; Hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/scm/functionCall",
      "languageId": "scm",
      "facet": "functionCall",
      "code": "(#not-parent-type? @statement variable_declaration)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:51",
              "removal": "0:0-0:51",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:51"
        }
      ]
    },
    {
      "name": "scopes/scm/functionCallee",
      "languageId": "scm",
      "facet": "functionCallee",
      "code": "(#not-parent-type? @statement variable_declaration)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:18",
              "removal": "0:2-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:51"
        }
      ]
    },
    {
      "name": "scopes/scm/list",
      "languageId": "scm",
      "facet": "list",
      "code": "[\n    (foo)\n    (bar)\n] @list",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:1",
              "removal": "0:0-3:2",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-3:7"
        }
      ]
    },
    {
      "name": "scopes/scm/statement",
      "languageId": "scm",
      "facet": "statement",
      "code": "(aaa) @bbb",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:10",
              "removal": "0:0-0:10",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:10"
        }
      ]
    },
    {
      "name": "scopes/scm/string.singleLine",
      "languageId": "scm",
      "facet": "string.singleLine",
      "code": "\"hello world\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/scm/textFragment.comment.line",
      "languageId": "scm",
      "facet": "textFragment.comment.line",
      "code": ";; Hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14",
              "removal": "0:0-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:14"
        }
      ]
    },
    {
      "name": "scopes/scm/textFragment.string.singleLine",
      "languageId": "scm",
      "facet": "textFragment.string.singleLine",
      "code": "\"hello world\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:12",
              "removal": "0:1-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-0:12"
        }
      ]
    },
    {
      "name": "scopes/scss/argument.actual.iteration",
      "languageId": "scss",
      "facet": "argument.actual.iteration",
      "code": "@mixin replace-text($image, $color: red) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:20-0:39"
            }
          ],
          "domain": "0:0-0:43"
        }
      ]
    },
    {
      "name": "scopes/scss/argument.actual.multiLine",
      "languageId": "scss",
      "facet": "argument.actual.multiLine",
      "code": "@mixin replace-text(\n    $image,\n    $color: red\n) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:10",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:10"
        },
        {
          "targets": [
            {
              "content": "2:4-2:15",
              "removal": "1:10-2:15",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:15"
        }
      ]
    },
    {
      "name": "scopes/scss/argument.actual.singleLine",
      "languageId": "scss",
      "facet": "argument.actual.singleLine",
      "code": "@mixin replace-text($image, $color: red) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:20-0:26",
              "removal": "0:20-0:28",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:20-0:26"
        },
        {
          "targets": [
            {
              "content": "0:28-0:39",
              "removal": "0:26-0:39",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:28-0:39"
        }
      ]
    },
    {
      "name": "scopes/scss/branch.if.elif.else",
      "languageId": "scss",
      "facet": "branch.if.elif.else",
      "code": "@if true {}\n@else if false {}\n@else {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:11",
              "removal": "0:1-1:6",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:11"
        },
        {
          "targets": [
            {
              "content": "1:0-1:17",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:0-1:17"
        },
        {
          "targets": [
            {
              "content": "2:0-2:8",
              "removal": "1:17-2:8",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-2:8"
        }
      ]
    },
    {
      "name": "scopes/scss/branch.if.else",
      "languageId": "scss",
      "facet": "branch.if.else",
      "code": "@if true {}\n@else {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:11",
              "removal": "0:0-1:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:11"
        },
        {
          "targets": [
            {
              "content": "1:0-1:8",
              "removal": "0:11-1:8",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:0-1:8"
        }
      ]
    },
    {
      "name": "scopes/scss/branch.if.iteration",
      "languageId": "scss",
      "facet": "branch.if.iteration",
      "code": "* {\n  @if true { }\n  @else if false { }\n  @else { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:2-3:11"
            }
          ],
          "domain": "1:2-3:11"
        }
      ]
    },
    {
      "name": "scopes/scss/branch.if",
      "languageId": "scss",
      "facet": "branch.if",
      "code": "@if true {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:11",
              "removal": "0:0-0:11",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/scss/comment.line",
      "languageId": "scss",
      "facet": "comment.line",
      "code": "// Hello wold",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/scss/condition.if",
      "languageId": "scss",
      "facet": "condition.if",
      "code": "@if true {}\n@else if false {}\n@else {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:8",
              "removal": "0:4-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:8"
        },
        {
          "targets": [
            {
              "content": "1:9-1:14",
              "removal": "1:9-1:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:17"
        }
      ]
    },
    {
      "name": "scopes/scss/disqualifyDelimiter",
      "languageId": "scss",
      "facet": "disqualifyDelimiter",
      "code": "* {\n  @if $container-width < $base-width {}\n  @if $container-width <= $base-width {}\n  @if $container-width > $base-width {}\n  @if $container-width >= $base-width {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:23-1:24"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "2:23-2:25"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "3:23-3:24"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "4:23-4:25"
            }
          ]
        }
      ]
    },
    {
      "name": "scopes/scss/functionName.iteration.block",
      "languageId": "scss",
      "facet": "functionName.iteration.block",
      "code": "* { color: red; }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:3-0:16"
            }
          ],
          "domain": "0:3-0:16"
        }
      ]
    },
    {
      "name": "scopes/scss/functionName.iteration.document",
      "languageId": "scss",
      "facet": "functionName.iteration.document",
      "code": "\n* { color: red; }\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        },
        {
          "targets": [
            {
              "content": "1:3-1:16"
            }
          ],
          "domain": "1:3-1:16"
        }
      ]
    },
    {
      "name": "scopes/scss/functionName",
      "languageId": "scss",
      "facet": "functionName",
      "code": "@function calculate-margin($size) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:26",
              "removal": "0:10-0:26",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:36"
        }
      ]
    },
    {
      "name": "scopes/scss/functionName2",
      "languageId": "scss",
      "facet": "functionName",
      "code": "@mixin replace-text($image, $color: red) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:19",
              "removal": "0:7-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:43"
        }
      ]
    },
    {
      "name": "scopes/scss/ifStatement",
      "languageId": "scss",
      "facet": "ifStatement",
      "code": "@if true { }\n@else if false { }\n@else { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:9",
              "removal": "0:0-2:9",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:9"
        }
      ]
    },
    {
      "name": "scopes/scss/interior.function",
      "languageId": "scss",
      "facet": "interior.function",
      "code": "@function foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:17-0:18",
              "removal": "0:17-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:19"
        },
        {
          "targets": [
            {
              "content": "0:14-0:14",
              "removal": "0:14-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:13-0:15"
        },
        {
          "targets": [
            {
              "content": "0:17-0:18",
              "removal": "0:17-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:16-0:19"
        }
      ]
    },
    {
      "name": "scopes/scss/interior.if",
      "languageId": "scss",
      "facet": "interior.if",
      "code": "@if true { }\n@else if false { }\n@else { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:11",
              "removal": "0:10-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        },
        {
          "targets": [
            {
              "content": "0:10-0:11",
              "removal": "0:10-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:12"
        },
        {
          "targets": [
            {
              "content": "1:16-1:17",
              "removal": "1:16-1:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:18"
        },
        {
          "targets": [
            {
              "content": "1:16-1:17",
              "removal": "1:16-1:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:15-1:18"
        },
        {
          "targets": [
            {
              "content": "2:7-2:8",
              "removal": "2:7-2:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:0-2:9"
        },
        {
          "targets": [
            {
              "content": "2:7-2:8",
              "removal": "2:7-2:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:6-2:9"
        }
      ]
    },
    {
      "name": "scopes/scss/name.argument.formal.iteration",
      "languageId": "scss",
      "facet": "name.argument.formal.iteration",
      "code": "@mixin replace-text($image, $color: red) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:43"
            }
          ],
          "domain": "0:0-0:43"
        },
        {
          "targets": [
            {
              "content": "0:20-0:39"
            }
          ],
          "domain": "0:20-0:39"
        }
      ]
    },
    {
      "name": "scopes/scss/name.argument.formal",
      "languageId": "scss",
      "facet": "name.argument.formal",
      "code": "@mixin replace-text($image, $color: red) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:19",
              "removal": "0:7-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:43"
        },
        {
          "targets": [
            {
              "content": "0:20-0:26",
              "removal": "0:20-0:26",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:20-0:26"
        },
        {
          "targets": [
            {
              "content": "0:28-0:34",
              "removal": "0:27-0:34",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:28-0:39"
        }
      ]
    },
    {
      "name": "scopes/scss/name.function",
      "languageId": "scss",
      "facet": "name.function",
      "code": "@function calculate-margin() {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:26",
              "removal": "0:10-0:26",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:31"
        }
      ]
    },
    {
      "name": "scopes/scss/name.function2",
      "languageId": "scss",
      "facet": "name.function",
      "code": "@mixin replace-text() {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:19",
              "removal": "0:7-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:24"
        }
      ]
    },
    {
      "name": "scopes/scss/namedFunction.iteration.block",
      "languageId": "scss",
      "facet": "namedFunction.iteration.block",
      "code": "* { color: red; }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:3-0:16"
            }
          ],
          "domain": "0:3-0:16"
        }
      ]
    },
    {
      "name": "scopes/scss/namedFunction.iteration.document",
      "languageId": "scss",
      "facet": "namedFunction.iteration.document",
      "code": "\n* { color: red; }\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        },
        {
          "targets": [
            {
              "content": "1:3-1:16"
            }
          ],
          "domain": "1:3-1:16"
        }
      ]
    },
    {
      "name": "scopes/scss/namedFunction",
      "languageId": "scss",
      "facet": "namedFunction",
      "code": "@function calculate-margin($size) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:36",
              "removal": "0:0-0:36",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:36"
        }
      ]
    },
    {
      "name": "scopes/scss/namedFunction2",
      "languageId": "scss",
      "facet": "namedFunction",
      "code": "@mixin replace-text($image, $color: red) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:43",
              "removal": "0:0-0:43",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:43"
        }
      ]
    },
    {
      "name": "scopes/scss/textFragment.comment.line",
      "languageId": "scss",
      "facet": "textFragment.comment.line",
      "code": "// Hello wold",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/scss/value.argument.formal.iteration",
      "languageId": "scss",
      "facet": "value.argument.formal.iteration",
      "code": "@mixin replace-text($image, $color: red) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:43"
            }
          ],
          "domain": "0:0-0:43"
        },
        {
          "targets": [
            {
              "content": "0:20-0:39"
            }
          ],
          "domain": "0:20-0:39"
        }
      ]
    },
    {
      "name": "scopes/scss/value.argument.formal",
      "languageId": "scss",
      "facet": "value.argument.formal",
      "code": "@mixin replace-text($image, $color: red) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:36-0:39",
              "removal": "0:35-0:39",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:28-0:39"
        }
      ]
    },
    {
      "name": "scopes/scss/value.return",
      "languageId": "scss",
      "facet": "value.return",
      "code": "@function double($num) {\n  @return $num * 2;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:10-1:18",
              "removal": "1:9-1:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:2-1:19"
        }
      ]
    },
    {
      "name": "scopes/talon/argument/argument.actual.iteration",
      "languageId": "talon",
      "facet": "argument.actual.iteration",
      "code": "command: user.do_something(123, 456)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:27-0:35"
            }
          ],
          "domain": "0:9-0:36"
        }
      ]
    },
    {
      "name": "scopes/talon/argument/argument.actual.iteration2",
      "languageId": "talon",
      "facet": "argument.actual.iteration",
      "code": "command: key(enter)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:18"
            }
          ],
          "domain": "0:9-0:19"
        }
      ]
    },
    {
      "name": "scopes/talon/argument/argument.actual.iteration3",
      "languageId": "talon",
      "facet": "argument.actual.iteration",
      "code": "command: sleep(100ms)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:15-0:20"
            }
          ],
          "domain": "0:9-0:21"
        }
      ]
    },
    {
      "name": "scopes/talon/argument/argument.actual.singleLine",
      "languageId": "talon",
      "facet": "argument.actual.singleLine",
      "code": "command: user.do_something(123, 456)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:27-0:30",
              "removal": "0:27-0:32",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:27-0:30"
        },
        {
          "targets": [
            {
              "content": "0:32-0:35",
              "removal": "0:30-0:35",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:32-0:35"
        }
      ]
    },
    {
      "name": "scopes/talon/argument/argument.actual.singleLine2",
      "languageId": "talon",
      "facet": "argument.actual.singleLine",
      "code": "command: key(enter)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:18",
              "removal": "0:13-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:13-0:18"
        }
      ]
    },
    {
      "name": "scopes/talon/argument/argument.actual.singleLine3",
      "languageId": "talon",
      "facet": "argument.actual.singleLine",
      "code": "command: sleep(100ms)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:15-0:20",
              "removal": "0:15-0:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:15-0:20"
        }
      ]
    },
    {
      "name": "scopes/talon/argumentList/argumentList.actual.empty",
      "languageId": "talon",
      "facet": "argumentList.actual.empty",
      "code": "command: foo()",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:13",
              "removal": "0:13-0:13",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:9-0:14"
        }
      ]
    },
    {
      "name": "scopes/talon/argumentList/argumentList.actual.method.empty",
      "languageId": "talon",
      "facet": "argumentList.actual.method.empty",
      "code": "command: user.foo()",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:18-0:18",
              "removal": "0:18-0:18",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:9-0:19"
        }
      ]
    },
    {
      "name": "scopes/talon/argumentList/argumentList.actual.method.singleLine",
      "languageId": "talon",
      "facet": "argumentList.actual.method.singleLine",
      "code": "command: user.foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:18-0:26",
              "removal": "0:18-0:26",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:27"
        }
      ]
    },
    {
      "name": "scopes/talon/argumentList/argumentList.actual.singleLine",
      "languageId": "talon",
      "facet": "argumentList.actual.singleLine",
      "code": "command: foo(aaa, bbb)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:21",
              "removal": "0:13-0:21",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:22"
        }
      ]
    },
    {
      "name": "scopes/talon/argumentList/argumentList.actual.singleLine2",
      "languageId": "talon",
      "facet": "argumentList.actual.singleLine",
      "code": "command: key(enter)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:18",
              "removal": "0:13-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:19"
        }
      ]
    },
    {
      "name": "scopes/talon/argumentList/argumentList.actual.singleLine3",
      "languageId": "talon",
      "facet": "argumentList.actual.singleLine",
      "code": "command: sleep(100ms)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:15-0:20",
              "removal": "0:15-0:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:21"
        }
      ]
    },
    {
      "name": "scopes/talon/command",
      "languageId": "talon",
      "facet": "command",
      "code": "press {user.key}:\n    key(key)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:12",
              "removal": "0:0-1:12",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-1:12"
        }
      ]
    },
    {
      "name": "scopes/talon/comment.line",
      "languageId": "talon",
      "facet": "comment.line",
      "code": "# Hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/talon/interior.command",
      "languageId": "talon",
      "facet": "interior.command",
      "code": "do something:\n    a = 2",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:9",
              "removal": "1:4-1:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:9"
        }
      ]
    },
    {
      "name": "scopes/talon/key/key.mapPair.iteration",
      "languageId": "talon",
      "facet": "key.mapPair.iteration",
      "code": "not mode: command\ntag: browser\n-",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:12"
            }
          ],
          "domain": "0:0-1:12"
        },
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/talon/key/key.mapPair.iteration2",
      "languageId": "talon",
      "facet": "key.mapPair.iteration",
      "code": "foo: \"bar\"\nbaz: \"bongo\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:12"
            }
          ],
          "domain": "0:0-1:12"
        },
        {
          "targets": [
            {
              "content": "0:5-0:10"
            }
          ],
          "domain": "0:5-0:10"
        },
        {
          "targets": [
            {
              "content": "1:5-1:12"
            }
          ],
          "domain": "1:5-1:12"
        }
      ]
    },
    {
      "name": "scopes/talon/key/key.mapPair.iteration3",
      "languageId": "talon",
      "facet": "key.mapPair.iteration",
      "code": "settings():\n    foo = 0\n    bar = 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:11"
            }
          ],
          "domain": "0:0-2:11"
        },
        {
          "targets": [
            {
              "content": "1:4-2:11"
            }
          ],
          "domain": "1:4-2:11"
        }
      ]
    },
    {
      "name": "scopes/talon/key/key.mapPair",
      "languageId": "talon",
      "facet": "key.mapPair",
      "code": "not mode: command\n-",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:8",
              "removal": "0:0-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/talon/key/key.mapPair2",
      "languageId": "talon",
      "facet": "key.mapPair",
      "code": "foo: \"bar\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:10"
        }
      ]
    },
    {
      "name": "scopes/talon/key/key.mapPair3",
      "languageId": "talon",
      "facet": "key.mapPair",
      "code": "settings():\n    foo = 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:10",
              "removal": "0:0-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:11"
        },
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:11"
        }
      ]
    },
    {
      "name": "scopes/talon/name/name.assignment",
      "languageId": "talon",
      "facet": "name.assignment",
      "code": "command:\n    value = 123",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:7",
              "removal": "0:0-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:15"
        },
        {
          "targets": [
            {
              "content": "1:4-1:9",
              "removal": "1:4-1:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:15"
        }
      ]
    },
    {
      "name": "scopes/talon/name/name.command",
      "languageId": "talon",
      "facet": "name.command",
      "code": "foo: \"bar\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:10"
        }
      ]
    },
    {
      "name": "scopes/talon/name/name.command2",
      "languageId": "talon",
      "facet": "name.command",
      "code": "not mode: command\n-",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:4-0:8",
              "removal": "0:3-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/talon/name/name.command3",
      "languageId": "talon",
      "facet": "name.command",
      "code": "settings():\n    foo = 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:10",
              "removal": "0:0-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:11"
        },
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:11"
        }
      ]
    },
    {
      "name": "scopes/talon/name/name.iteration.block",
      "languageId": "talon",
      "facet": "name.iteration.block",
      "code": "hello: \"world\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:7-0:14"
            }
          ],
          "domain": "0:7-0:14"
        }
      ]
    },
    {
      "name": "scopes/talon/name/name.iteration.block2",
      "languageId": "talon",
      "facet": "name.iteration.block",
      "code": "settings():\n    foo = 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:11"
            }
          ],
          "domain": "0:0-1:11"
        },
        {
          "targets": [
            {
              "content": "1:4-1:11"
            }
          ],
          "domain": "1:4-1:11"
        }
      ]
    },
    {
      "name": "scopes/talon/name/name.iteration.block3",
      "languageId": "talon",
      "facet": "name.iteration.block",
      "code": "mode: command\n-\n\nhello: \"world\"\n\nsettings():\n    foo = 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13"
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:0-6:11"
            }
          ],
          "domain": "0:0-6:11"
        },
        {
          "targets": [
            {
              "content": "3:0-6:11"
            }
          ],
          "domain": "3:0-6:11"
        },
        {
          "targets": [
            {
              "content": "3:7-3:14"
            }
          ],
          "domain": "3:7-3:14"
        },
        {
          "targets": [
            {
              "content": "6:4-6:11"
            }
          ],
          "domain": "6:4-6:11"
        }
      ]
    },
    {
      "name": "scopes/talon/name/name.iteration.document",
      "languageId": "talon",
      "facet": "name.iteration.document",
      "code": "\nmode: command\n-\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:0"
            }
          ],
          "domain": "0:0-3:0"
        },
        {
          "targets": [
            {
              "content": "1:0-1:13"
            }
          ],
          "domain": "1:0-1:13"
        }
      ]
    },
    {
      "name": "scopes/talon/name/name.variable",
      "languageId": "talon",
      "facet": "name.variable",
      "code": "command:\n    foo = 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:7",
              "removal": "0:0-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:11"
        },
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:11"
        }
      ]
    },
    {
      "name": "scopes/talon/statement.iteration.block",
      "languageId": "talon",
      "facet": "statement.iteration.block",
      "code": "command:\n    value = 123",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:15"
            }
          ],
          "domain": "0:0-1:15"
        },
        {
          "targets": [
            {
              "content": "1:4-1:15"
            }
          ],
          "domain": "1:4-1:15"
        }
      ]
    },
    {
      "name": "scopes/talon/statement.iteration.document",
      "languageId": "talon",
      "facet": "statement.iteration.document",
      "code": "\ncommand:\n    value = 123\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:0"
            }
          ],
          "domain": "0:0-3:0"
        },
        {
          "targets": [
            {
              "content": "2:4-2:15"
            }
          ],
          "domain": "2:4-2:15"
        }
      ]
    },
    {
      "name": "scopes/talon/statement",
      "languageId": "talon",
      "facet": "statement",
      "code": "command: user.do_something()",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:28",
              "removal": "0:0-0:28",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:28"
        },
        {
          "targets": [
            {
              "content": "0:9-0:28",
              "removal": "0:8-0:28",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:9-0:28"
        }
      ]
    },
    {
      "name": "scopes/talon/string.singleLine",
      "languageId": "talon",
      "facet": "string.singleLine",
      "code": "test: \"foo\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:11",
              "removal": "0:5-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:6-0:11"
        }
      ]
    },
    {
      "name": "scopes/talon/string.singleLine2",
      "languageId": "talon",
      "facet": "string.singleLine",
      "code": "test: 'foo'",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:11",
              "removal": "0:5-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:6-0:11"
        }
      ]
    },
    {
      "name": "scopes/talon/textFragment.comment.line",
      "languageId": "talon",
      "facet": "textFragment.comment.line",
      "code": "# Hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/talon/textFragment.string.singleLine",
      "languageId": "talon",
      "facet": "textFragment.string.singleLine",
      "code": "test: \"foo\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:10",
              "removal": "0:7-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:10"
        }
      ]
    },
    {
      "name": "scopes/talon/textFragment.string.singleLine2",
      "languageId": "talon",
      "facet": "textFragment.string.singleLine",
      "code": "test: 'foo'",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:10",
              "removal": "0:7-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:10"
        }
      ]
    },
    {
      "name": "scopes/talon/value/value.assignment",
      "languageId": "talon",
      "facet": "value.assignment",
      "code": "command:\n    foo = 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:11",
              "removal": "0:8-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:11"
        },
        {
          "targets": [
            {
              "content": "1:10-1:11",
              "removal": "1:9-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:11"
        }
      ]
    },
    {
      "name": "scopes/talon/value/value.command",
      "languageId": "talon",
      "facet": "value.command",
      "code": "foo: \"bar\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:10",
              "removal": "0:4-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:10"
        }
      ]
    },
    {
      "name": "scopes/talon/value/value.iteration.block",
      "languageId": "talon",
      "facet": "value.iteration.block",
      "code": "hello: \"world\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:14"
            }
          ],
          "domain": "0:0-0:14"
        },
        {
          "targets": [
            {
              "content": "0:7-0:14"
            }
          ],
          "domain": "0:7-0:14"
        }
      ]
    },
    {
      "name": "scopes/talon/value/value.iteration.block2",
      "languageId": "talon",
      "facet": "value.iteration.block",
      "code": "settings():\n    foo = 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:11"
            }
          ],
          "domain": "0:0-1:11"
        },
        {
          "targets": [
            {
              "content": "1:4-1:11"
            }
          ],
          "domain": "1:4-1:11"
        }
      ]
    },
    {
      "name": "scopes/talon/value/value.iteration.block3",
      "languageId": "talon",
      "facet": "value.iteration.block",
      "code": "mode: command\n-\n\nhello: \"world\"\n\nsettings():\n    foo = 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13"
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:0-6:11"
            }
          ],
          "domain": "0:0-6:11"
        },
        {
          "targets": [
            {
              "content": "3:0-6:11"
            }
          ],
          "domain": "3:0-6:11"
        },
        {
          "targets": [
            {
              "content": "3:7-3:14"
            }
          ],
          "domain": "3:7-3:14"
        },
        {
          "targets": [
            {
              "content": "6:4-6:11"
            }
          ],
          "domain": "6:4-6:11"
        }
      ]
    },
    {
      "name": "scopes/talon/value/value.iteration.document",
      "languageId": "talon",
      "facet": "value.iteration.document",
      "code": "\nmode: command\n-\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:0"
            }
          ],
          "domain": "0:0-3:0"
        },
        {
          "targets": [
            {
              "content": "1:0-1:13"
            }
          ],
          "domain": "1:0-1:13"
        }
      ]
    },
    {
      "name": "scopes/talon/value/value.mapPair.iteration",
      "languageId": "talon",
      "facet": "value.mapPair.iteration",
      "code": "not mode: command\ntag: browser\n-",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:12"
            }
          ],
          "domain": "0:0-1:12"
        },
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/talon/value/value.mapPair.iteration2",
      "languageId": "talon",
      "facet": "value.mapPair.iteration",
      "code": "foo: \"bar\"\nbaz: \"bongo\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-1:12"
            }
          ],
          "domain": "0:0-1:12"
        },
        {
          "targets": [
            {
              "content": "0:5-0:10"
            }
          ],
          "domain": "0:5-0:10"
        },
        {
          "targets": [
            {
              "content": "1:5-1:12"
            }
          ],
          "domain": "1:5-1:12"
        }
      ]
    },
    {
      "name": "scopes/talon/value/value.mapPair.iteration3",
      "languageId": "talon",
      "facet": "value.mapPair.iteration",
      "code": "settings():\n    foo = 0\n    bar = 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:11"
            }
          ],
          "domain": "0:0-2:11"
        },
        {
          "targets": [
            {
              "content": "1:4-2:11"
            }
          ],
          "domain": "1:4-2:11"
        }
      ]
    },
    {
      "name": "scopes/talon/value/value.mapPair",
      "languageId": "talon",
      "facet": "value.mapPair",
      "code": "not mode: command\n-",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:17",
              "removal": "0:9-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/talon/value/value.mapPair2",
      "languageId": "talon",
      "facet": "value.mapPair",
      "code": "settings():\n    foo = 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:11",
              "removal": "0:11-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:11"
        },
        {
          "targets": [
            {
              "content": "1:10-1:11",
              "removal": "1:9-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:11"
        }
      ]
    },
    {
      "name": "scopes/talon/value/value.variable",
      "languageId": "talon",
      "facet": "value.variable",
      "code": "command:\n    foo = 0",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:11",
              "removal": "0:8-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-1:11"
        },
        {
          "targets": [
            {
              "content": "1:10-1:11",
              "removal": "1:9-1:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:11"
        }
      ]
    },
    {
      "name": "scopes/textual/boundedNonWhitespaceSequence.iteration",
      "languageId": "textual",
      "facet": "boundedNonWhitespaceSequence.iteration",
      "code": "aa(bb)cc dd(ee)ff",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:3-0:5"
            }
          ],
          "domain": "0:3-0:5"
        },
        {
          "targets": [
            {
              "content": "0:12-0:14"
            }
          ],
          "domain": "0:12-0:14"
        }
      ]
    },
    {
      "name": "scopes/textual/boundedNonWhitespaceSequence",
      "languageId": "textual",
      "facet": "boundedNonWhitespaceSequence",
      "code": "aa(bb)cc dd(ee)ff",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:8",
              "removal": "0:0-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:8"
        },
        {
          "targets": [
            {
              "content": "0:3-0:5",
              "removal": "0:3-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:3-0:5"
        },
        {
          "targets": [
            {
              "content": "0:9-0:17",
              "removal": "0:8-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:17"
        },
        {
          "targets": [
            {
              "content": "0:12-0:14",
              "removal": "0:12-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:12-0:14"
        }
      ]
    },
    {
      "name": "scopes/textual/boundedNonWhitespaceSequence2",
      "languageId": "textual",
      "facet": "boundedNonWhitespaceSequence",
      "code": "aaa bbb(ccc ddd eee)fff ggg",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:3"
        },
        {
          "targets": [
            {
              "content": "0:4-0:11",
              "removal": "0:4-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:4-0:11"
        },
        {
          "targets": [
            {
              "content": "0:8-0:11",
              "removal": "0:8-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:8-0:11"
        },
        {
          "targets": [
            {
              "content": "0:12-0:15",
              "removal": "0:12-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:12-0:15"
        },
        {
          "targets": [
            {
              "content": "0:16-0:19",
              "removal": "0:15-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:16-0:19"
        },
        {
          "targets": [
            {
              "content": "0:16-0:23",
              "removal": "0:16-0:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:16-0:23"
        },
        {
          "targets": [
            {
              "content": "0:24-0:27",
              "removal": "0:23-0:27",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:24-0:27"
        }
      ]
    },
    {
      "name": "scopes/textual/boundedNonWhitespaceSequence3",
      "languageId": "textual",
      "facet": "boundedNonWhitespaceSequence",
      "code": "(aaa bbb(ccc)ddd eee)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:4",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:4"
        },
        {
          "targets": [
            {
              "content": "0:1-0:4",
              "removal": "0:1-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-0:4"
        },
        {
          "targets": [
            {
              "content": "0:5-0:16",
              "removal": "0:5-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:16"
        },
        {
          "targets": [
            {
              "content": "0:9-0:12",
              "removal": "0:9-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:12"
        },
        {
          "targets": [
            {
              "content": "0:17-0:20",
              "removal": "0:16-0:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:17-0:20"
        },
        {
          "targets": [
            {
              "content": "0:17-0:21",
              "removal": "0:16-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:17-0:21"
        }
      ]
    },
    {
      "name": "scopes/textual/boundedParagraph/boundedParagraph.iteration",
      "languageId": "textual",
      "facet": "boundedParagraph.iteration",
      "code": "{\n    foo\n    bar\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:1"
            }
          ],
          "domain": "0:0-3:1"
        },
        {
          "targets": [
            {
              "content": "1:4-2:7"
            }
          ],
          "domain": "0:1-3:0"
        }
      ]
    },
    {
      "name": "scopes/textual/boundedParagraph/boundedParagraph",
      "languageId": "textual",
      "facet": "boundedParagraph",
      "code": "{\n    foo\n    bar\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:1",
              "removal": "0:0-3:1",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-3:1"
        },
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "1:0-3:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:1-3:0"
        }
      ]
    },
    {
      "name": "scopes/textual/boundedParagraph/boundedParagraph2",
      "languageId": "textual",
      "facet": "boundedParagraph",
      "code": "aaa\nbbb {\n    ccc\n    ddd\n\n    eee\n    fff\n\n    ggg\n    hhh\n} iii\njjj\n\nkkk",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:7",
              "removal": "0:0-5:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-3:7"
        },
        {
          "targets": [
            {
              "content": "2:4-3:7",
              "removal": "2:0-5:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "1:5-3:7"
        },
        {
          "targets": [
            {
              "content": "5:4-6:7",
              "removal": "5:0-8:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "5:0-6:7"
        },
        {
          "targets": [
            {
              "content": "8:4-9:7",
              "removal": "7:0-10:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "8:0-10:0"
        },
        {
          "targets": [
            {
              "content": "8:4-11:3",
              "removal": "8:0-13:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "8:0-11:3"
        },
        {
          "targets": [
            {
              "content": "13:0-13:3",
              "removal": "11:3-13:3",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "13:0-13:3"
        }
      ]
    },
    {
      "name": "scopes/textual/boundedParagraph/boundedParagraph3",
      "languageId": "textual",
      "facet": "boundedParagraph",
      "code": "{\n\n  aaa\n\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:1",
              "removal": "0:0-2:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:1"
        },
        {
          "targets": [
            {
              "content": "2:2-2:5",
              "removal": "2:0-4:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "2:0-2:5"
        },
        {
          "targets": [
            {
              "content": "4:0-4:1",
              "removal": "2:5-4:1",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "4:0-4:1"
        }
      ]
    },
    {
      "name": "scopes/textual/boundedParagraph/boundedParagraph4",
      "languageId": "textual",
      "facet": "boundedParagraph",
      "code": "aaa(bbb) {\n  ccc\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:4-0:7",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:4-0:7"
        },
        {
          "targets": [
            {
              "content": "1:2-1:5",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:10-2:0"
        }
      ]
    },
    {
      "name": "scopes/textual/boundedParagraph/boundedParagraph5",
      "languageId": "textual",
      "facet": "boundedParagraph",
      "code": "{aaa\n\nbbb\n\nccc}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:4",
              "removal": "0:0-2:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:4"
        },
        {
          "targets": [
            {
              "content": "0:1-0:4",
              "removal": "0:1-1:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:1-0:4"
        },
        {
          "targets": [
            {
              "content": "2:0-2:3",
              "removal": "2:0-4:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "2:0-2:3"
        },
        {
          "targets": [
            {
              "content": "4:0-4:3",
              "removal": "3:0-4:3",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "4:0-4:3"
        },
        {
          "targets": [
            {
              "content": "4:0-4:4",
              "removal": "2:3-4:4",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "4:0-4:4"
        }
      ]
    },
    {
      "name": "scopes/textual/boundedParagraph/boundedParagraph6",
      "languageId": "textual",
      "facet": "boundedParagraph",
      "code": "  aaa {\n    bbb\n    ccc\n\n    ddd\n    eee\n  }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-2:7",
              "removal": "0:0-4:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-2:7"
        },
        {
          "targets": [
            {
              "content": "1:4-2:7",
              "removal": "1:0-4:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:7-2:7"
        },
        {
          "targets": [
            {
              "content": "4:4-5:7",
              "removal": "3:0-6:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "4:0-6:2"
        },
        {
          "targets": [
            {
              "content": "4:4-6:3",
              "removal": "2:7-6:3",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "4:0-6:3"
        }
      ]
    },
    {
      "name": "scopes/textual/character",
      "languageId": "textual",
      "facet": "character",
      "code": "aaa",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:1",
              "removal": "0:0-0:1",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:1"
        },
        {
          "targets": [
            {
              "content": "0:1-0:2",
              "removal": "0:1-0:2",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:1-0:2"
        },
        {
          "targets": [
            {
              "content": "0:2-0:3",
              "removal": "0:2-0:3",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:2-0:3"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual.iteration",
      "languageId": "textual",
      "facet": "collectionItem.textual.iteration",
      "code": "(1, 2, 3)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:8"
            }
          ],
          "domain": "0:1-0:8"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual.iteration2",
      "languageId": "textual",
      "facet": "collectionItem.textual.iteration",
      "code": "[1, 2, 3]",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:8"
            }
          ],
          "domain": "0:1-0:8"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual.iteration3",
      "languageId": "textual",
      "facet": "collectionItem.textual.iteration",
      "code": "{1, 2, 3}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:8"
            }
          ],
          "domain": "0:1-0:8"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual.iteration4",
      "languageId": "textual",
      "facet": "collectionItem.textual.iteration",
      "code": "<1, 2, 3>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:8"
            }
          ],
          "domain": "0:1-0:8"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual.iteration5",
      "languageId": "textual",
      "facet": "collectionItem.textual.iteration",
      "code": "( 1, 2, 3 )",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:9"
            }
          ],
          "domain": "0:1-0:10"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual.iteration6",
      "languageId": "textual",
      "facet": "collectionItem.textual.iteration",
      "code": "[\n    1,\n    2,\n    3,\n]",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-3:6"
            }
          ],
          "domain": "0:1-4:0"
        },
        {
          "targets": [
            {
              "content": "1:4-1:6"
            }
          ],
          "domain": "1:0-1:6"
        },
        {
          "targets": [
            {
              "content": "2:4-2:6"
            }
          ],
          "domain": "2:0-2:6"
        },
        {
          "targets": [
            {
              "content": "3:4-3:6"
            }
          ],
          "domain": "3:0-3:6"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual.iteration7",
      "languageId": "textual",
      "facet": "collectionItem.textual.iteration",
      "code": "{\n    a: 1,\n    b: 2,\n    c: 3,\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-3:9"
            }
          ],
          "domain": "0:1-4:0"
        },
        {
          "targets": [
            {
              "content": "1:4-1:9"
            }
          ],
          "domain": "1:0-1:9"
        },
        {
          "targets": [
            {
              "content": "2:4-2:9"
            }
          ],
          "domain": "2:0-2:9"
        },
        {
          "targets": [
            {
              "content": "3:4-3:9"
            }
          ],
          "domain": "3:0-3:9"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual",
      "languageId": "textual",
      "facet": "collectionItem.textual",
      "code": "(1, 2, 3)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:2",
              "removal": "0:1-0:4",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:1-0:2"
        },
        {
          "targets": [
            {
              "content": "0:4-0:5",
              "removal": "0:4-0:7",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:5"
        },
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:5-0:8",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:7-0:8"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual10",
      "languageId": "textual",
      "facet": "collectionItem.textual",
      "code": "aaa, ( bbb, ccc )",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:5",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:3"
        },
        {
          "targets": [
            {
              "content": "0:5-0:17",
              "removal": "0:3-0:17",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:5-0:17"
        },
        {
          "targets": [
            {
              "content": "0:7-0:10",
              "removal": "0:7-0:12",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:7-0:10"
        },
        {
          "targets": [
            {
              "content": "0:12-0:15",
              "removal": "0:10-0:15",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:12-0:15"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual11",
      "languageId": "textual",
      "facet": "collectionItem.textual",
      "code": "[\n    1,\n\n    2,\n]",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:5",
              "removal": "1:4-3:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:5"
        },
        {
          "targets": [
            {
              "content": "3:4-3:5",
              "removal": "1:5-3:5",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:4-3:5"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual12",
      "languageId": "textual",
      "facet": "collectionItem.textual",
      "code": "[\n\n    1\n\n]",
      "scopes": [
        {
          "targets": [
            {
              "content": "2:4-2:5",
              "removal": "2:0-4:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:5"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual13",
      "languageId": "textual",
      "facet": "collectionItem.textual",
      "code": "(aaa)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:4",
              "removal": "0:1-0:4",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:1-0:4"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual14",
      "languageId": "textual",
      "facet": "collectionItem.textual",
      "code": "( aaa )",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:5",
              "removal": "0:2-0:6",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:2-0:5"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual15",
      "languageId": "textual",
      "facet": "collectionItem.textual",
      "code": "{\n    language: {},\n    choices: {\n        disabled: true,\n        items: {\n            colWidth: [2, 10]\n        }\n    },\n    versions: {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:16",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:16"
        },
        {
          "targets": [
            {
              "content": "2:4-7:5",
              "removal": "2:4-8:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-7:5"
        },
        {
          "targets": [
            {
              "content": "3:8-3:22",
              "removal": "3:8-4:8",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:8-3:22"
        },
        {
          "targets": [
            {
              "content": "4:8-6:9",
              "removal": "3:22-6:9",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "4:8-6:9"
        },
        {
          "targets": [
            {
              "content": "5:12-5:29",
              "removal": "5:0-6:0",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "5:12-5:29"
        },
        {
          "targets": [
            {
              "content": "5:23-5:24",
              "removal": "5:23-5:26",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "5:23-5:24"
        },
        {
          "targets": [
            {
              "content": "5:26-5:28",
              "removal": "5:24-5:28",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "5:26-5:28"
        },
        {
          "targets": [
            {
              "content": "8:4-8:16",
              "removal": "7:5-8:16",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "8:4-8:16"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual2",
      "languageId": "textual",
      "facet": "collectionItem.textual",
      "code": "[1, 2, 3]",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:2",
              "removal": "0:1-0:4",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:1-0:2"
        },
        {
          "targets": [
            {
              "content": "0:4-0:5",
              "removal": "0:4-0:7",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:5"
        },
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:5-0:8",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:7-0:8"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual3",
      "languageId": "textual",
      "facet": "collectionItem.textual",
      "code": "{1, 2, 3}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:2",
              "removal": "0:1-0:4",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:1-0:2"
        },
        {
          "targets": [
            {
              "content": "0:4-0:5",
              "removal": "0:4-0:7",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:5"
        },
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:5-0:8",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:7-0:8"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual4",
      "languageId": "textual",
      "facet": "collectionItem.textual",
      "code": "<1, 2, 3>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:2",
              "removal": "0:1-0:4",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:1-0:2"
        },
        {
          "targets": [
            {
              "content": "0:4-0:5",
              "removal": "0:4-0:7",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:5"
        },
        {
          "targets": [
            {
              "content": "0:7-0:8",
              "removal": "0:5-0:8",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:7-0:8"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual5",
      "languageId": "textual",
      "facet": "collectionItem.textual",
      "code": "( 1, 2, 3 )",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:3",
              "removal": "0:2-0:5",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:2-0:3"
        },
        {
          "targets": [
            {
              "content": "0:5-0:6",
              "removal": "0:5-0:8",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:5-0:6"
        },
        {
          "targets": [
            {
              "content": "0:8-0:9",
              "removal": "0:6-0:9",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:8-0:9"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual6",
      "languageId": "textual",
      "facet": "collectionItem.textual",
      "code": "[\n    1,\n    2,\n    3,\n]",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:5",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:5"
        },
        {
          "targets": [
            {
              "content": "2:4-2:5",
              "removal": "2:4-3:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:5"
        },
        {
          "targets": [
            {
              "content": "3:4-3:5",
              "removal": "2:5-3:5",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:4-3:5"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual7",
      "languageId": "textual",
      "facet": "collectionItem.textual",
      "code": "{\n    a: 1,\n    b: 2,\n    c: 3,\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:4-1:8",
              "removal": "1:4-2:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "1:4-1:8"
        },
        {
          "targets": [
            {
              "content": "2:4-2:8",
              "removal": "2:4-3:4",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "2:4-2:8"
        },
        {
          "targets": [
            {
              "content": "3:4-3:8",
              "removal": "2:8-3:8",
              "insertionDelimiter": ",\\n"
            }
          ],
          "domain": "3:4-3:8"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual8",
      "languageId": "textual",
      "facet": "collectionItem.textual",
      "code": "[1, \"2, 3\"]",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:2",
              "removal": "0:1-0:4",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:1-0:2"
        },
        {
          "targets": [
            {
              "content": "0:4-0:10",
              "removal": "0:2-0:10",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:4-0:10"
        }
      ]
    },
    {
      "name": "scopes/textual/collectionItem/collectionItem.textual9",
      "languageId": "textual",
      "facet": "collectionItem.textual",
      "code": "aaa, bbb",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:5",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:0-0:3"
        },
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:3-0:8",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:5-0:8"
        }
      ]
    },
    {
      "name": "scopes/textual/document",
      "languageId": "textual",
      "facet": "document",
      "code": "\n  aaa\n\nbbb\n\nccc\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-6:0",
              "removal": "0:0-6:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-6:0"
        }
      ]
    },
    {
      "name": "scopes/textual/identifier",
      "languageId": "textual",
      "facet": "identifier",
      "code": "(foo)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:4",
              "removal": "0:1-0:4",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-0:4"
        }
      ]
    },
    {
      "name": "scopes/textual/interior.surroundingPair",
      "languageId": "textual",
      "facet": "interior.surroundingPair",
      "code": "( text )",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:6",
              "removal": "0:1-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:8"
        }
      ]
    },
    {
      "name": "scopes/textual/line",
      "languageId": "textual",
      "facet": "line",
      "code": "aaa",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:3",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:3"
        }
      ]
    },
    {
      "name": "scopes/textual/line2",
      "languageId": "textual",
      "facet": "line",
      "code": "\naaa\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:0",
              "removal": "0:0-1:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:0"
        },
        {
          "targets": [
            {
              "content": "1:0-1:3",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:0-1:3"
        },
        {
          "targets": [
            {
              "content": "2:0-2:0",
              "removal": "1:3-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/textual/nonWhitespaceSequence",
      "languageId": "textual",
      "facet": "nonWhitespaceSequence",
      "code": " b.c(?!å_*/\\)|d4",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:16",
              "removal": "0:0-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-0:16"
        }
      ]
    },
    {
      "name": "scopes/textual/paragraph",
      "languageId": "textual",
      "facet": "paragraph",
      "code": "\naaa\nbbb\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:0-2:3",
              "removal": "0:0-3:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "1:0-2:3"
        }
      ]
    },
    {
      "name": "scopes/textual/sentence",
      "languageId": "textual",
      "facet": "sentence",
      "code": "This is a sentence.",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:19",
              "removal": "0:0-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:19"
        }
      ]
    },
    {
      "name": "scopes/textual/surroundingPair/surroundingPair.iteration",
      "languageId": "textual",
      "facet": "surroundingPair.iteration",
      "code": "\n( )\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:0-1:3"
            }
          ],
          "domain": "1:0-1:3"
        }
      ]
    },
    {
      "name": "scopes/textual/surroundingPair/surroundingPair.iteration2",
      "languageId": "textual",
      "facet": "surroundingPair.iteration",
      "code": "\nhello\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:0-1:5"
            }
          ],
          "domain": "1:0-1:5"
        }
      ]
    },
    {
      "name": "scopes/textual/surroundingPair/surroundingPair",
      "languageId": "textual",
      "facet": "surroundingPair",
      "code": "( )",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:3"
        }
      ]
    },
    {
      "name": "scopes/textual/surroundingPair/surroundingPair2",
      "languageId": "textual",
      "facet": "surroundingPair",
      "code": "\"\n\"hello\"\n\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:0-1:7",
              "removal": "1:0-1:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:7"
        }
      ]
    },
    {
      "name": "scopes/textual/surroundingPair/surroundingPair3",
      "languageId": "textual",
      "facet": "surroundingPair",
      "code": "(()) ()",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:4",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:4"
        },
        {
          "targets": [
            {
              "content": "0:1-0:3",
              "removal": "0:1-0:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:1-0:3"
        },
        {
          "targets": [
            {
              "content": "0:5-0:7",
              "removal": "0:4-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:5-0:7"
        }
      ]
    },
    {
      "name": "scopes/textual/surroundingPair/surroundingPair4",
      "languageId": "textual",
      "facet": "surroundingPair",
      "code": "(a < b)\n(c > d)",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:7",
              "removal": "0:0-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        },
        {
          "targets": [
            {
              "content": "1:0-1:7",
              "removal": "1:0-1:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:0-1:7"
        }
      ]
    },
    {
      "name": "scopes/textual/surroundingPair/surroundingPair5",
      "languageId": "textual",
      "facet": "surroundingPair",
      "code": "(  [  )  ]",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:7",
              "removal": "0:0-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:7"
        }
      ]
    },
    {
      "name": "scopes/textual/surroundingPair/surroundingPair6",
      "languageId": "textual",
      "facet": "surroundingPair",
      "code": "([)]",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:3"
        }
      ]
    },
    {
      "name": "scopes/textual/token",
      "languageId": "textual",
      "facet": "token",
      "code": "  aaa  ",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:2-0:5",
              "removal": "0:0-0:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:2-0:5"
        }
      ]
    },
    {
      "name": "scopes/textual/url",
      "languageId": "textual",
      "facet": "url",
      "code": "https://www.cursorless.org",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:26",
              "removal": "0:0-0:26",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:26"
        }
      ]
    },
    {
      "name": "scopes/textual/word",
      "languageId": "textual",
      "facet": "word",
      "code": "aaa_bbb",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:4",
              "insertionDelimiter": "_"
            }
          ],
          "domain": "0:0-0:3"
        },
        {
          "targets": [
            {
              "content": "0:4-0:7",
              "removal": "0:3-0:7",
              "insertionDelimiter": "_"
            }
          ],
          "domain": "0:4-0:7"
        }
      ]
    },
    {
      "name": "scopes/textual/word2",
      "languageId": "textual",
      "facet": "word",
      "code": "aaaBbb",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-0:3",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:0-0:3"
        },
        {
          "targets": [
            {
              "content": "0:3-0:6",
              "removal": "0:3-0:6",
              "insertionDelimiter": ""
            }
          ],
          "domain": "0:3-0:6"
        }
      ]
    },
    {
      "name": "scopes/typescript/type.cast",
      "languageId": "typescript",
      "facet": "type.cast",
      "code": "<Aaa>bbb",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:4",
              "removal": "0:0-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:8"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/argument.catch",
      "languageId": "typescript.core",
      "facet": "argument.catch",
      "code": "try {}\ncatch(error: unknown) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:6-1:20",
              "removal": "1:6-1:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:6-1:20"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/class",
      "languageId": "typescript.core",
      "facet": "class",
      "code": "abstract class MyClass { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:26",
              "removal": "0:0-0:26",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:26"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/class2",
      "languageId": "typescript.core",
      "facet": "class",
      "code": "export default abstract class MyClass { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:41",
              "removal": "0:0-0:41",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:41"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/class3",
      "languageId": "typescript.core",
      "facet": "class",
      "code": "export abstract class MyClass { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:33",
              "removal": "0:0-0:33",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:33"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/disqualifyDelimiter",
      "languageId": "typescript.core",
      "facet": "disqualifyDelimiter",
      "code": "Promise<() => number>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-0:13"
            }
          ]
        }
      ]
    },
    {
      "name": "scopes/typescript.core/interior.enum",
      "languageId": "typescript.core",
      "facet": "interior.enum",
      "code": "enum Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:11",
              "removal": "0:10-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        },
        {
          "targets": [
            {
              "content": "0:10-0:11",
              "removal": "0:10-0:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:12"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/interior.interface",
      "languageId": "typescript.core",
      "facet": "interior.interface",
      "code": "interface Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:15-0:16",
              "removal": "0:15-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16",
              "removal": "0:15-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:14-0:17"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/name/name.argument.formal",
      "languageId": "typescript.core",
      "facet": "name.argument.formal",
      "code": "function myFunk(value?: number = 2) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:15",
              "removal": "0:9-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:39"
        },
        {
          "targets": [
            {
              "content": "0:16-0:21",
              "removal": "0:16-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:16-0:34"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/name/name.enum",
      "languageId": "typescript.core",
      "facet": "name.enum",
      "code": "enum Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/name/name.field.class",
      "languageId": "typescript.core",
      "facet": "name.field.class",
      "code": "class Aaa {\n    bbb!: string = undefined;\n    ccc: string = undefined;\n    ddd = undefined;\n    private eee!: string = undefined;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:9",
              "removal": "0:6-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-5:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-1:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:29"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "2:0-2:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:28"
        },
        {
          "targets": [
            {
              "content": "3:4-3:7",
              "removal": "3:4-3:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "3:4-3:20"
        },
        {
          "targets": [
            {
              "content": "4:12-4:15",
              "removal": "4:12-4:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:4-4:37"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/name/name.field.enum",
      "languageId": "typescript.core",
      "facet": "name.field.enum",
      "code": "enum Foo {\n    bar = \"-\",\n    baz = 0,\n    bongo\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:8",
              "removal": "0:5-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-4:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:4-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:13"
        },
        {
          "targets": [
            {
              "content": "2:4-2:7",
              "removal": "2:4-2:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:11"
        },
        {
          "targets": [
            {
              "content": "3:4-3:9",
              "removal": "3:0-4:0",
              "insertionDelimiter": " "
            }
          ],
          "domain": "3:4-3:9"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/name/name.field.interface",
      "languageId": "typescript.core",
      "facet": "name.field.interface",
      "code": "interface Foo {\n    bar: number;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:13",
              "removal": "0:10-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:7",
              "removal": "1:0-1:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:15"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/name/name.interface",
      "languageId": "typescript.core",
      "facet": "name.interface",
      "code": "interface Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:13",
              "removal": "0:10-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:16"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/name/name.iteration.class",
      "languageId": "typescript.core",
      "facet": "name.iteration.class",
      "code": "interface Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/name/name.iteration.enum",
      "languageId": "typescript.core",
      "facet": "name.iteration.enum",
      "code": "enum Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12"
            }
          ],
          "domain": "0:0-0:12"
        },
        {
          "targets": [
            {
              "content": "0:10-0:11"
            }
          ],
          "domain": "0:10-0:11"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/name/name.iteration.interface",
      "languageId": "typescript.core",
      "facet": "name.iteration.interface",
      "code": "interface Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/name/name.variable",
      "languageId": "typescript.core",
      "facet": "name.variable",
      "code": "export type Aaa = Bbb<Ccc>;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:12-0:15",
              "removal": "0:12-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:27"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/namedFunction.constructor",
      "languageId": "typescript.core",
      "facet": "namedFunction.constructor",
      "code": "class MyClass {\n  constructor(value: string)\n  constructor(value: number);\n  constructor(value: string | number) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:2-1:28",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "1:2-1:28"
        },
        {
          "targets": [
            {
              "content": "2:2-2:29",
              "removal": "2:0-3:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "2:2-2:29"
        },
        {
          "targets": [
            {
              "content": "3:2-3:40",
              "removal": "3:0-4:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "3:2-3:40"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/namedFunction.method",
      "languageId": "typescript.core",
      "facet": "namedFunction.method",
      "code": "class MyClass {\n  foo(value: string)\n  foo(value: number);\n  foo(value: string | number) {}\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:2-1:20",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "1:2-1:20"
        },
        {
          "targets": [
            {
              "content": "2:2-2:21",
              "removal": "2:0-3:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "2:2-2:21"
        },
        {
          "targets": [
            {
              "content": "3:2-3:32",
              "removal": "3:0-4:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "3:2-3:32"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/namedFunction",
      "languageId": "typescript.core",
      "facet": "namedFunction",
      "code": "function foo(value: string)\nfunction foo(value: number);\nfunction foo(value: string | number) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:27",
              "removal": "0:0-1:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "0:0-0:27"
        },
        {
          "targets": [
            {
              "content": "1:0-1:28",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "1:0-1:28"
        },
        {
          "targets": [
            {
              "content": "2:0-2:39",
              "removal": "1:28-2:39",
              "insertionDelimiter": "\\n\\n"
            }
          ],
          "domain": "2:0-2:39"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/statement/statement.enum",
      "languageId": "typescript.core",
      "facet": "statement.enum",
      "code": "enum Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:11",
              "removal": "0:0-0:11",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:11"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/statement/statement.field.interface",
      "languageId": "typescript.core",
      "facet": "statement.field.interface",
      "code": "interface Foo {\n    bar: number;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:16",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-1:16"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/statement/statement.interface",
      "languageId": "typescript.core",
      "facet": "statement.interface",
      "code": "interface Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16",
              "removal": "0:0-0:16",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:16"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/statement/statement.iteration.interface",
      "languageId": "typescript.core",
      "facet": "statement.iteration.interface",
      "code": "interface Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/statement/statement",
      "languageId": "typescript.core",
      "facet": "statement",
      "code": "interface Aaa {\n    bbb(): void;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:4-1:16",
              "removal": "1:0-2:0",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:4-1:16"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.alias",
      "languageId": "typescript.core",
      "facet": "type.alias",
      "code": "type Aaa = Bbb;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:15",
              "removal": "0:0-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:15"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.alias2",
      "languageId": "typescript.core",
      "facet": "type.alias",
      "code": "export type Aaa = Bbb;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:22",
              "removal": "0:0-0:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:22"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.argument.catch",
      "languageId": "typescript.core",
      "facet": "type.argument.catch",
      "code": "try {}\ncatch(error: unknown) {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:13-1:20",
              "removal": "1:11-1:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:6-1:20"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.argument.formal.constructor.iteration",
      "languageId": "typescript.core",
      "facet": "type.argument.formal.constructor.iteration",
      "code": "class MyClass {\n  constructor(value: number) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:14-1:27"
            }
          ],
          "domain": "1:14-1:27"
        },
        {
          "targets": [
            {
              "content": "1:30-1:31"
            }
          ],
          "domain": "1:30-1:31"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.argument.formal.constructor",
      "languageId": "typescript.core",
      "facet": "type.argument.formal.constructor",
      "code": "class MyClass {\n  constructor(value: number) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:21-1:27",
              "removal": "1:19-1:27",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:14-1:27"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.argument.formal.iteration",
      "languageId": "typescript.core",
      "facet": "type.argument.formal.iteration",
      "code": "function myFunk(value: number) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:34"
            }
          ],
          "domain": "0:0-0:34"
        },
        {
          "targets": [
            {
              "content": "0:16-0:29"
            }
          ],
          "domain": "0:16-0:29"
        },
        {
          "targets": [
            {
              "content": "0:32-0:33"
            }
          ],
          "domain": "0:32-0:33"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.argument.formal.method.iteration",
      "languageId": "typescript.core",
      "facet": "type.argument.formal.method.iteration",
      "code": "class MyClass {\n  myFunk(value: number) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:15-2:0"
            }
          ],
          "domain": "0:15-2:0"
        },
        {
          "targets": [
            {
              "content": "1:9-1:22"
            }
          ],
          "domain": "1:9-1:22"
        },
        {
          "targets": [
            {
              "content": "1:25-1:26"
            }
          ],
          "domain": "1:25-1:26"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.argument.formal.method",
      "languageId": "typescript.core",
      "facet": "type.argument.formal.method",
      "code": "class MyClass {\n  myFunk(value: number) { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:16-1:22",
              "removal": "1:14-1:22",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:9-1:22"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.argument.formal",
      "languageId": "typescript.core",
      "facet": "type.argument.formal",
      "code": "function myFunk(value: number) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:23-0:29",
              "removal": "0:21-0:29",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:16-0:29"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.argument.formal2",
      "languageId": "typescript.core",
      "facet": "type.argument.formal",
      "code": "function myFunk(value: number = 2) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:23-0:29",
              "removal": "0:21-0:29",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:16-0:33"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.argument.formal3",
      "languageId": "typescript.core",
      "facet": "type.argument.formal",
      "code": "function myFunk(value?: number) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:24-0:30",
              "removal": "0:22-0:30",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:16-0:30"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.argument.formal4",
      "languageId": "typescript.core",
      "facet": "type.argument.formal",
      "code": "function myFunkclose(value?: number = 2) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:29-0:35",
              "removal": "0:27-0:35",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:21-0:39"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.cast",
      "languageId": "typescript.core",
      "facet": "type.cast",
      "code": "foo as Bar",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:10",
              "removal": "0:3-0:10",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:10"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.cast2",
      "languageId": "typescript.core",
      "facet": "type.cast",
      "code": "foo as const",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:12",
              "removal": "0:3-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.class",
      "languageId": "typescript.core",
      "facet": "type.class",
      "code": "class Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.class2",
      "languageId": "typescript.core",
      "facet": "type.class",
      "code": "abstract class Foo {}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:21",
              "removal": "0:0-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:21"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.enum",
      "languageId": "typescript.core",
      "facet": "type.enum",
      "code": "enum Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12",
              "removal": "0:0-0:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:12"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.enum2",
      "languageId": "typescript.core",
      "facet": "type.enum",
      "code": "const enum Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:18",
              "removal": "0:0-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:18"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.field.class",
      "languageId": "typescript.core",
      "facet": "type.field.class",
      "code": "class Aaa {\n    bbb!: string = undefined;\n    ccc: string = undefined;\n    private eee!: string = undefined;\n    eee: string;\n    fff!: string;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-6:1",
              "removal": "0:0-6:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-6:1"
        },
        {
          "targets": [
            {
              "content": "1:10-1:16",
              "removal": "1:7-1:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:29"
        },
        {
          "targets": [
            {
              "content": "2:9-2:15",
              "removal": "2:7-2:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:28"
        },
        {
          "targets": [
            {
              "content": "3:18-3:24",
              "removal": "3:15-3:24",
              "insertionDelimiter": " "
            }
          ],
          "domain": "3:4-3:37"
        },
        {
          "targets": [
            {
              "content": "4:9-4:15",
              "removal": "4:7-4:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:4-4:16"
        },
        {
          "targets": [
            {
              "content": "5:10-5:16",
              "removal": "5:7-5:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "5:4-5:17"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.field.interface",
      "languageId": "typescript.core",
      "facet": "type.field.interface",
      "code": "interface Foo {\n    bar: number;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1",
              "removal": "0:0-2:1",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "1:9-1:15",
              "removal": "1:7-1:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:16"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.interface",
      "languageId": "typescript.core",
      "facet": "type.interface",
      "code": "interface Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17",
              "removal": "0:0-0:17",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:17"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.iteration.block",
      "languageId": "typescript.core",
      "facet": "type.iteration.block",
      "code": "class Foo {\n    bar() { }\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:1"
            }
          ],
          "domain": "0:0-2:1"
        },
        {
          "targets": [
            {
              "content": "0:11-2:0"
            }
          ],
          "domain": "0:11-2:0"
        },
        {
          "targets": [
            {
              "content": "1:11-1:12"
            }
          ],
          "domain": "1:11-1:12"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.iteration.block2",
      "languageId": "typescript.core",
      "facet": "type.iteration.block",
      "code": "function foo() { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:18"
            }
          ],
          "domain": "0:0-0:18"
        },
        {
          "targets": [
            {
              "content": "0:16-0:17"
            }
          ],
          "domain": "0:16-0:17"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.iteration.block3",
      "languageId": "typescript.core",
      "facet": "type.iteration.block",
      "code": "if (true) { }\nelse if (false) { }\nelse { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:8"
            }
          ],
          "domain": "0:0-2:8"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        },
        {
          "targets": [
            {
              "content": "1:17-1:18"
            }
          ],
          "domain": "1:17-1:18"
        },
        {
          "targets": [
            {
              "content": "2:6-2:7"
            }
          ],
          "domain": "2:6-2:7"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.iteration.block4",
      "languageId": "typescript.core",
      "facet": "type.iteration.block",
      "code": "while (true) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16"
            }
          ],
          "domain": "0:0-0:16"
        },
        {
          "targets": [
            {
              "content": "0:14-0:15"
            }
          ],
          "domain": "0:14-0:15"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.iteration.class",
      "languageId": "typescript.core",
      "facet": "type.iteration.class",
      "code": "class Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13"
            }
          ],
          "domain": "0:0-0:13"
        },
        {
          "targets": [
            {
              "content": "0:11-0:12"
            }
          ],
          "domain": "0:11-0:12"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.iteration.document",
      "languageId": "typescript.core",
      "facet": "type.iteration.document",
      "code": "\nlet foo;\n",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:0"
            }
          ],
          "domain": "0:0-2:0"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.iteration.interface",
      "languageId": "typescript.core",
      "facet": "type.iteration.interface",
      "code": "interface Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.return",
      "languageId": "typescript.core",
      "facet": "type.return",
      "code": "function myFunk(): number {\n  return 0;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:19-0:25",
              "removal": "0:17-0:25",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:1"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.typeArgument.iteration",
      "languageId": "typescript.core",
      "facet": "type.typeArgument.iteration",
      "code": "let value: Map<string, number>;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:31"
            }
          ],
          "domain": "0:0-0:31"
        },
        {
          "targets": [
            {
              "content": "0:15-0:29"
            }
          ],
          "domain": "0:15-0:29"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.typeArgument",
      "languageId": "typescript.core",
      "facet": "type.typeArgument",
      "code": "let value: Map<string, number>;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-0:30",
              "removal": "0:9-0:30",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:31"
        },
        {
          "targets": [
            {
              "content": "0:15-0:21",
              "removal": "0:15-0:23",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:15-0:21"
        },
        {
          "targets": [
            {
              "content": "0:23-0:29",
              "removal": "0:21-0:29",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:23-0:29"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.typeArgument2",
      "languageId": "typescript.core",
      "facet": "type.typeArgument",
      "code": "useState<string>()",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:15",
              "removal": "0:9-0:15",
              "insertionDelimiter": ", "
            }
          ],
          "domain": "0:9-0:15"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/type/type.variable",
      "languageId": "typescript.core",
      "facet": "type.variable",
      "code": "const value: number = 0;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:13-0:19",
              "removal": "0:11-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:24"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/value/value.argument.formal",
      "languageId": "typescript.core",
      "facet": "value.argument.formal",
      "code": "function myFunk(value?: number = 2) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:33-0:34",
              "removal": "0:30-0:34",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:16-0:34"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/value/value.argument.formal2",
      "languageId": "typescript.core",
      "facet": "value.argument.formal",
      "code": "function myFunk(value: number = 2) { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:32-0:33",
              "removal": "0:29-0:33",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:16-0:33"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/value/value.field.class",
      "languageId": "typescript.core",
      "facet": "value.field.class",
      "code": "class Aaa {\n    bbb!: string = undefined;\n    ccc: string = undefined;\n    ddd = undefined;\n    private eee!: string = undefined;\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:19-1:28",
              "removal": "1:16-1:28",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:29"
        },
        {
          "targets": [
            {
              "content": "2:18-2:27",
              "removal": "2:15-2:27",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:28"
        },
        {
          "targets": [
            {
              "content": "3:10-3:19",
              "removal": "3:7-3:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "3:4-3:20"
        },
        {
          "targets": [
            {
              "content": "4:27-4:36",
              "removal": "4:24-4:36",
              "insertionDelimiter": " "
            }
          ],
          "domain": "4:4-4:37"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/value/value.field.enum",
      "languageId": "typescript.core",
      "facet": "value.field.enum",
      "code": "enum Foo {\n    bar = \"-\",\n    baz = 0,\n    bongo\n}",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:10-1:13",
              "removal": "1:7-1:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:4-1:13"
        },
        {
          "targets": [
            {
              "content": "2:10-2:11",
              "removal": "2:7-2:11",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:4-2:11"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/value/value.iteration.class",
      "languageId": "typescript.core",
      "facet": "value.iteration.class",
      "code": "interface Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:17"
            }
          ],
          "domain": "0:0-0:17"
        },
        {
          "targets": [
            {
              "content": "0:15-0:16"
            }
          ],
          "domain": "0:15-0:16"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/value/value.iteration.enum",
      "languageId": "typescript.core",
      "facet": "value.iteration.enum",
      "code": "enum Foo { }",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:12"
            }
          ],
          "domain": "0:0-0:12"
        },
        {
          "targets": [
            {
              "content": "0:10-0:11"
            }
          ],
          "domain": "0:10-0:11"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/value/value.typeAlias",
      "languageId": "typescript.core",
      "facet": "value.typeAlias",
      "code": "type Aaa = Bbb;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:11-0:14",
              "removal": "0:10-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:15"
        }
      ]
    },
    {
      "name": "scopes/typescript.core/value/value.typeAlias2",
      "languageId": "typescript.core",
      "facet": "value.typeAlias",
      "code": "export type Aaa = Bbb;",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:18-0:21",
              "removal": "0:17-0:21",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:22"
        }
      ]
    },
    {
      "name": "scopes/xml/attribute",
      "languageId": "xml",
      "facet": "attribute",
      "code": "<name id=\"name\">Me</name>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:15",
              "removal": "0:5-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:6-0:15"
        }
      ]
    },
    {
      "name": "scopes/xml/comment.block",
      "languageId": "xml",
      "facet": "comment.block",
      "code": "<!--\n    Hello world\n-->",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:3",
              "removal": "0:0-2:3",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-2:3"
        }
      ]
    },
    {
      "name": "scopes/xml/element",
      "languageId": "xml",
      "facet": "element",
      "code": "<name id=\"name\">Me</name>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:25",
              "removal": "0:0-0:25",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:25"
        }
      ]
    },
    {
      "name": "scopes/xml/endTag",
      "languageId": "xml",
      "facet": "endTag",
      "code": "<name id=\"name\">Me</name>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:18-0:25",
              "removal": "0:18-0:25",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:25"
        }
      ]
    },
    {
      "name": "scopes/xml/interior.element",
      "languageId": "xml",
      "facet": "interior.element",
      "code": "<name>Me</name>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:1-0:5",
              "removal": "0:1-0:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:6"
        },
        {
          "targets": [
            {
              "content": "0:6-0:8",
              "removal": "0:6-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:15"
        },
        {
          "targets": [
            {
              "content": "0:10-0:14",
              "removal": "0:10-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:8-0:15"
        }
      ]
    },
    {
      "name": "scopes/xml/key.attribute",
      "languageId": "xml",
      "facet": "key.attribute",
      "code": "<name id=\"name\">Me</name>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:8",
              "removal": "0:6-0:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:6-0:15"
        }
      ]
    },
    {
      "name": "scopes/xml/startTag",
      "languageId": "xml",
      "facet": "startTag",
      "code": "<name id=\"name\">Me</name>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16",
              "removal": "0:0-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:25"
        }
      ]
    },
    {
      "name": "scopes/xml/string.singleLine",
      "languageId": "xml",
      "facet": "string.singleLine",
      "code": "<name id=\"name\">Me</name>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:15",
              "removal": "0:9-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:9-0:15"
        }
      ]
    },
    {
      "name": "scopes/xml/tags",
      "languageId": "xml",
      "facet": "tags",
      "code": "<name id=\"name\">Me</name>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:16",
              "removal": "0:0-0:16",
              "insertionDelimiter": " "
            },
            {
              "content": "0:18-0:25",
              "removal": "0:18-0:25",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:25"
        }
      ]
    },
    {
      "name": "scopes/xml/textFragment.comment.block",
      "languageId": "xml",
      "facet": "textFragment.comment.block",
      "code": "<!--\n    Hello world\n-->",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:3",
              "removal": "0:0-2:3",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:3"
        }
      ]
    },
    {
      "name": "scopes/xml/textFragment.element",
      "languageId": "xml",
      "facet": "textFragment.element",
      "code": "<name>Me</name>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:6-0:8",
              "removal": "0:6-0:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:6-0:8"
        }
      ]
    },
    {
      "name": "scopes/xml/textFragment.string.singleLine",
      "languageId": "xml",
      "facet": "textFragment.string.singleLine",
      "code": "<name id=\"name\"></name>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:10-0:14",
              "removal": "0:10-0:14",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:10-0:14"
        }
      ]
    },
    {
      "name": "scopes/xml/value.attribute",
      "languageId": "xml",
      "facet": "value.attribute",
      "code": "<name id=\"name\">Me</name>",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:9-0:15",
              "removal": "0:8-0:15",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:6-0:15"
        }
      ]
    },
    {
      "name": "scopes/yaml/collectionItem.unenclosed.iteration",
      "languageId": "yaml",
      "facet": "collectionItem.unenclosed.iteration",
      "code": "items:\n  - 1\n  - 2\n  - 3",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:5"
            }
          ],
          "domain": "0:0-3:5"
        },
        {
          "targets": [
            {
              "content": "1:2-3:5"
            }
          ],
          "domain": "1:2-3:5"
        }
      ]
    },
    {
      "name": "scopes/yaml/collectionItem.unenclosed",
      "languageId": "yaml",
      "facet": "collectionItem.unenclosed",
      "code": "items:\n  - 1\n  - 2\n  - 3",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-3:5",
              "removal": "0:0-3:5",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-3:5"
        },
        {
          "targets": [
            {
              "content": "1:4-1:5",
              "removal": "1:2-2:2",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "1:2-1:5"
        },
        {
          "targets": [
            {
              "content": "2:4-2:5",
              "removal": "2:2-3:2",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "2:2-2:5"
        },
        {
          "targets": [
            {
              "content": "3:4-3:5",
              "removal": "2:5-3:5",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "3:2-3:5"
        }
      ]
    },
    {
      "name": "scopes/yaml/comment.line",
      "languageId": "yaml",
      "facet": "comment.line",
      "code": "# Hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": "\\n"
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/yaml/disqualifyDelimiter",
      "languageId": "yaml",
      "facet": "disqualifyDelimiter",
      "code": "foo: >\nfoo: >-\nfoo: >+",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:5-0:6"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "1:5-1:7"
            }
          ]
        },
        {
          "targets": [
            {
              "content": "2:5-2:7"
            }
          ]
        }
      ]
    },
    {
      "name": "scopes/yaml/key.mapPair.iteration",
      "languageId": "yaml",
      "facet": "key.mapPair.iteration",
      "code": "obj:\n  name: \"foo\"\n  value: 123",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:12"
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:2-2:12"
            }
          ],
          "domain": "1:2-2:12"
        }
      ]
    },
    {
      "name": "scopes/yaml/key.mapPair",
      "languageId": "yaml",
      "facet": "key.mapPair",
      "code": "obj:\n  name: \"foo\"\n  value: 123",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:3",
              "removal": "0:0-1:2",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:2-1:6",
              "removal": "1:2-1:8",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:2-1:13"
        },
        {
          "targets": [
            {
              "content": "2:2-2:7",
              "removal": "2:2-2:9",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:2-2:12"
        }
      ]
    },
    {
      "name": "scopes/yaml/list",
      "languageId": "yaml",
      "facet": "list",
      "code": "items: [1, 2, 3]",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:16",
              "removal": "0:6-0:16",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:16"
        }
      ]
    },
    {
      "name": "scopes/yaml/list2",
      "languageId": "yaml",
      "facet": "list",
      "code": "items:\n  - 1\n  - 2\n  - 3",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:2-3:5",
              "removal": "0:6-3:5",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:2-3:5"
        }
      ]
    },
    {
      "name": "scopes/yaml/map",
      "languageId": "yaml",
      "facet": "map",
      "code": "obj:\n  name: \"foo\"\n  value: 123",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:12",
              "removal": "0:0-2:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:2-2:12",
              "removal": "0:4-2:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:2-2:12"
        }
      ]
    },
    {
      "name": "scopes/yaml/string.multiLine",
      "languageId": "yaml",
      "facet": "string.multiLine",
      "code": "value: |\n  Hello\n  world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-2:7",
              "removal": "0:6-2:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-2:7"
        }
      ]
    },
    {
      "name": "scopes/yaml/string.singleLine",
      "languageId": "yaml",
      "facet": "string.singleLine",
      "code": "value: \"hello world\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:20",
              "removal": "0:6-0:20",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:20"
        }
      ]
    },
    {
      "name": "scopes/yaml/string.singleLine2",
      "languageId": "yaml",
      "facet": "string.singleLine",
      "code": "value: hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:18",
              "removal": "0:6-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:18"
        }
      ]
    },
    {
      "name": "scopes/yaml/textFragment.comment.line",
      "languageId": "yaml",
      "facet": "textFragment.comment.line",
      "code": "# Hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-0:13",
              "removal": "0:0-0:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-0:13"
        }
      ]
    },
    {
      "name": "scopes/yaml/textFragment.string.multiLine",
      "languageId": "yaml",
      "facet": "textFragment.string.multiLine",
      "code": "value: |\n  Hello\n  world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-2:7",
              "removal": "0:6-2:7",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-2:7"
        }
      ]
    },
    {
      "name": "scopes/yaml/textFragment.string.singleLine",
      "languageId": "yaml",
      "facet": "textFragment.string.singleLine",
      "code": "value: \"hello world\"",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:8-0:19",
              "removal": "0:8-0:19",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:8-0:19"
        }
      ]
    },
    {
      "name": "scopes/yaml/textFragment.string.singleLine2",
      "languageId": "yaml",
      "facet": "textFragment.string.singleLine",
      "code": "value: hello world",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:7-0:18",
              "removal": "0:6-0:18",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:7-0:18"
        }
      ]
    },
    {
      "name": "scopes/yaml/value.mapPair.iteration",
      "languageId": "yaml",
      "facet": "value.mapPair.iteration",
      "code": "obj:\n  name: \"foo\"\n  value: 123",
      "scopes": [
        {
          "targets": [
            {
              "content": "0:0-2:12"
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:2-2:12"
            }
          ],
          "domain": "1:2-2:12"
        }
      ]
    },
    {
      "name": "scopes/yaml/value.mapPair",
      "languageId": "yaml",
      "facet": "value.mapPair",
      "code": "obj:\n  name: \"foo\"\n  value: 123",
      "scopes": [
        {
          "targets": [
            {
              "content": "1:2-2:12",
              "removal": "0:3-2:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "0:0-2:12"
        },
        {
          "targets": [
            {
              "content": "1:8-1:13",
              "removal": "1:6-1:13",
              "insertionDelimiter": " "
            }
          ],
          "domain": "1:2-1:13"
        },
        {
          "targets": [
            {
              "content": "2:9-2:12",
              "removal": "2:7-2:12",
              "insertionDelimiter": " "
            }
          ],
          "domain": "2:2-2:12"
        }
      ]
    }
  ]
}

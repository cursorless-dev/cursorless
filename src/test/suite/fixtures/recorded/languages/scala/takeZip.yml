languageId: scala
command:
  spokenForm: take zip
  version: 2
  targets:
    - type: primitive
      mark: {type: decoratedSymbol, symbolColor: default, character: z}
  usePrePhraseSnapshot: true
  action: {name: setSelection}
initialState:
  documentContents: |
    def matchTest(x: Int): String = x match {
      case 0 => "zero"
      case 1 => "one"
      case 2 => "two"
      case _ => "other"
    }
  selections:
    - anchor: {line: 6, character: 0}
      active: {line: 6, character: 0}
  marks:
    default.z:
      start: {line: 1, character: 13}
      end: {line: 1, character: 17}
finalState:
  documentContents: |
    def matchTest(x: Int): String = x match {
      case 0 => "zero"
      case 1 => "one"
      case 2 => "two"
      case _ => "other"
    }
  selections:
    - anchor: {line: 1, character: 13}
      active: {line: 1, character: 17}
  thatMark:
    - anchor: {line: 1, character: 13}
      active: {line: 1, character: 17}
fullTargets: [{type: primitive, mark: {type: decoratedSymbol, symbolColor: default, character: z}, modifiers: []}]

languageId: clojure
command:
  version: 1
  spokenForm: chuck item fine
  action: remove
  targets:
    - type: primitive
      modifier: {type: containingScope, scopeType: collectionItem, includeSiblings: false}
      mark: {type: decoratedSymbol, symbolColor: default, character: f}
initialState:
  documentContents: |-
    {
        :foo "bar",
        ;; hello
        :baz "whatever",
    }
  selections:
    - anchor: {line: 4, character: 1}
      active: {line: 4, character: 1}
  marks:
    default.f:
      start: {line: 1, character: 5}
      end: {line: 1, character: 8}
finalState:
  documentContents: |-
    {
        ;; hello
        :baz "whatever",
    }
  selections:
    - anchor: {line: 3, character: 1}
      active: {line: 3, character: 1}
  thatMark:
    - anchor: {line: 1, character: 4}
      active: {line: 1, character: 4}
fullTargets: [{type: primitive, mark: {type: decoratedSymbol, symbolColor: default, character: f, usePrePhraseSnapshot: true}, selectionType: token, position: contents, insideOutsideType: outside, modifier: {type: containingScope, scopeType: collectionItem, includeSiblings: false}}]

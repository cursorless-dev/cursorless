spokenForm: replace air and bat and cap with count
languageId: typescript
command:
  actionName: replace
  partialTargets:
    - type: list
      elements:
        - type: primitive
          mark: {type: decoratedSymbol, symbolColor: default, character: a}
        - type: primitive
          mark: {type: decoratedSymbol, symbolColor: default, character: b}
        - type: primitive
          mark: {type: decoratedSymbol, symbolColor: default, character: c}
  extraArgs:
    - {start: 0}
marks:
  default.a:
    start: {line: 1, character: 0}
    end: {line: 1, character: 1}
  default.b:
    start: {line: 2, character: 0}
    end: {line: 2, character: 1}
  default.c:
    start: {line: 3, character: 0}
    end: {line: 3, character: 1}
initialState:
  documentContents: |

    a
    b
    c
  selections:
    - anchor: {line: 0, character: 0}
      active: {line: 0, character: 0}
finalState:
  documentContents: |

    0
    1
    2
  selections:
    - anchor: {line: 0, character: 0}
      active: {line: 0, character: 0}
  thatMark:
    - anchor: {line: 1, character: 0}
      active: {line: 1, character: 1}
    - anchor: {line: 2, character: 0}
      active: {line: 2, character: 1}
    - anchor: {line: 3, character: 0}
      active: {line: 3, character: 1}
fullTargets: [{type: list, elements: [{type: primitive, mark: {type: decoratedSymbol, symbolColor: default, character: a}, selectionType: token, position: contents, modifier: {type: identity}, insideOutsideType: null}, {type: primitive, mark: {type: decoratedSymbol, symbolColor: default, character: b}, selectionType: token, position: contents, modifier: {type: identity}, insideOutsideType: null}, {type: primitive, mark: {type: decoratedSymbol, symbolColor: default, character: c}, selectionType: token, position: contents, modifier: {type: identity}, insideOutsideType: null}]}]

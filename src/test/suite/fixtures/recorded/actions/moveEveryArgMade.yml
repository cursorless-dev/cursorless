languageId: typescript
command:
  version: 1
  spokenForm: move every arg made
  action: moveToTarget
  targets:
    - type: primitive
      modifier: {type: containingScope, scopeType: argumentOrParameter, includeSiblings: true}
      mark: {type: decoratedSymbol, symbolColor: default, character: m}
    - {type: primitive, isImplicit: true}
initialState:
  documentContents: |
    function myFunk(value: string, name: string, age: number) { };
  selections:
    - anchor: {line: 1, character: 0}
      active: {line: 1, character: 0}
  marks:
    default.m:
      start: {line: 0, character: 31}
      end: {line: 0, character: 35}
finalState:
  documentContents: |-
    function myFunk() { };
    value: string, name: string, age: number
  selections:
    - anchor: {line: 1, character: 40}
      active: {line: 1, character: 40}
  thatMark:
    - anchor: {line: 1, character: 0}
      active: {line: 1, character: 40}
  sourceMark:
    - anchor: {line: 0, character: 16}
      active: {line: 0, character: 16}
fullTargets: [{type: primitive, mark: {type: decoratedSymbol, symbolColor: default, character: m}, selectionType: token, position: contents, insideOutsideType: null, modifier: {type: containingScope, scopeType: argumentOrParameter, includeSiblings: true}, isImplicit: false}, {type: primitive, mark: {type: cursor}, selectionType: token, position: contents, insideOutsideType: null, modifier: {type: identity}, isImplicit: true}]

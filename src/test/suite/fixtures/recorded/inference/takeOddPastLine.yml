spokenForm: take odd past line
languageId: typescript
command:
  actionName: setSelection
  partialTargets:
    - type: range
      start:
        type: primitive
        mark: { type: decoratedSymbol, symbolColor: default, character: o }
      end: { type: primitive, selectionType: line }
      excludeStart: false
      excludeEnd: false
  extraArgs: []
marks:
  default.o:
    start: { line: 0, character: 0 }
    end: { line: 0, character: 5 }
initialState:
  documentContents: |-
    const foo = "hello";

    const bar = "hello";
  selections:
    - anchor: { line: 2, character: 18 }
      active: { line: 2, character: 18 }
finalState:
  documentContents: |-
    const foo = "hello";

    const bar = "hello";
  selections:
    - anchor: { line: 0, character: 0 }
      active: { line: 2, character: 20 }
  thatMark:
    - anchor: { line: 0, character: 0 }
      active: { line: 2, character: 20 }
fullTargets:
  [
    {
      type: range,
      excludeAnchor: false,
      excludeActive: false,
      anchor:
        {
          type: primitive,
          mark: { type: decoratedSymbol, symbolColor: default, character: o },
          selectionType: token,
          position: contents,
          insideOutsideType: inside,
          modifier: { type: identity },
        },
      active:
        {
          type: primitive,
          mark: { type: cursor },
          selectionType: line,
          position: contents,
          insideOutsideType: inside,
          modifier: { type: identity },
        },
    },
  ]

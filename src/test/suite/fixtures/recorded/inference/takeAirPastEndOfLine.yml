languageId: typescript
command:
  version: 1
  spokenForm: take air past end of line
  action: setSelection
  targets:
    - type: range
      start:
        type: primitive
        mark: {type: decoratedSymbol, symbolColor: default, character: a}
      end: {type: primitive, position: after, insideOutsideType: inside, selectionType: line}
      excludeStart: false
      excludeEnd: false
initialState:
  documentContents: |

    const value = "Hello world";

    const value = "Hello world";
  selections:
    - anchor: {line: 0, character: 0}
      active: {line: 0, character: 0}
  marks:
    default.a:
      start: {line: 3, character: 6}
      end: {line: 3, character: 11}
finalState:
  documentContents: |

    const value = "Hello world";

    const value = "Hello world";
  selections:
    - anchor: {line: 3, character: 6}
      active: {line: 3, character: 28}
fullTargets: [{type: range, excludeStart: false, excludeEnd: false, start: {type: primitive, mark: {type: decoratedSymbol, symbolColor: default, character: a}, selectionType: token, position: contents, modifier: {type: identity}, insideOutsideType: inside}, end: {type: primitive, mark: {type: decoratedSymbol, symbolColor: default, character: a}, selectionType: line, position: after, modifier: {type: identity}, insideOutsideType: inside}}]

// See https://go.microsoft.com/fwlink/?LinkId=733558
// for the documentation about the tasks.json format
{
  "version": "2.0.0",
  "tasks": [
    // Generic build tasks
    {
      "label": "TSBuild",
      "type": "npm",
      "script": "compile",
      "problemMatcher": "$tsc",
      "presentation": {
        "reveal": "silent"
      },
      "group": "build"
    },
    {
      "label": "Build test harness",
      "type": "npm",
      "script": "build",
      "path": "packages/test-harness",
      "presentation": {
        "reveal": "silent"
      },
      "group": "build"
    },
    {
      "label": "Generate grammar",
      "type": "npm",
      "script": "generate-grammar",
      "presentation": {
        "reveal": "silent"
      },
      "group": "build"
    },

    // Generic watch tasks
    {
      "label": "watch",
      "dependsOn": ["Watch esbuild", "Watch typescript"],
      "group": "build"
    },
    {
      "type": "npm",
      "script": "watch:esbuild",
      "label": "Watch esbuild",
      "isBackground": true,
      "presentation": {
        "reveal": "never"
      },
      "group": "build"
    },
    {
      "type": "npm",
      "script": "watch:tsc",
      "label": "Watch typescript",
      "problemMatcher": "$tsc-watch",
      "isBackground": true,
      "presentation": {
        "reveal": "never"
      },
      "group": "build"
    },

    // Generic test tasks
    {
      "label": "Ensure test subset file exists",
      "type": "npm",
      "script": "generate-test-subset-file-strict",
      "path": "packages/test-harness",
      "presentation": {
        "reveal": "silent"
      },
      "group": "test"
    },
    {
      "label": "Generate test subset file",
      "type": "npm",
      "script": "generate-test-subset-file",
      "path": "packages/test-harness",
      "presentation": {
        "reveal": "silent"
      },
      "group": "none",
      "problemMatcher": []
    },

    // VSCode tasks
    {
      "label": "VSCode: Build extension",
      "dependsOn": ["VSCode: Populate dist", "VSCode: ESBuild"],
      "group": "build"
    },
    {
      "label": "VSCode: Build extension and tests",
      "dependsOn": ["VSCode: Build extension", "TSBuild", "Build test harness"],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "VSCode: ESBuild",
      "type": "npm",
      "script": "esbuild",
      "path": "packages/cursorless-vscode",
      "dependsOn": ["Generate grammar"],
      "presentation": {
        "reveal": "silent"
      },
      "group": "build"
    },
    {
      "label": "VSCode: Populate dist",
      "type": "npm",
      "script": "populate-dist",
      "path": "packages/cursorless-vscode",
      "dependsOn": ["VSCode: Build tutorial webview"],
      "presentation": {
        "reveal": "silent"
      },
      "group": "build"
    },
    {
      "label": "VSCode: Build tutorial webview",
      "type": "npm",
      "script": "build:dev",
      "path": "packages/cursorless-vscode-tutorial-webview",
      "presentation": {
        "reveal": "silent"
      },
      "group": "build"
    },
    {
      "label": "VSCode: Watch tutorial",
      "type": "npm",
      "script": "watch:tailwind",
      "isBackground": true,
      "presentation": {
        "reveal": "never"
      },
      "path": "packages/cursorless-vscode-tutorial-webview",
      "group": "build"
    },
    {
      "label": "VSCode: Prepare test subset",
      "dependsOn": [
        "Ensure test subset file exists",
        "VSCode: Build extension and tests"
      ],
      "dependsOrder": "sequence",
      "group": "test"
    },

    // Neovim tasks
    {
      "label": "Neovim: Build extension",
      "dependsOn": [
        "Neovim: Launch neovim",
        "Neovim: ESBuild",
        "Neovim: Populate dist"
      ],
      "group": "build"
    },
    {
      "label": "Neovim: Build extension and tests",
      "dependsOn": [
        "Neovim: Launch neovim (test)",
        "Neovim: ESBuild",
        "Neovim: Populate dist",
        "TSBuild",
        "Build test harness"
      ],
      "group": "build"
    },
    {
      "label": "Neovim: ESBuild",
      "type": "npm",
      "script": "esbuild",
      "path": "packages/cursorless-neovim",
      "dependsOn": ["Generate grammar"],
      "presentation": {
        "reveal": "silent"
      },
      "group": "build"
    },
    {
      "label": "Neovim: Populate dist",
      "type": "npm",
      "script": "populate-dist",
      "path": "packages/cursorless-neovim",
      "presentation": {
        "reveal": "silent"
      },
      "options": {
        "env": {
          "CURSORLESS_REPO_ROOT": "${workspaceFolder}"
        }
      },
      "group": "build"
    },
    {
      "label": "Neovim: Launch neovim",
      "type": "process",
      "command": "packages/cursorless-neovim/scripts/linux-terminal.sh",
      "args": [
        "${workspaceFolder}/packages/cursorless-neovim/scripts/debug-neovim.sh ${workspaceFolder} development"
      ],
      "osx": {
        "command": "osascript",
        "args": [
          "-e",
          "tell app \"Terminal\" to do script \"${workspaceFolder}/packages/cursorless-neovim/scripts/debug-neovim.sh ${workspaceFolder} development\" activate"
        ]
      },
      "windows": {
        "command": "powershell",
        "args": [
          "(New-Object -ComObject WScript.Shell).Run(\"\"\"${workspaceFolder}/packages/cursorless-neovim/scripts/debug-neovim.bat\"\"\", 1, $false)"
        ]
      },
      "group": "build",
      "presentation": {
        "reveal": "silent"
      },
      "options": {
        "env": {
          "CURSORLESS_REPO_ROOT": "${workspaceFolder}",
          "NVIM_NODE_HOST_DEBUG": "1",
          "NVIM_NODE_LOG_FILE": "${workspaceFolder}/packages/cursorless-neovim/out/nvim_node.log",
          "NVIM_NODE_LOG_LEVEL": "info",
          "CURSORLESS_MODE": "development"
        }
      }
    },
    {
      "label": "Neovim: Launch neovim (test)",
      "type": "process",
      "command": "packages/cursorless-neovim/scripts/linux-terminal.sh",
      "args": [
        "${workspaceFolder}/packages/cursorless-neovim/scripts/debug-neovim.sh ${workspaceFolder} test"
      ],
      "osx": {
        "command": "osascript",
        "args": [
          "-e",
          "tell app \"Terminal\" to do script \"${workspaceFolder}/packages/cursorless-neovim/scripts/debug-neovim.sh ${workspaceFolder} test\" activate"
        ]
      },
      "windows": {
        "command": "powershell",
        "args": [
          "(New-Object -ComObject WScript.Shell).Run(\"\"\"${workspaceFolder}/packages/cursorless-neovim/scripts/debug-neovim.bat\"\"\", 1, $false)"
        ]
      },
      "group": "build",
      "presentation": {
        "reveal": "silent"
      },
      "options": {
        "env": {
          "CURSORLESS_REPO_ROOT": "${workspaceFolder}",
          "NVIM_NODE_HOST_DEBUG": "1",
          "NVIM_NODE_LOG_FILE": "${workspaceFolder}/packages/cursorless-neovim/out/nvim_node.log",
          "NVIM_NODE_LOG_LEVEL": "info",
          "CURSORLESS_MODE": "test"
        }
      }
    },
    {
      "label": "Neovim: Show logs",
      "type": "shell",
      "command": "packages/cursorless-neovim/scripts/show-logs.sh",
      "problemMatcher": [],
      "isBackground": true,
      "presentation": {
        "echo": false,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "options": {
        "env": {
          "CURSORLESS_REPO_ROOT": "${workspaceFolder}"
        }
      }
      // NOTE: We don't have a way on Windows atm due to command with argument inside Run() not working
      // so we need to show logs outside of vscode (see #2454)
    },
    {
      "label": "Neovim: Launch neovim (lua test)",
      "type": "shell",
      "command": "busted --run unit",
      "options": {
        "cwd": "cursorless.nvim"
      }
    },

    // cursorless.org
    {
      "label": "Serve cursorless.org",
      "type": "shell",
      "command": "nx serve cursorless-org",
      "options": {
        "cwd": "cursorless-nx"
      },
      "problemMatcher": []
    },
    {
      "label": "Install local",
      "type": "npm",
      "path": "packages/cursorless-vscode",
      "script": "install-local",
      "problemMatcher": []
    },
    {
      "label": "Uninstall local",
      "type": "npm",
      "path": "packages/cursorless-vscode",
      "script": "uninstall-local",
      "problemMatcher": []
    },
    {
      "label": "Run pre commit",
      "type": "shell",
      "command": "pre-commit run",
      "presentation": {}
    }
  ]
}
